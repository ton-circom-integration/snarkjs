var snarkjs=function(t){"use strict";const a=[0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];function e(t,a){return a&&10!=a?16==a?"0x"==t.slice(0,2)?BigInt(t):BigInt("0x"+t):void 0:BigInt(t)}const o=e;function i(t){const e=t.toString(16);return 4*(e.length-1)+a[parseInt(e[0],16)]}function n(t){return BigInt(t)<BigInt(0)}function l(t){return!t}function c(t,a){return BigInt(t)<<BigInt(a)}function s(t,a){return BigInt(t)>>BigInt(a)}const r=c,d=s;function u(t){return(BigInt(t)&BigInt(1))==BigInt(1)}function _(t){let a=BigInt(t);const e=[];for(;a;)a&BigInt(1)?e.push(1):e.push(0),a>>=BigInt(1);return e}function g(t){if(t>BigInt(Number.MAX_SAFE_INTEGER))throw new Error("Number too big");return Number(t)}function f(t,a){return BigInt(t)+BigInt(a)}function p(t,a){return BigInt(t)-BigInt(a)}function h(t){return-BigInt(t)}function m(t,a){return BigInt(t)*BigInt(a)}function L(t,a){return BigInt(t)**BigInt(a)}function b(t,a){return BigInt(t)/BigInt(a)}function w(t,a){return BigInt(t)%BigInt(a)}function y(t,a){return BigInt(t)==BigInt(a)}function A(t,a){return BigInt(t)>BigInt(a)}function C(t,a){return BigInt(t)>=BigInt(a)}function x(t,a){return BigInt(t)&BigInt(a)}function F(t,a,e,o){const i="0000000"+e.toString(16),n=new Uint32Array(t.buffer,t.byteOffset+a,o/4),l=1+(4*(i.length-7)-1>>5);for(let t=0;t<l;t++)n[t]=parseInt(i.substring(i.length-8*t-8,i.length-8*t),16);for(let t=l;t<n.length;t++)n[t]=0;for(let a=4*n.length;a<o;a++)t[a]=g(x(s(e,8*a),255))}function I(t,a,e,o){const i="0000000"+e.toString(16),n=new DataView(t.buffer,t.byteOffset+a,o),l=1+(4*(i.length-7)-1>>5);for(let t=0;t<l;t++)n.setUint32(o-4*t-4,parseInt(i.substring(i.length-8*t-8,i.length-8*t),16),!1);for(let t=0;t<o/4-l;t++)n[t]=0}function B(t,a,o){o=o||t.byteLength,a=a||0;const i=new Uint32Array(t.buffer,t.byteOffset+a,o/4),n=new Array(o/4);return i.forEach(((t,a)=>n[n.length-a-1]=t.toString(16).padStart(8,"0"))),e(n.join(""),16)}function E(t,a,o){o=o||t.byteLength,a=a||0;const i=new DataView(t.buffer,t.byteOffset+a,o),n=new Array(o/4);for(let t=0;t<o/4;t++)n[t]=i.getUint32(4*t,!1).toString(16).padStart(8,"0");return e(n.join(""),16)}function v(t,a){return t.toString(a)}function S(t){const a=new Uint8Array(Math.floor((i(t)-1)/8)+1);return F(a,0,t,a.byteLength),a}const P=o(0),O=o(1);var q=Object.freeze({__proto__:null,fromString:e,e:o,fromArray:function(t,a){let e=BigInt(0);a=BigInt(a);for(let o=0;o<t.length;o++)e=e*a+BigInt(t[o]);return e},bitLength:i,isNegative:n,isZero:l,shiftLeft:c,shiftRight:s,shl:r,shr:d,isOdd:u,naf:function(t){let a=BigInt(t);const e=[];for(;a;){if(a&BigInt(1)){const t=2-Number(a%BigInt(4));e.push(t),a-=BigInt(t)}else e.push(0);a>>=BigInt(1)}return e},bits:_,toNumber:g,toArray:function(t,a){const e=[];let o=BigInt(t);for(a=BigInt(a);o;)e.unshift(Number(o%a)),o/=a;return e},add:f,sub:p,neg:h,mul:m,square:function(t){return BigInt(t)*BigInt(t)},pow:L,exp:function(t,a){return BigInt(t)**BigInt(a)},abs:function(t){return BigInt(t)>=0?BigInt(t):-BigInt(t)},div:b,mod:w,eq:y,neq:function(t,a){return BigInt(t)!=BigInt(a)},lt:function(t,a){return BigInt(t)<BigInt(a)},gt:A,leq:function(t,a){return BigInt(t)<=BigInt(a)},geq:C,band:x,bor:function(t,a){return BigInt(t)|BigInt(a)},bxor:function(t,a){return BigInt(t)^BigInt(a)},land:function(t,a){return BigInt(t)&&BigInt(a)},lor:function(t,a){return BigInt(t)||BigInt(a)},lnot:function(t){return!BigInt(t)},toRprLE:F,toRprBE:I,fromRprLE:B,fromRprBE:E,toString:v,toLEBuff:S,zero:P,one:O});function G(t,a,e){if(l(e))return t.one;const o=_(e);if(0==o.length)return t.one;let i=a;for(let e=o.length-2;e>=0;e--)i=t.square(i),o[e]&&(i=t.mul(i,a));return i}function z(t){if(t.m%2==1)if(y(w(t.p,4),1))if(y(w(t.p,8),1))if(y(w(t.p,16),1))!function(t){t.sqrt_q=L(t.p,t.m),t.sqrt_s=0,t.sqrt_t=p(t.sqrt_q,1);for(;!u(t.sqrt_t);)t.sqrt_s=t.sqrt_s+1,t.sqrt_t=b(t.sqrt_t,2);let a=t.one;for(;t.eq(a,t.one);){const e=t.random();t.sqrt_z=t.pow(e,t.sqrt_t),a=t.pow(t.sqrt_z,2**(t.sqrt_s-1))}t.sqrt_tm1d2=b(p(t.sqrt_t,1),2),t.sqrt=function(t){const a=this;if(a.isZero(t))return a.zero;let e=a.pow(t,a.sqrt_tm1d2);const o=a.pow(a.mul(a.square(e),t),2**(a.sqrt_s-1));if(a.eq(o,a.negone))return null;let i=a.sqrt_s,n=a.mul(t,e),l=a.mul(n,e),c=a.sqrt_z;for(;!a.eq(l,a.one);){let t=a.square(l),o=1;for(;!a.eq(t,a.one);)t=a.square(t),o++;e=c;for(let t=0;t<i-o-1;t++)e=a.square(e);c=a.square(e),l=a.mul(l,c),n=a.mul(n,e),i=o}return a.geq(n,a.zero)?n:a.neg(n)}}(t);else{if(!y(w(t.p,16),9))throw new Error("Field withot sqrt");!function(t){t.sqrt=function(){throw new Error("Sqrt alg 4 not implemented")}}(t)}else{if(!y(w(t.p,8),5))throw new Error("Field withot sqrt");!function(t){t.sqrt=function(){throw new Error("Sqrt alg 3 not implemented")}}(t)}else y(w(t.p,4),3)&&function(t){t.sqrt_q=L(t.p,t.m),t.sqrt_e1=b(p(t.sqrt_q,3),4),t.sqrt=function(a){if(this.isZero(a))return this.zero;const e=this.pow(a,this.sqrt_e1),o=this.mul(this.square(e),a);if(this.eq(o,this.negone))return null;const i=this.mul(e,a);return t.geq(i,t.zero)?i:t.neg(i)}}(t);else{const a=w(L(t.p,t.m/2),4);1==a?function(t){t.sqrt=function(){throw new Error("Sqrt alg 10 not implemented")}}(t):3==a?function(t){t.sqrt_q=L(t.p,t.m/2),t.sqrt_e34=b(p(t.sqrt_q,3),4),t.sqrt_e12=b(p(t.sqrt_q,1),2),t.frobenius=function(a,e){return a%2==1?t.conjugate(e):e},t.sqrt=function(t){const a=this,e=a.pow(t,a.sqrt_e34),o=a.mul(a.square(e),t),i=a.mul(a.frobenius(1,o),o);if(a.eq(i,a.negone))return null;const n=a.mul(e,t);let l;if(a.eq(o,a.negone))l=a.mul(n,[a.F.zero,a.F.one]);else{const t=a.pow(a.add(a.one,o),a.sqrt_e12);l=a.mul(t,n)}return a.geq(l,a.zero)?l:a.neg(l)}}(t):function(t){t.sqrt=function(){throw new Error("Sqrt alg 8 not implemented")}}(t)}}function T(t,a,e,o,i){t[a]=t[a]+t[e]>>>0,t[i]=(t[i]^t[a])>>>0,t[i]=(t[i]<<16|t[i]>>>16&65535)>>>0,t[o]=t[o]+t[i]>>>0,t[e]=(t[e]^t[o])>>>0,t[e]=(t[e]<<12|t[e]>>>20&4095)>>>0,t[a]=t[a]+t[e]>>>0,t[i]=(t[i]^t[a])>>>0,t[i]=(t[i]<<8|t[i]>>>24&255)>>>0,t[o]=t[o]+t[i]>>>0,t[e]=(t[e]^t[o])>>>0,t[e]=(t[e]<<7|t[e]>>>25&127)>>>0}class M{constructor(t){t=t||[0,0,0,0,0,0,0,0],this.state=[1634760805,857760878,2036477234,1797285236,t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],0,0,0,0],this.idx=16,this.buff=new Array(16)}nextU32(){return 16==this.idx&&this.update(),this.buff[this.idx++]}nextU64(){return f(m(this.nextU32(),4294967296),this.nextU32())}nextBool(){return 1==(1&this.nextU32())}update(){for(let t=0;t<16;t++)this.buff[t]=this.state[t];for(let a=0;a<10;a++)T(t=this.buff,0,4,8,12),T(t,1,5,9,13),T(t,2,6,10,14),T(t,3,7,11,15),T(t,0,5,10,15),T(t,1,6,11,12),T(t,2,7,8,13),T(t,3,4,9,14);var t;for(let t=0;t<16;t++)this.buff[t]=this.buff[t]+this.state[t]>>>0;this.idx=0,this.state[12]=this.state[12]+1>>>0,0==this.state[12]&&(this.state[13]=this.state[13]+1>>>0,0==this.state[13]&&(this.state[14]=this.state[14]+1>>>0,0==this.state[14]&&(this.state[15]=this.state[15]+1>>>0)))}}var U={};function Q(t){let a=new Uint8Array(t);if(void 0!==globalThis.crypto)globalThis.crypto.getRandomValues(a);else for(let e=0;e<t;e++)a[e]=4294967296*Math.random()>>>0;return a}let k=null;function R(){return k||(k=new M(function(){const t=Q(32),a=new Uint32Array(t.buffer),e=[];for(let t=0;t<8;t++)e.push(a[t]);return e}()),k)}class N{constructor(t,a,e){this.F=a,this.G=t,this.opMulGF=e;let o=a.sqrt_t||a.t,i=a.sqrt_s||a.s,n=a.one;for(;a.eq(a.pow(n,a.half),a.one);)n=a.add(n,a.one);this.w=new Array(i+1),this.wi=new Array(i+1),this.w[i]=this.F.pow(n,o),this.wi[i]=this.F.inv(this.w[i]);let l=i-1;for(;l>=0;)this.w[l]=this.F.square(this.w[l+1]),this.wi[l]=this.F.square(this.wi[l+1]),l--;this.roots=[],this._setRoots(Math.min(i,15))}_setRoots(t){for(let a=t;a>=0&&!this.roots[a];a--){let t=this.F.one;const e=1<<a,o=new Array(e);for(let i=0;i<e;i++)o[i]=t,t=this.F.mul(t,this.w[a]);this.roots[a]=o}}fft(t){if(t.length<=1)return t;const a=D(t.length-1)+1;this._setRoots(a);const e=1<<a;if(t.length!=e)throw new Error("Size must be multiple of 2");return $(this,t,a,0,1)}ifft(t){if(t.length<=1)return t;const a=D(t.length-1)+1;this._setRoots(a);const e=1<<a;if(t.length!=e)throw new Error("Size must be multiple of 2");const o=$(this,t,a,0,1),i=this.F.inv(this.F.mulScalar(this.F.one,e)),n=new Array(e);for(let t=0;t<e;t++)n[t]=this.opMulGF(o[(e-t)%e],i);return n}}function D(t){return(0!=(4294901760&t)?(t&=4294901760,16):0)|(0!=(4278255360&t)?(t&=4278255360,8):0)|(0!=(4042322160&t)?(t&=4042322160,4):0)|(0!=(3435973836&t)?(t&=3435973836,2):0)|0!=(2863311530&t)}function $(t,a,e,o,i){const n=1<<e;if(1==n)return[a[o]];if(2==n)return[t.G.add(a[o],a[o+i]),t.G.sub(a[o],a[o+i])];const l=n>>1,c=$(t,a,e-1,o,2*i),s=$(t,a,e-1,o+i,2*i),r=new Array(n);for(let a=0;a<l;a++)r[a]=t.G.add(c[a],t.opMulGF(s[a],t.roots[e][a])),r[a+l]=t.G.sub(c[a],t.opMulGF(s[a],t.roots[e][a]));return r}class j{constructor(t){this.type="F1",this.one=BigInt(1),this.zero=BigInt(0),this.p=BigInt(t),this.m=1,this.negone=this.p-this.one,this.two=BigInt(2),this.half=this.p>>this.one,this.bitLength=i(this.p),this.mask=(this.one<<BigInt(this.bitLength))-this.one,this.n64=Math.floor((this.bitLength-1)/64)+1,this.n32=2*this.n64,this.n8=8*this.n64,this.R=this.e(this.one<<BigInt(64*this.n64)),this.Ri=this.inv(this.R);const a=this.negone>>this.one;this.nqr=this.two;let e=this.pow(this.nqr,a);for(;!this.eq(e,this.negone);)this.nqr=this.nqr+this.one,e=this.pow(this.nqr,a);for(this.s=0,this.t=this.negone;(this.t&this.one)==this.zero;)this.s=this.s+1,this.t=this.t>>this.one;this.nqr_to_t=this.pow(this.nqr,this.t),z(this),this.FFT=new N(this,this,this.mul.bind(this)),this.fft=this.FFT.fft.bind(this.FFT),this.ifft=this.FFT.ifft.bind(this.FFT),this.w=this.FFT.w,this.wi=this.FFT.wi,this.shift=this.square(this.nqr),this.k=this.exp(this.nqr,2**this.s)}e(t,a){let e;if(a?16==a&&(e=BigInt("0x"+t)):e=BigInt(t),e<0){let t=-e;return t>=this.p&&(t%=this.p),this.p-t}return e>=this.p?e%this.p:e}add(t,a){const e=t+a;return e>=this.p?e-this.p:e}sub(t,a){return t>=a?t-a:this.p-a+t}neg(t){return t?this.p-t:t}mul(t,a){return t*a%this.p}mulScalar(t,a){return t*this.e(a)%this.p}square(t){return t*t%this.p}eq(t,a){return t==a}neq(t,a){return t!=a}lt(t,a){return(t>this.half?t-this.p:t)<(a>this.half?a-this.p:a)}gt(t,a){return(t>this.half?t-this.p:t)>(a>this.half?a-this.p:a)}leq(t,a){return(t>this.half?t-this.p:t)<=(a>this.half?a-this.p:a)}geq(t,a){return(t>this.half?t-this.p:t)>=(a>this.half?a-this.p:a)}div(t,a){return this.mul(t,this.inv(a))}idiv(t,a){if(!a)throw new Error("Division by zero");return t/a}inv(t){if(!t)throw new Error("Division by zero");let a=this.zero,e=this.p,o=this.one,i=t%this.p;for(;i;){let t=e/i;[a,o]=[o,a-t*o],[e,i]=[i,e-t*i]}return a<this.zero&&(a+=this.p),a}mod(t,a){return t%a}pow(t,a){return G(this,t,a)}exp(t,a){return G(this,t,a)}band(t,a){const e=t&a&this.mask;return e>=this.p?e-this.p:e}bor(t,a){const e=(t|a)&this.mask;return e>=this.p?e-this.p:e}bxor(t,a){const e=(t^a)&this.mask;return e>=this.p?e-this.p:e}bnot(t){const a=t^this.mask;return a>=this.p?a-this.p:a}shl(t,a){if(Number(a)<this.bitLength){const e=t<<a&this.mask;return e>=this.p?e-this.p:e}{const e=this.p-a;return Number(e)<this.bitLength?t>>e:this.zero}}shr(t,a){if(Number(a)<this.bitLength)return t>>a;{const e=this.p-a;if(Number(e)<this.bitLength){const a=t<<e&this.mask;return a>=this.p?a-this.p:a}return 0}}land(t,a){return t&&a?this.one:this.zero}lor(t,a){return t||a?this.one:this.zero}lnot(t){return t?this.zero:this.one}sqrt_old(t){if(t==this.zero)return this.zero;if(this.pow(t,this.negone>>this.one)!=this.one)return null;let a=this.s,e=this.nqr_to_t,o=this.pow(t,this.t),i=this.pow(t,this.add(this.t,this.one)>>this.one);for(;o!=this.one;){let t=this.square(o),n=1;for(;t!=this.one;)n++,t=this.square(t);let l=e;for(let t=0;t<a-n-1;t++)l=this.square(l);a=n,e=this.square(l),o=this.mul(o,e),i=this.mul(i,l)}return i>this.p>>this.one&&(i=this.neg(i)),i}normalize(t,a){if((t=BigInt(t,a))<0){let a=-t;return a>=this.p&&(a%=this.p),this.p-a}return t>=this.p?t%this.p:t}random(){const t=2*this.bitLength/8;let a=this.zero;for(let e=0;e<t;e++)a=(a<<BigInt(8))+BigInt(Q(1)[0]);return a%this.p}toString(t,a){let e;if(a=a||10,t>this.half&&10==a){e="-"+(this.p-t).toString(a)}else e=t.toString(a);return e}isZero(t){return t==this.zero}fromRng(t){let a;do{a=this.zero;for(let e=0;e<this.n64;e++)a+=t.nextU64()<<BigInt(64*e);a&=this.mask}while(a>=this.p);return a=a*this.Ri%this.p,a}fft(t){return this.FFT.fft(t)}ifft(t){return this.FFT.ifft(t)}toRprLE(t,a,e){F(t,a,e,8*this.n64)}toRprBE(t,a,e){I(t,a,e,8*this.n64)}toRprBEM(t,a,e){return this.toRprBE(t,a,this.mul(this.R,e))}toRprLEM(t,a,e){return this.toRprLE(t,a,this.mul(this.R,e))}fromRprLE(t,a){return B(t,a,this.n8)}fromRprBE(t,a){return E(t,a,this.n8)}fromRprLEM(t,a){return this.mul(this.fromRprLE(t,a),this.Ri)}fromRprBEM(t,a){return this.mul(this.fromRprBE(t,a),this.Ri)}toObject(t){return t}}var V="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},K={bigInt2BytesLE:function(t,a){const e=Array(a);let o=BigInt(t);for(let t=0;t<a;t++)e[t]=Number(0xFFn&o),o>>=8n;return e},bigInt2U32LE:function(t,a){const e=Array(a);let o=BigInt(t);for(let t=0;t<a;t++)e[t]=Number(0xFFFFFFFFn&o),o>>=32n;return e},isOcamNum:function(t){return!!Array.isArray(t)&&(3==t.length&&("number"==typeof t[0]&&("number"==typeof t[1]&&!!Array.isArray(t[2]))))}},H=function(t,a,e,o,i,n,l){const c=t.addFunction(a);c.addParam("base","i32"),c.addParam("scalar","i32"),c.addParam("scalarLength","i32"),c.addParam("r","i32"),c.addLocal("i","i32"),c.addLocal("b","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(e));c.addCode(s.if(s.i32_eqz(s.getLocal("scalarLength")),[...s.call(l,s.getLocal("r")),...s.ret([])])),c.addCode(s.call(n,s.getLocal("base"),r)),c.addCode(s.call(l,s.getLocal("r"))),c.addCode(s.setLocal("i",s.getLocal("scalarLength"))),c.addCode(s.block(s.loop(s.setLocal("i",s.i32_sub(s.getLocal("i"),s.i32_const(1))),s.setLocal("b",s.i32_load8_u(s.i32_add(s.getLocal("scalar"),s.getLocal("i")))),...function(){const t=[];for(let a=0;a<8;a++)t.push(...s.call(i,s.getLocal("r"),s.getLocal("r")),...s.if(s.i32_ge_u(s.getLocal("b"),s.i32_const(128>>a)),[...s.setLocal("b",s.i32_sub(s.getLocal("b"),s.i32_const(128>>a))),...s.call(o,s.getLocal("r"),r,s.getLocal("r"))]));return t}(),s.br_if(1,s.i32_eqz(s.getLocal("i"))),s.br(0))))},Z=function(t,a){const e=8*t.modules[a].n64,o=t.addFunction(a+"_batchInverse");o.addParam("pIn","i32"),o.addParam("inStep","i32"),o.addParam("n","i32"),o.addParam("pOut","i32"),o.addParam("outStep","i32"),o.addLocal("itAux","i32"),o.addLocal("itIn","i32"),o.addLocal("itOut","i32"),o.addLocal("i","i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(e));o.addCode(i.setLocal("itAux",i.i32_load(i.i32_const(0))),i.i32_store(i.i32_const(0),i.i32_add(i.getLocal("itAux"),i.i32_mul(i.i32_add(i.getLocal("n"),i.i32_const(1)),i.i32_const(e))))),o.addCode(i.call(a+"_one",i.getLocal("itAux")),i.setLocal("itIn",i.getLocal("pIn")),i.setLocal("itAux",i.i32_add(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("i",i.i32_const(0)),i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("i"),i.getLocal("n"))),i.if(i.call(a+"_isZero",i.getLocal("itIn")),i.call(a+"_copy",i.i32_sub(i.getLocal("itAux"),i.i32_const(e)),i.getLocal("itAux")),i.call(a+"_mul",i.getLocal("itIn"),i.i32_sub(i.getLocal("itAux"),i.i32_const(e)),i.getLocal("itAux"))),i.setLocal("itIn",i.i32_add(i.getLocal("itIn"),i.getLocal("inStep"))),i.setLocal("itAux",i.i32_add(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("i",i.i32_add(i.getLocal("i"),i.i32_const(1))),i.br(0))),i.setLocal("itIn",i.i32_sub(i.getLocal("itIn"),i.getLocal("inStep"))),i.setLocal("itAux",i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("itOut",i.i32_add(i.getLocal("pOut"),i.i32_mul(i.i32_sub(i.getLocal("n"),i.i32_const(1)),i.getLocal("outStep")))),i.call(a+"_inverse",i.getLocal("itAux"),i.getLocal("itAux")),i.block(i.loop(i.br_if(1,i.i32_eqz(i.getLocal("i"))),i.if(i.call(a+"_isZero",i.getLocal("itIn")),[...i.call(a+"_copy",i.getLocal("itAux"),i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),...i.call(a+"_zero",i.getLocal("itOut"))],[...i.call(a+"_copy",i.i32_sub(i.getLocal("itAux"),i.i32_const(e)),n),...i.call(a+"_mul",i.getLocal("itAux"),i.getLocal("itIn"),i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),...i.call(a+"_mul",i.getLocal("itAux"),n,i.getLocal("itOut"))]),i.setLocal("itIn",i.i32_sub(i.getLocal("itIn"),i.getLocal("inStep"))),i.setLocal("itOut",i.i32_sub(i.getLocal("itOut"),i.getLocal("outStep"))),i.setLocal("itAux",i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("i",i.i32_sub(i.getLocal("i"),i.i32_const(1))),i.br(0)))),o.addCode(i.i32_store(i.i32_const(0),i.getLocal("itAux")))};var W=function(t,a,e,o,i,n){void 0===n&&(n=o<i);const l=t.addFunction(a);l.addParam("pIn","i32"),l.addParam("n","i32"),l.addParam("pOut","i32"),l.addLocal("i","i32"),l.addLocal("itIn","i32"),l.addLocal("itOut","i32");const c=l.getCodeBuilder();n?l.addCode(c.setLocal("itIn",c.i32_add(c.getLocal("pIn"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.i32_const(1)),c.i32_const(o)))),c.setLocal("itOut",c.i32_add(c.getLocal("pOut"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.i32_const(1)),c.i32_const(i)))),c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(e,c.getLocal("itIn"),c.getLocal("itOut")),c.setLocal("itIn",c.i32_sub(c.getLocal("itIn"),c.i32_const(o))),c.setLocal("itOut",c.i32_sub(c.getLocal("itOut"),c.i32_const(i))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0)))):l.addCode(c.setLocal("itIn",c.getLocal("pIn")),c.setLocal("itOut",c.getLocal("pOut")),c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(e,c.getLocal("itIn"),c.getLocal("itOut")),c.setLocal("itIn",c.i32_add(c.getLocal("itIn"),c.i32_const(o))),c.setLocal("itOut",c.i32_add(c.getLocal("itOut"),c.i32_const(i))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0))))};var Y=function(t,a,e,o,i,n){void 0===n&&(n=o<i);const l=t.addFunction(a);l.addParam("pIn1","i32"),l.addParam("pIn2","i32"),l.addParam("n","i32"),l.addParam("pOut","i32"),l.addLocal("i","i32"),l.addLocal("itIn1","i32"),l.addLocal("itIn2","i32"),l.addLocal("itOut","i32");const c=l.getCodeBuilder();n?l.addCode(c.setLocal("itIn1",c.i32_add(c.getLocal("pIn1"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.i32_const(1)),c.i32_const(o)))),c.setLocal("itIn2",c.i32_add(c.getLocal("pIn2"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.i32_const(1)),c.i32_const(o)))),c.setLocal("itOut",c.i32_add(c.getLocal("pOut"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.i32_const(1)),c.i32_const(i)))),c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(e,c.getLocal("itIn1"),c.getLocal("itIn2"),c.getLocal("itOut")),c.setLocal("itIn1",c.i32_sub(c.getLocal("itIn1"),c.i32_const(o))),c.setLocal("itIn2",c.i32_sub(c.getLocal("itIn2"),c.i32_const(o))),c.setLocal("itOut",c.i32_sub(c.getLocal("itOut"),c.i32_const(i))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0)))):l.addCode(c.setLocal("itIn1",c.getLocal("pIn1")),c.setLocal("itIn2",c.getLocal("pIn2")),c.setLocal("itOut",c.getLocal("pOut")),c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(e,c.getLocal("itIn1"),c.getLocal("itIn2"),c.getLocal("itOut")),c.setLocal("itIn1",c.i32_add(c.getLocal("itIn1"),c.i32_const(o))),c.setLocal("itIn2",c.i32_add(c.getLocal("itIn2"),c.i32_const(o))),c.setLocal("itOut",c.i32_add(c.getLocal("itOut"),c.i32_const(i))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0))))};var J={};function X(t,a){return t===a?0:t>a?1:-1}function tt(t){return t*t}function at(t){return t%2n!==0n}function et(t){return t%2n===0n}function ot(t){return t<0n}function it(t){return t>0n}function nt(t){return ot(t)?t.toString(2).length-1:t.toString(2).length}function lt(t){return t<0n?-t:t}function ct(t){return 1n===lt(t)}function st(t,a){for(var e,o,i,n=0n,l=1n,c=a,s=lt(t);0n!==s;)e=c/s,o=n,i=c,n=l,c=s,l=o-e*l,s=i-e*s;if(!ct(c))throw new Error(t.toString()+" and "+a.toString()+" are not co-prime");return-1===X(n,0n)&&(n+=a),ot(t)?-n:n}function rt(t,a,e){if(0n===e)throw new Error("Cannot take modPow with modulus 0");var o=1n,i=t%e;for(ot(a)&&(a*=-1n,i=st(i,e));it(a);){if(0n===i)return 0n;at(a)&&(o=o*i%e),a/=2n,i=tt(i)%e}return o}function dt(t,a){return 0n!==a&&(!!ct(a)||(0===function(t,a){return(t=t>=0n?t:-t)===(a=a>=0n?a:-a)?0:t>a?1:-1}(a,2n)?et(t):t%a===0n))}function ut(t,a){for(var e,o,i,n=function(t){return t-1n}(t),l=n,c=0;et(l);)l/=2n,c++;t:for(o=0;o<a.length;o++)if(!(t<a[o]||ct(i=rt(BigInt(a[o]),l,t))||i===n)){for(e=c-1;0!=e;e--){if(ct(i=tt(i)%t))return!1;if(i===n)continue t}return!1}return!0}J.bitLength=nt,J.isOdd=at,J.isNegative=ot,J.abs=lt,J.isUnit=ct,J.compare=X,J.modInv=st,J.modPow=rt,J.isPrime=function(t){var a=function(t){var a=lt(t);return!ct(a)&&(2n===a||3n===a||5n===a||!(et(a)||dt(a,3n)||dt(a,5n))&&(a<49n||void 0))}(t);if(void 0!==a)return a;var e=lt(t),o=nt(e);if(o<=64)return ut(e,[2,3,5,7,11,13,17,19,23,29,31,37]);for(var i=Math.log(2)*Number(o),n=Math.ceil(i),l=[],c=0;c<n;c++)l.push(BigInt(c+2));return ut(e,l)},J.square=tt;const _t=function(t,a,e){const o=e||"int";if(t.modules[o])return o;t.modules[o]={};const i=2*a,n=8*a;return function(){const e=t.addFunction(o+"_copy");e.addParam("px","i32"),e.addParam("pr","i32");const i=e.getCodeBuilder();for(let t=0;t<a;t++)e.addCode(i.i64_store(i.getLocal("pr"),8*t,i.i64_load(i.getLocal("px"),8*t)))}(),function(){const e=t.addFunction(o+"_zero");e.addParam("pr","i32");const i=e.getCodeBuilder();for(let t=0;t<a;t++)e.addCode(i.i64_store(i.getLocal("pr"),8*t,i.i64_const(0)))}(),function(){const e=t.addFunction(o+"_isZero");e.addParam("px","i32"),e.setReturnType("i32");const i=e.getCodeBuilder();e.addCode(function t(a){return 0==a?i.ret(i.i64_eqz(i.i64_load(i.getLocal("px")))):i.if(i.i64_eqz(i.i64_load(i.getLocal("px"),8*a)),t(a-1),i.ret(i.i32_const(0)))}(a-1)),e.addCode(i.ret(i.i32_const(0)))}(),function(){const e=t.addFunction(o+"_one");e.addParam("pr","i32");const i=e.getCodeBuilder();e.addCode(i.i64_store(i.getLocal("pr"),0,i.i64_const(1)));for(let t=1;t<a;t++)e.addCode(i.i64_store(i.getLocal("pr"),8*t,i.i64_const(0)))}(),function(){const e=t.addFunction(o+"_eq");e.addParam("px","i32"),e.addParam("py","i32"),e.setReturnType("i32");const i=e.getCodeBuilder();e.addCode(function t(a){return 0==a?i.ret(i.i64_eq(i.i64_load(i.getLocal("px")),i.i64_load(i.getLocal("py")))):i.if(i.i64_eq(i.i64_load(i.getLocal("px"),8*a),i.i64_load(i.getLocal("py"),8*a)),t(a-1),i.ret(i.i32_const(0)))}(a-1)),e.addCode(i.ret(i.i32_const(0)))}(),function(){const e=t.addFunction(o+"_gte");e.addParam("px","i32"),e.addParam("py","i32"),e.setReturnType("i32");const i=e.getCodeBuilder();e.addCode(function t(a){return 0==a?i.ret(i.i64_ge_u(i.i64_load(i.getLocal("px")),i.i64_load(i.getLocal("py")))):i.if(i.i64_lt_u(i.i64_load(i.getLocal("px"),8*a),i.i64_load(i.getLocal("py"),8*a)),i.ret(i.i32_const(0)),i.if(i.i64_gt_u(i.i64_load(i.getLocal("px"),8*a),i.i64_load(i.getLocal("py"),8*a)),i.ret(i.i32_const(1)),t(a-1)))}(a-1)),e.addCode(i.ret(i.i32_const(0)))}(),function(){const a=t.addFunction(o+"_add");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32"),a.setReturnType("i32"),a.addLocal("c","i64");const e=a.getCodeBuilder();a.addCode(e.setLocal("c",e.i64_add(e.i64_load32_u(e.getLocal("x")),e.i64_load32_u(e.getLocal("y"))))),a.addCode(e.i64_store32(e.getLocal("r"),e.getLocal("c")));for(let t=1;t<i;t++)a.addCode(e.setLocal("c",e.i64_add(e.i64_add(e.i64_load32_u(e.getLocal("x"),4*t),e.i64_load32_u(e.getLocal("y"),4*t)),e.i64_shr_u(e.getLocal("c"),e.i64_const(32))))),a.addCode(e.i64_store32(e.getLocal("r"),4*t,e.getLocal("c")));a.addCode(e.i32_wrap_i64(e.i64_shr_u(e.getLocal("c"),e.i64_const(32))))}(),function(){const a=t.addFunction(o+"_sub");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32"),a.setReturnType("i32"),a.addLocal("c","i64");const e=a.getCodeBuilder();a.addCode(e.setLocal("c",e.i64_sub(e.i64_load32_u(e.getLocal("x")),e.i64_load32_u(e.getLocal("y"))))),a.addCode(e.i64_store32(e.getLocal("r"),e.i64_and(e.getLocal("c"),e.i64_const("0xFFFFFFFF"))));for(let t=1;t<i;t++)a.addCode(e.setLocal("c",e.i64_add(e.i64_sub(e.i64_load32_u(e.getLocal("x"),4*t),e.i64_load32_u(e.getLocal("y"),4*t)),e.i64_shr_s(e.getLocal("c"),e.i64_const(32))))),a.addCode(e.i64_store32(e.getLocal("r"),4*t,e.i64_and(e.getLocal("c"),e.i64_const("0xFFFFFFFF"))));a.addCode(e.i32_wrap_i64(e.i64_shr_s(e.getLocal("c"),e.i64_const(32))))}(),function(){const a=t.addFunction(o+"_mul");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32"),a.addLocal("c0","i64"),a.addLocal("c1","i64");for(let t=0;t<i;t++)a.addLocal("x"+t,"i64"),a.addLocal("y"+t,"i64");const e=a.getCodeBuilder(),n=[],l=[];function c(t,a){let o,i;return n[t]?o=e.getLocal("x"+t):(o=e.teeLocal("x"+t,e.i64_load32_u(e.getLocal("x"),4*t)),n[t]=!0),l[a]?i=e.getLocal("y"+a):(i=e.teeLocal("y"+a,e.i64_load32_u(e.getLocal("y"),4*a)),l[a]=!0),e.i64_mul(o,i)}let s="c0",r="c1";for(let t=0;t<2*i-1;t++){for(let o=Math.max(0,t-i+1);o<=t&&o<i;o++){const i=t-o;a.addCode(e.setLocal(s,e.i64_add(e.i64_and(e.getLocal(s),e.i64_const(4294967295)),c(o,i)))),a.addCode(e.setLocal(r,e.i64_add(e.getLocal(r),e.i64_shr_u(e.getLocal(s),e.i64_const(32)))))}a.addCode(e.i64_store32(e.getLocal("r"),4*t,e.getLocal(s))),[s,r]=[r,s],a.addCode(e.setLocal(r,e.i64_shr_u(e.getLocal(s),e.i64_const(32))))}a.addCode(e.i64_store32(e.getLocal("r"),4*i*2-4,e.getLocal(s)))}(),function(){const a=t.addFunction(o+"_square");a.addParam("x","i32"),a.addParam("r","i32"),a.addLocal("c0","i64"),a.addLocal("c1","i64"),a.addLocal("c0_old","i64"),a.addLocal("c1_old","i64");for(let t=0;t<i;t++)a.addLocal("x"+t,"i64");const e=a.getCodeBuilder(),n=[];function l(t,a){let o,i;return n[t]?o=e.getLocal("x"+t):(o=e.teeLocal("x"+t,e.i64_load32_u(e.getLocal("x"),4*t)),n[t]=!0),n[a]?i=e.getLocal("x"+a):(i=e.teeLocal("x"+a,e.i64_load32_u(e.getLocal("x"),4*a)),n[a]=!0),e.i64_mul(o,i)}let c="c0",s="c1",r="c0_old",d="c1_old";for(let t=0;t<2*i-1;t++){a.addCode(e.setLocal(c,e.i64_const(0)),e.setLocal(s,e.i64_const(0)));for(let o=Math.max(0,t-i+1);o<t+1>>1&&o<i;o++){const i=t-o;a.addCode(e.setLocal(c,e.i64_add(e.i64_and(e.getLocal(c),e.i64_const(4294967295)),l(o,i)))),a.addCode(e.setLocal(s,e.i64_add(e.getLocal(s),e.i64_shr_u(e.getLocal(c),e.i64_const(32)))))}a.addCode(e.setLocal(c,e.i64_shl(e.i64_and(e.getLocal(c),e.i64_const(4294967295)),e.i64_const(1)))),a.addCode(e.setLocal(s,e.i64_add(e.i64_shl(e.getLocal(s),e.i64_const(1)),e.i64_shr_u(e.getLocal(c),e.i64_const(32))))),t%2==0&&(a.addCode(e.setLocal(c,e.i64_add(e.i64_and(e.getLocal(c),e.i64_const(4294967295)),l(t>>1,t>>1)))),a.addCode(e.setLocal(s,e.i64_add(e.getLocal(s),e.i64_shr_u(e.getLocal(c),e.i64_const(32)))))),t>0&&(a.addCode(e.setLocal(c,e.i64_add(e.i64_and(e.getLocal(c),e.i64_const(4294967295)),e.i64_and(e.getLocal(r),e.i64_const(4294967295))))),a.addCode(e.setLocal(s,e.i64_add(e.i64_add(e.getLocal(s),e.i64_shr_u(e.getLocal(c),e.i64_const(32))),e.getLocal(d))))),a.addCode(e.i64_store32(e.getLocal("r"),4*t,e.getLocal(c))),a.addCode(e.setLocal(r,e.getLocal(s)),e.setLocal(d,e.i64_shr_u(e.getLocal(r),e.i64_const(32))))}a.addCode(e.i64_store32(e.getLocal("r"),4*i*2-4,e.getLocal(r)))}(),function(){const a=t.addFunction(o+"_squareOld");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(o+"_mul",e.getLocal("x"),e.getLocal("x"),e.getLocal("r")))}(),function(){!function(){const a=t.addFunction(o+"__mul1");a.addParam("px","i32"),a.addParam("y","i64"),a.addParam("pr","i32"),a.addLocal("c","i64");const e=a.getCodeBuilder();a.addCode(e.setLocal("c",e.i64_mul(e.i64_load32_u(e.getLocal("px"),0,0),e.getLocal("y")))),a.addCode(e.i64_store32(e.getLocal("pr"),0,0,e.getLocal("c")));for(let t=1;t<i;t++)a.addCode(e.setLocal("c",e.i64_add(e.i64_mul(e.i64_load32_u(e.getLocal("px"),4*t,0),e.getLocal("y")),e.i64_shr_u(e.getLocal("c"),e.i64_const(32))))),a.addCode(e.i64_store32(e.getLocal("pr"),4*t,0,e.getLocal("c")))}(),function(){const a=t.addFunction(o+"__add1");a.addParam("x","i32"),a.addParam("y","i64"),a.addLocal("c","i64"),a.addLocal("px","i32");const e=a.getCodeBuilder();a.addCode(e.setLocal("px",e.getLocal("x"))),a.addCode(e.setLocal("c",e.i64_add(e.i64_load32_u(e.getLocal("px"),0,0),e.getLocal("y")))),a.addCode(e.i64_store32(e.getLocal("px"),0,0,e.getLocal("c"))),a.addCode(e.setLocal("c",e.i64_shr_u(e.getLocal("c"),e.i64_const(32)))),a.addCode(e.block(e.loop(e.br_if(1,e.i64_eqz(e.getLocal("c"))),e.setLocal("px",e.i32_add(e.getLocal("px"),e.i32_const(4))),e.setLocal("c",e.i64_add(e.i64_load32_u(e.getLocal("px"),0,0),e.getLocal("c"))),e.i64_store32(e.getLocal("px"),0,0,e.getLocal("c")),e.setLocal("c",e.i64_shr_u(e.getLocal("c"),e.i64_const(32))),e.br(0))))}();const a=t.addFunction(o+"_div");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("c","i32"),a.addParam("r","i32"),a.addLocal("rr","i32"),a.addLocal("cc","i32"),a.addLocal("eX","i32"),a.addLocal("eY","i32"),a.addLocal("sy","i64"),a.addLocal("sx","i64"),a.addLocal("ec","i32");const e=a.getCodeBuilder(),l=e.i32_const(t.alloc(n)),c=e.i32_const(t.alloc(n)),s=e.i32_const(t.alloc(n)),r=e.getLocal("cc"),d=e.getLocal("rr"),u=t.alloc(2*n),_=e.i32_const(u),g=e.i32_const(u+n);a.addCode(e.if(e.getLocal("c"),e.setLocal("cc",e.getLocal("c")),e.setLocal("cc",c))),a.addCode(e.if(e.getLocal("r"),e.setLocal("rr",e.getLocal("r")),e.setLocal("rr",s))),a.addCode(e.call(o+"_copy",e.getLocal("x"),d)),a.addCode(e.call(o+"_copy",e.getLocal("y"),l)),a.addCode(e.call(o+"_zero",r)),a.addCode(e.call(o+"_zero",_)),a.addCode(e.setLocal("eX",e.i32_const(n-1))),a.addCode(e.setLocal("eY",e.i32_const(n-1))),a.addCode(e.block(e.loop(e.br_if(1,e.i32_or(e.i32_load8_u(e.i32_add(l,e.getLocal("eY")),0,0),e.i32_eq(e.getLocal("eY"),e.i32_const(3)))),e.setLocal("eY",e.i32_sub(e.getLocal("eY"),e.i32_const(1))),e.br(0)))),a.addCode(e.setLocal("sy",e.i64_add(e.i64_load32_u(e.i32_sub(e.i32_add(l,e.getLocal("eY")),e.i32_const(3)),0,0),e.i64_const(1)))),a.addCode(e.if(e.i64_eq(e.getLocal("sy"),e.i64_const(1)),e.drop(e.i64_div_u(e.i64_const(0),e.i64_const(0))))),a.addCode(e.block(e.loop(e.block(e.loop(e.br_if(1,e.i32_or(e.i32_load8_u(e.i32_add(d,e.getLocal("eX")),0,0),e.i32_eq(e.getLocal("eX"),e.i32_const(7)))),e.setLocal("eX",e.i32_sub(e.getLocal("eX"),e.i32_const(1))),e.br(0))),e.setLocal("sx",e.i64_load(e.i32_sub(e.i32_add(d,e.getLocal("eX")),e.i32_const(7)),0,0)),e.setLocal("sx",e.i64_div_u(e.getLocal("sx"),e.getLocal("sy"))),e.setLocal("ec",e.i32_sub(e.i32_sub(e.getLocal("eX"),e.getLocal("eY")),e.i32_const(4))),e.block(e.loop(e.br_if(1,e.i32_and(e.i64_eqz(e.i64_and(e.getLocal("sx"),e.i64_const("0xFFFFFFFF00000000"))),e.i32_ge_s(e.getLocal("ec"),e.i32_const(0)))),e.setLocal("sx",e.i64_shr_u(e.getLocal("sx"),e.i64_const(8))),e.setLocal("ec",e.i32_add(e.getLocal("ec"),e.i32_const(1))),e.br(0))),e.if(e.i64_eqz(e.getLocal("sx")),[...e.br_if(2,e.i32_eqz(e.call(o+"_gte",d,l))),...e.setLocal("sx",e.i64_const(1)),...e.setLocal("ec",e.i32_const(0))]),e.call(o+"__mul1",l,e.getLocal("sx"),g),e.drop(e.call(o+"_sub",d,e.i32_sub(g,e.getLocal("ec")),d)),e.call(o+"__add1",e.i32_add(r,e.getLocal("ec")),e.getLocal("sx")),e.br(0))))}(),function(){const a=t.addFunction(o+"_inverseMod");a.addParam("px","i32"),a.addParam("pm","i32"),a.addParam("pr","i32"),a.addLocal("t","i32"),a.addLocal("newt","i32"),a.addLocal("r","i32"),a.addLocal("qq","i32"),a.addLocal("qr","i32"),a.addLocal("newr","i32"),a.addLocal("swp","i32"),a.addLocal("x","i32"),a.addLocal("signt","i32"),a.addLocal("signnewt","i32"),a.addLocal("signx","i32");const e=a.getCodeBuilder(),i=e.i32_const(t.alloc(n)),l=e.i32_const(t.alloc(n)),c=e.i32_const(t.alloc(n)),s=e.i32_const(t.alloc(n)),r=e.i32_const(t.alloc(n)),d=e.i32_const(t.alloc(n)),u=e.i32_const(t.alloc(2*n)),_=e.i32_const(t.alloc(n));a.addCode(e.setLocal("t",i),e.call(o+"_zero",i),e.setLocal("signt",e.i32_const(0))),a.addCode(e.setLocal("r",l),e.call(o+"_copy",e.getLocal("pm"),l)),a.addCode(e.setLocal("newt",c),e.call(o+"_one",c),e.setLocal("signnewt",e.i32_const(0))),a.addCode(e.setLocal("newr",s),e.call(o+"_copy",e.getLocal("px"),s)),a.addCode(e.setLocal("qq",r)),a.addCode(e.setLocal("qr",d)),a.addCode(e.setLocal("x",_)),a.addCode(e.block(e.loop(e.br_if(1,e.call(o+"_isZero",e.getLocal("newr"))),e.call(o+"_div",e.getLocal("r"),e.getLocal("newr"),e.getLocal("qq"),e.getLocal("qr")),e.call(o+"_mul",e.getLocal("qq"),e.getLocal("newt"),u),e.if(e.getLocal("signt"),e.if(e.getLocal("signnewt"),e.if(e.call(o+"_gte",u,e.getLocal("t")),[...e.drop(e.call(o+"_sub",u,e.getLocal("t"),e.getLocal("x"))),...e.setLocal("signx",e.i32_const(0))],[...e.drop(e.call(o+"_sub",e.getLocal("t"),u,e.getLocal("x"))),...e.setLocal("signx",e.i32_const(1))]),[...e.drop(e.call(o+"_add",u,e.getLocal("t"),e.getLocal("x"))),...e.setLocal("signx",e.i32_const(1))]),e.if(e.getLocal("signnewt"),[...e.drop(e.call(o+"_add",u,e.getLocal("t"),e.getLocal("x"))),...e.setLocal("signx",e.i32_const(0))],e.if(e.call(o+"_gte",e.getLocal("t"),u),[...e.drop(e.call(o+"_sub",e.getLocal("t"),u,e.getLocal("x"))),...e.setLocal("signx",e.i32_const(0))],[...e.drop(e.call(o+"_sub",u,e.getLocal("t"),e.getLocal("x"))),...e.setLocal("signx",e.i32_const(1))]))),e.setLocal("swp",e.getLocal("t")),e.setLocal("t",e.getLocal("newt")),e.setLocal("newt",e.getLocal("x")),e.setLocal("x",e.getLocal("swp")),e.setLocal("signt",e.getLocal("signnewt")),e.setLocal("signnewt",e.getLocal("signx")),e.setLocal("swp",e.getLocal("r")),e.setLocal("r",e.getLocal("newr")),e.setLocal("newr",e.getLocal("qr")),e.setLocal("qr",e.getLocal("swp")),e.br(0)))),a.addCode(e.if(e.getLocal("signt"),e.drop(e.call(o+"_sub",e.getLocal("pm"),e.getLocal("t"),e.getLocal("pr"))),e.call(o+"_copy",e.getLocal("t"),e.getLocal("pr"))))}(),t.exportFunction(o+"_copy"),t.exportFunction(o+"_zero"),t.exportFunction(o+"_one"),t.exportFunction(o+"_isZero"),t.exportFunction(o+"_eq"),t.exportFunction(o+"_gte"),t.exportFunction(o+"_add"),t.exportFunction(o+"_sub"),t.exportFunction(o+"_mul"),t.exportFunction(o+"_square"),t.exportFunction(o+"_squareOld"),t.exportFunction(o+"_div"),t.exportFunction(o+"_inverseMod"),o},gt=K,ft=H,pt=Z,ht=W,mt=Y,{bitLength:Lt,modInv:bt,modPow:wt,isPrime:yt,isOdd:At,square:Ct}=J;var xt=function(t,a,e,o){const i=BigInt(a),n=Math.floor((Lt(i-1n)-1)/64)+1,l=2*n,c=8*n,s=e||"f1m";if(t.modules[s])return s;const r=_t(t,n,o),d=t.alloc(c,gt.bigInt2BytesLE(i,c)),u=t.alloc(gt.bigInt2BytesLE(Ct(1n<<BigInt(64*n))%i,c)),_=t.alloc(gt.bigInt2BytesLE((1n<<BigInt(64*n))%i,c)),g=t.alloc(gt.bigInt2BytesLE(0n,c)),f=i-1n,p=f>>1n,h=t.alloc(c,gt.bigInt2BytesLE(p,c)),m=p+1n,L=t.alloc(c,gt.bigInt2BytesLE(m,c));t.modules[s]={pq:d,pR2:u,n64:n,q:i,pOne:_,pZero:g,pePlusOne:L};let b=2n;if(yt(i))for(;wt(b,p,i)!==f;)b+=1n;let w=0,y=f;for(;!At(y)&&0n!==y;)w++,y>>=1n;const A=t.alloc(c,gt.bigInt2BytesLE(y,c)),C=wt(b,y,i),x=t.alloc(gt.bigInt2BytesLE((C<<BigInt(64*n))%i,c)),F=y+1n>>1n,I=t.alloc(c,gt.bigInt2BytesLE(F,c));return t.exportFunction(r+"_copy",s+"_copy"),t.exportFunction(r+"_zero",s+"_zero"),t.exportFunction(r+"_isZero",s+"_isZero"),t.exportFunction(r+"_eq",s+"_eq"),function(){const a=t.addFunction(s+"_isOne");a.addParam("x","i32"),a.setReturnType("i32");const e=a.getCodeBuilder();a.addCode(e.ret(e.call(r+"_eq",e.getLocal("x"),e.i32_const(_))))}(),function(){const a=t.addFunction(s+"_add");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.if(e.call(r+"_add",e.getLocal("x"),e.getLocal("y"),e.getLocal("r")),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))),e.if(e.call(r+"_gte",e.getLocal("r"),e.i32_const(d)),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))))))}(),function(){const a=t.addFunction(s+"_sub");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.if(e.call(r+"_sub",e.getLocal("x"),e.getLocal("y"),e.getLocal("r")),e.drop(e.call(r+"_add",e.getLocal("r"),e.i32_const(d),e.getLocal("r")))))}(),function(){const a=t.addFunction(s+"_neg");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(s+"_sub",e.i32_const(g),e.getLocal("x"),e.getLocal("r")))}(),function(){const a=t.alloc(l*l*8),e=t.addFunction(s+"_mReduct");e.addParam("t","i32"),e.addParam("r","i32"),e.addLocal("np32","i64"),e.addLocal("c","i64"),e.addLocal("m","i64");const o=e.getCodeBuilder(),n=Number(0x100000000n-bt(i,0x100000000n));e.addCode(o.setLocal("np32",o.i64_const(n)));for(let t=0;t<l;t++){e.addCode(o.setLocal("c",o.i64_const(0))),e.addCode(o.setLocal("m",o.i64_and(o.i64_mul(o.i64_load32_u(o.getLocal("t"),4*t),o.getLocal("np32")),o.i64_const("0xFFFFFFFF"))));for(let a=0;a<l;a++)e.addCode(o.setLocal("c",o.i64_add(o.i64_add(o.i64_load32_u(o.getLocal("t"),4*(t+a)),o.i64_shr_u(o.getLocal("c"),o.i64_const(32))),o.i64_mul(o.i64_load32_u(o.i32_const(d),4*a),o.getLocal("m"))))),e.addCode(o.i64_store32(o.getLocal("t"),4*(t+a),o.getLocal("c")));e.addCode(o.i64_store32(o.i32_const(a),4*t,o.i64_shr_u(o.getLocal("c"),o.i64_const(32))))}e.addCode(o.call(s+"_add",o.i32_const(a),o.i32_add(o.getLocal("t"),o.i32_const(4*l)),o.getLocal("r")))}(),function(){const a=t.addFunction(s+"_mul");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32"),a.addLocal("c0","i64"),a.addLocal("c1","i64"),a.addLocal("np32","i64");for(let t=0;t<l;t++)a.addLocal("x"+t,"i64"),a.addLocal("y"+t,"i64"),a.addLocal("m"+t,"i64"),a.addLocal("q"+t,"i64");const e=a.getCodeBuilder(),o=Number(0x100000000n-bt(i,0x100000000n));a.addCode(e.setLocal("np32",e.i64_const(o)));const n=[],c=[],u=[];function _(t,a){let o,i;return n[t]?o=e.getLocal("x"+t):(o=e.teeLocal("x"+t,e.i64_load32_u(e.getLocal("x"),4*t)),n[t]=!0),c[a]?i=e.getLocal("y"+a):(i=e.teeLocal("y"+a,e.i64_load32_u(e.getLocal("y"),4*a)),c[a]=!0),e.i64_mul(o,i)}function g(t,a){let o,i;return u[t]?o=e.getLocal("q"+t):(o=e.teeLocal("q"+t,e.i64_load32_u(e.i32_const(0),d+4*t)),u[t]=!0),i=e.getLocal("m"+a),e.i64_mul(o,i)}let f="c0",p="c1";for(let t=0;t<2*l-1;t++){for(let o=Math.max(0,t-l+1);o<=t&&o<l;o++){const i=t-o;a.addCode(e.setLocal(f,e.i64_add(e.i64_and(e.getLocal(f),e.i64_const(4294967295)),_(o,i)))),a.addCode(e.setLocal(p,e.i64_add(e.getLocal(p),e.i64_shr_u(e.getLocal(f),e.i64_const(32)))))}for(let o=Math.max(1,t-l+1);o<=t&&o<l;o++){const i=t-o;a.addCode(e.setLocal(f,e.i64_add(e.i64_and(e.getLocal(f),e.i64_const(4294967295)),g(o,i)))),a.addCode(e.setLocal(p,e.i64_add(e.getLocal(p),e.i64_shr_u(e.getLocal(f),e.i64_const(32)))))}t<l&&(a.addCode(e.setLocal("m"+t,e.i64_and(e.i64_mul(e.i64_and(e.getLocal(f),e.i64_const(4294967295)),e.getLocal("np32")),e.i64_const("0xFFFFFFFF")))),a.addCode(e.setLocal(f,e.i64_add(e.i64_and(e.getLocal(f),e.i64_const(4294967295)),g(0,t)))),a.addCode(e.setLocal(p,e.i64_add(e.getLocal(p),e.i64_shr_u(e.getLocal(f),e.i64_const(32)))))),t>=l&&a.addCode(e.i64_store32(e.getLocal("r"),4*(t-l),e.getLocal(f))),[f,p]=[p,f],a.addCode(e.setLocal(p,e.i64_shr_u(e.getLocal(f),e.i64_const(32))))}a.addCode(e.i64_store32(e.getLocal("r"),4*l-4,e.getLocal(f))),a.addCode(e.if(e.i32_wrap_i64(e.getLocal(p)),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))),e.if(e.call(r+"_gte",e.getLocal("r"),e.i32_const(d)),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))))))}(),function(){const a=t.addFunction(s+"_square");a.addParam("x","i32"),a.addParam("r","i32"),a.addLocal("c0","i64"),a.addLocal("c1","i64"),a.addLocal("c0_old","i64"),a.addLocal("c1_old","i64"),a.addLocal("np32","i64");for(let t=0;t<l;t++)a.addLocal("x"+t,"i64"),a.addLocal("m"+t,"i64"),a.addLocal("q"+t,"i64");const e=a.getCodeBuilder(),o=Number(0x100000000n-bt(i,0x100000000n));a.addCode(e.setLocal("np32",e.i64_const(o)));const n=[],c=[];function u(t,a){let o,i;return n[t]?o=e.getLocal("x"+t):(o=e.teeLocal("x"+t,e.i64_load32_u(e.getLocal("x"),4*t)),n[t]=!0),n[a]?i=e.getLocal("x"+a):(i=e.teeLocal("x"+a,e.i64_load32_u(e.getLocal("x"),4*a)),n[a]=!0),e.i64_mul(o,i)}function _(t,a){let o,i;return c[t]?o=e.getLocal("q"+t):(o=e.teeLocal("q"+t,e.i64_load32_u(e.i32_const(0),d+4*t)),c[t]=!0),i=e.getLocal("m"+a),e.i64_mul(o,i)}let g="c0",f="c1",p="c0_old",h="c1_old";for(let t=0;t<2*l-1;t++){a.addCode(e.setLocal(g,e.i64_const(0)),e.setLocal(f,e.i64_const(0)));for(let o=Math.max(0,t-l+1);o<t+1>>1&&o<l;o++){const i=t-o;a.addCode(e.setLocal(g,e.i64_add(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),u(o,i)))),a.addCode(e.setLocal(f,e.i64_add(e.getLocal(f),e.i64_shr_u(e.getLocal(g),e.i64_const(32)))))}a.addCode(e.setLocal(g,e.i64_shl(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),e.i64_const(1)))),a.addCode(e.setLocal(f,e.i64_add(e.i64_shl(e.getLocal(f),e.i64_const(1)),e.i64_shr_u(e.getLocal(g),e.i64_const(32))))),t%2==0&&(a.addCode(e.setLocal(g,e.i64_add(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),u(t>>1,t>>1)))),a.addCode(e.setLocal(f,e.i64_add(e.getLocal(f),e.i64_shr_u(e.getLocal(g),e.i64_const(32)))))),t>0&&(a.addCode(e.setLocal(g,e.i64_add(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),e.i64_and(e.getLocal(p),e.i64_const(4294967295))))),a.addCode(e.setLocal(f,e.i64_add(e.i64_add(e.getLocal(f),e.i64_shr_u(e.getLocal(g),e.i64_const(32))),e.getLocal(h)))));for(let o=Math.max(1,t-l+1);o<=t&&o<l;o++){const i=t-o;a.addCode(e.setLocal(g,e.i64_add(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),_(o,i)))),a.addCode(e.setLocal(f,e.i64_add(e.getLocal(f),e.i64_shr_u(e.getLocal(g),e.i64_const(32)))))}t<l&&(a.addCode(e.setLocal("m"+t,e.i64_and(e.i64_mul(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),e.getLocal("np32")),e.i64_const("0xFFFFFFFF")))),a.addCode(e.setLocal(g,e.i64_add(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),_(0,t)))),a.addCode(e.setLocal(f,e.i64_add(e.getLocal(f),e.i64_shr_u(e.getLocal(g),e.i64_const(32)))))),t>=l&&a.addCode(e.i64_store32(e.getLocal("r"),4*(t-l),e.getLocal(g))),a.addCode(e.setLocal(p,e.getLocal(f)),e.setLocal(h,e.i64_shr_u(e.getLocal(p),e.i64_const(32))))}a.addCode(e.i64_store32(e.getLocal("r"),4*l-4,e.getLocal(p))),a.addCode(e.if(e.i32_wrap_i64(e.getLocal(h)),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))),e.if(e.call(r+"_gte",e.getLocal("r"),e.i32_const(d)),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))))))}(),function(){const a=t.addFunction(s+"_squareOld");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(s+"_mul",e.getLocal("x"),e.getLocal("x"),e.getLocal("r")))}(),function(){const a=t.addFunction(s+"_toMontgomery");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(s+"_mul",e.getLocal("x"),e.i32_const(u),e.getLocal("r")))}(),function(){const a=t.alloc(2*c),e=t.addFunction(s+"_fromMontgomery");e.addParam("x","i32"),e.addParam("r","i32");const o=e.getCodeBuilder();e.addCode(o.call(r+"_copy",o.getLocal("x"),o.i32_const(a))),e.addCode(o.call(r+"_zero",o.i32_const(a+c))),e.addCode(o.call(s+"_mReduct",o.i32_const(a),o.getLocal("r")))}(),function(){const a=t.addFunction(s+"_isNegative");a.addParam("x","i32"),a.setReturnType("i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(c));a.addCode(e.call(s+"_fromMontgomery",e.getLocal("x"),o),e.call(r+"_gte",o,e.i32_const(L)))}(),function(){const a=t.addFunction(s+"_sign");a.addParam("x","i32"),a.setReturnType("i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(c));a.addCode(e.if(e.call(r+"_isZero",e.getLocal("x")),e.ret(e.i32_const(0))),e.call(s+"_fromMontgomery",e.getLocal("x"),o),e.if(e.call(r+"_gte",o,e.i32_const(L)),e.ret(e.i32_const(-1))),e.ret(e.i32_const(1)))}(),function(){const a=t.addFunction(s+"_inverse");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(s+"_fromMontgomery",e.getLocal("x"),e.getLocal("r"))),a.addCode(e.call(r+"_inverseMod",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))),a.addCode(e.call(s+"_toMontgomery",e.getLocal("r"),e.getLocal("r")))}(),function(){const a=t.addFunction(s+"_one");a.addParam("pr","i32");const e=a.getCodeBuilder();a.addCode(e.call(r+"_copy",e.i32_const(_),e.getLocal("pr")))}(),function(){const a=t.addFunction(s+"_load");a.addParam("scalar","i32"),a.addParam("scalarLen","i32"),a.addParam("r","i32"),a.addLocal("p","i32"),a.addLocal("l","i32"),a.addLocal("i","i32"),a.addLocal("j","i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(c)),i=t.alloc(c),n=e.i32_const(i);a.addCode(e.call(r+"_zero",e.getLocal("r")),e.setLocal("i",e.i32_const(c)),e.setLocal("p",e.getLocal("scalar")),e.block(e.loop(e.br_if(1,e.i32_gt_u(e.getLocal("i"),e.getLocal("scalarLen"))),e.if(e.i32_eq(e.getLocal("i"),e.i32_const(c)),e.call(s+"_one",o),e.call(s+"_mul",o,e.i32_const(u),o)),e.call(s+"_mul",e.getLocal("p"),o,n),e.call(s+"_add",e.getLocal("r"),n,e.getLocal("r")),e.setLocal("p",e.i32_add(e.getLocal("p"),e.i32_const(c))),e.setLocal("i",e.i32_add(e.getLocal("i"),e.i32_const(c))),e.br(0))),e.setLocal("l",e.i32_rem_u(e.getLocal("scalarLen"),e.i32_const(c))),e.if(e.i32_eqz(e.getLocal("l")),e.ret([])),e.call(r+"_zero",n),e.setLocal("j",e.i32_const(0)),e.block(e.loop(e.br_if(1,e.i32_eq(e.getLocal("j"),e.getLocal("l"))),e.i32_store8(e.getLocal("j"),i,e.i32_load8_u(e.getLocal("p"))),e.setLocal("p",e.i32_add(e.getLocal("p"),e.i32_const(1))),e.setLocal("j",e.i32_add(e.getLocal("j"),e.i32_const(1))),e.br(0))),e.if(e.i32_eq(e.getLocal("i"),e.i32_const(c)),e.call(s+"_one",o),e.call(s+"_mul",o,e.i32_const(u),o)),e.call(s+"_mul",n,o,n),e.call(s+"_add",e.getLocal("r"),n,e.getLocal("r")))}(),function(){const a=t.addFunction(s+"_timesScalar");a.addParam("x","i32"),a.addParam("scalar","i32"),a.addParam("scalarLen","i32"),a.addParam("r","i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(c));a.addCode(e.call(s+"_load",e.getLocal("scalar"),e.getLocal("scalarLen"),o),e.call(s+"_toMontgomery",o,o),e.call(s+"_mul",e.getLocal("x"),o,e.getLocal("r")))}(),pt(t,s),ht(t,s+"_batchToMontgomery",s+"_toMontgomery",c,c),ht(t,s+"_batchFromMontgomery",s+"_fromMontgomery",c,c),ht(t,s+"_batchNeg",s+"_neg",c,c),mt(t,s+"_batchAdd",s+"_add",c,c),mt(t,s+"_batchSub",s+"_sub",c,c),mt(t,s+"_batchMul",s+"_mul",c,c),t.exportFunction(s+"_add"),t.exportFunction(s+"_sub"),t.exportFunction(s+"_neg"),t.exportFunction(s+"_isNegative"),t.exportFunction(s+"_isOne"),t.exportFunction(s+"_sign"),t.exportFunction(s+"_mReduct"),t.exportFunction(s+"_mul"),t.exportFunction(s+"_square"),t.exportFunction(s+"_squareOld"),t.exportFunction(s+"_fromMontgomery"),t.exportFunction(s+"_toMontgomery"),t.exportFunction(s+"_inverse"),t.exportFunction(s+"_one"),t.exportFunction(s+"_load"),t.exportFunction(s+"_timesScalar"),ft(t,s+"_exp",c,s+"_mul",s+"_square",r+"_copy",s+"_one"),t.exportFunction(s+"_exp"),t.exportFunction(s+"_batchInverse"),yt(i)&&(!function(){const a=t.addFunction(s+"_sqrt");a.addParam("n","i32"),a.addParam("r","i32"),a.addLocal("m","i32"),a.addLocal("i","i32"),a.addLocal("j","i32");const e=a.getCodeBuilder(),o=e.i32_const(_),i=e.i32_const(t.alloc(c)),n=e.i32_const(t.alloc(c)),l=e.i32_const(t.alloc(c)),r=e.i32_const(t.alloc(c)),d=e.i32_const(t.alloc(c));a.addCode(e.if(e.call(s+"_isZero",e.getLocal("n")),e.ret(e.call(s+"_zero",e.getLocal("r")))),e.setLocal("m",e.i32_const(w)),e.call(s+"_copy",e.i32_const(x),i),e.call(s+"_exp",e.getLocal("n"),e.i32_const(A),e.i32_const(c),n),e.call(s+"_exp",e.getLocal("n"),e.i32_const(I),e.i32_const(c),l),e.block(e.loop(e.br_if(1,e.call(s+"_eq",n,o)),e.call(s+"_square",n,r),e.setLocal("i",e.i32_const(1)),e.block(e.loop(e.br_if(1,e.call(s+"_eq",r,o)),e.call(s+"_square",r,r),e.setLocal("i",e.i32_add(e.getLocal("i"),e.i32_const(1))),e.br(0))),e.call(s+"_copy",i,d),e.setLocal("j",e.i32_sub(e.i32_sub(e.getLocal("m"),e.getLocal("i")),e.i32_const(1))),e.block(e.loop(e.br_if(1,e.i32_eqz(e.getLocal("j"))),e.call(s+"_square",d,d),e.setLocal("j",e.i32_sub(e.getLocal("j"),e.i32_const(1))),e.br(0))),e.setLocal("m",e.getLocal("i")),e.call(s+"_square",d,i),e.call(s+"_mul",n,i,n),e.call(s+"_mul",l,d,l),e.br(0))),e.if(e.call(s+"_isNegative",l),e.call(s+"_neg",l,e.getLocal("r")),e.call(s+"_copy",l,e.getLocal("r"))))}(),function(){const a=t.addFunction(s+"_isSquare");a.addParam("n","i32"),a.setReturnType("i32");const e=a.getCodeBuilder(),o=e.i32_const(_),i=e.i32_const(t.alloc(c));a.addCode(e.if(e.call(s+"_isZero",e.getLocal("n")),e.ret(e.i32_const(1))),e.call(s+"_exp",e.getLocal("n"),e.i32_const(h),e.i32_const(c),i),e.call(s+"_eq",i,o))}(),t.exportFunction(s+"_sqrt"),t.exportFunction(s+"_isSquare")),t.exportFunction(s+"_batchToMontgomery"),t.exportFunction(s+"_batchFromMontgomery"),s};const Ft=xt,{bitLength:It}=J;var Bt=function(t,a,e,o,i){const n=BigInt(a),l=Math.floor((It(n-1n)-1)/64)+1,c=8*l,s=e||"f1";if(t.modules[s])return s;t.modules[s]={n64:l};const r=i||"int",d=Ft(t,n,o,r),u=t.modules[d].pR2,_=t.modules[d].pq,g=t.modules[d].pePlusOne;return function(){const a=t.alloc(c),e=t.addFunction(s+"_mul");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32");const o=e.getCodeBuilder();e.addCode(o.call(d+"_mul",o.getLocal("x"),o.getLocal("y"),o.i32_const(a))),e.addCode(o.call(d+"_mul",o.i32_const(a),o.i32_const(u),o.getLocal("r")))}(),function(){const a=t.addFunction(s+"_square");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(s+"_mul",e.getLocal("x"),e.getLocal("x"),e.getLocal("r")))}(),function(){const a=t.addFunction(s+"_inverse");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(r+"_inverseMod",e.getLocal("x"),e.i32_const(_),e.getLocal("r")))}(),function(){const a=t.addFunction(s+"_isNegative");a.addParam("x","i32"),a.setReturnType("i32");const e=a.getCodeBuilder();a.addCode(e.call(r+"_gte",e.getLocal("x"),e.i32_const(g)))}(),t.exportFunction(d+"_add",s+"_add"),t.exportFunction(d+"_sub",s+"_sub"),t.exportFunction(d+"_neg",s+"_neg"),t.exportFunction(s+"_mul"),t.exportFunction(s+"_square"),t.exportFunction(s+"_inverse"),t.exportFunction(s+"_isNegative"),t.exportFunction(d+"_copy",s+"_copy"),t.exportFunction(d+"_zero",s+"_zero"),t.exportFunction(d+"_one",s+"_one"),t.exportFunction(d+"_isZero",s+"_isZero"),t.exportFunction(d+"_eq",s+"_eq"),s};const Et=H,vt=Z,St=K;var Pt=function(t,a,e,o){if(t.modules[e])return e;const i=8*t.modules[o].n64,n=t.modules[o].q;return t.modules[e]={n64:2*t.modules[o].n64},function(){const a=t.addFunction(e+"_isZero");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.i32_and(n.call(o+"_isZero",l),n.call(o+"_isZero",c)))}(),function(){const a=t.addFunction(e+"_isOne");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.ret(n.i32_and(n.call(o+"_isOne",l),n.call(o+"_isZero",c))))}(),function(){const a=t.addFunction(e+"_zero");a.addParam("x","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.call(o+"_zero",l),n.call(o+"_zero",c))}(),function(){const a=t.addFunction(e+"_one");a.addParam("x","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.call(o+"_one",l),n.call(o+"_zero",c))}(),function(){const a=t.addFunction(e+"_copy");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_copy",l,s),n.call(o+"_copy",c,r))}(),function(){const n=t.addFunction(e+"_mul");n.addParam("x","i32"),n.addParam("y","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.getLocal("y"),d=l.i32_add(l.getLocal("y"),l.i32_const(i)),u=l.getLocal("r"),_=l.i32_add(l.getLocal("r"),l.i32_const(i)),g=l.i32_const(t.alloc(i)),f=l.i32_const(t.alloc(i)),p=l.i32_const(t.alloc(i)),h=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_mul",c,r,g),l.call(o+"_mul",s,d,f),l.call(o+"_add",c,s,p),l.call(o+"_add",r,d,h),l.call(o+"_mul",p,h,p),l.call(a,f,u),l.call(o+"_add",g,u,u),l.call(o+"_add",g,f,_),l.call(o+"_sub",p,_,_))}(),function(){const a=t.addFunction(e+"_mul1");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("y"),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_mul",l,s,r),n.call(o+"_mul",c,s,d))}(),function(){const n=t.addFunction(e+"_square");n.addParam("x","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.getLocal("r"),d=l.i32_add(l.getLocal("r"),l.i32_const(i)),u=l.i32_const(t.alloc(i)),_=l.i32_const(t.alloc(i)),g=l.i32_const(t.alloc(i)),f=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_mul",c,s,u),l.call(o+"_add",c,s,_),l.call(a,s,g),l.call(o+"_add",c,g,g),l.call(a,u,f),l.call(o+"_add",f,u,f),l.call(o+"_mul",_,g,r),l.call(o+"_sub",r,f,r),l.call(o+"_add",u,u,d))}(),function(){const a=t.addFunction(e+"_add");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("y"),r=n.i32_add(n.getLocal("y"),n.i32_const(i)),d=n.getLocal("r"),u=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_add",l,s,d),n.call(o+"_add",c,r,u))}(),function(){const a=t.addFunction(e+"_sub");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("y"),r=n.i32_add(n.getLocal("y"),n.i32_const(i)),d=n.getLocal("r"),u=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_sub",l,s,d),n.call(o+"_sub",c,r,u))}(),function(){const a=t.addFunction(e+"_neg");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_neg",l,s),n.call(o+"_neg",c,r))}(),function(){const a=t.addFunction(e+"_conjugate");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_copy",l,s),n.call(o+"_neg",c,r))}(),function(){const a=t.addFunction(e+"_toMontgomery");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_toMontgomery",l,s),n.call(o+"_toMontgomery",c,r))}(),function(){const a=t.addFunction(e+"_fromMontgomery");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_fromMontgomery",l,s),n.call(o+"_fromMontgomery",c,r))}(),function(){const a=t.addFunction(e+"_eq");a.addParam("x","i32"),a.addParam("y","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("y"),r=n.i32_add(n.getLocal("y"),n.i32_const(i));a.addCode(n.i32_and(n.call(o+"_eq",l,s),n.call(o+"_eq",c,r)))}(),function(){const n=t.addFunction(e+"_inverse");n.addParam("x","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.getLocal("r"),d=l.i32_add(l.getLocal("r"),l.i32_const(i)),u=l.i32_const(t.alloc(i)),_=l.i32_const(t.alloc(i)),g=l.i32_const(t.alloc(i)),f=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_square",c,u),l.call(o+"_square",s,_),l.call(a,_,g),l.call(o+"_sub",u,g,g),l.call(o+"_inverse",g,f),l.call(o+"_mul",c,f,r),l.call(o+"_mul",s,f,d),l.call(o+"_neg",d,d))}(),function(){const a=t.addFunction(e+"_timesScalar");a.addParam("x","i32"),a.addParam("scalar","i32"),a.addParam("scalarLen","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_timesScalar",l,n.getLocal("scalar"),n.getLocal("scalarLen"),s),n.call(o+"_timesScalar",c,n.getLocal("scalar"),n.getLocal("scalarLen"),r))}(),function(){const a=t.addFunction(e+"_sign");a.addParam("x","i32"),a.addLocal("s","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.setLocal("s",n.call(o+"_sign",c)),n.if(n.getLocal("s"),n.ret(n.getLocal("s"))),n.ret(n.call(o+"_sign",l)))}(),function(){const a=t.addFunction(e+"_isNegative");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.if(n.call(o+"_isZero",c),n.ret(n.call(o+"_isNegative",l))),n.ret(n.call(o+"_isNegative",c)))}(),t.exportFunction(e+"_isZero"),t.exportFunction(e+"_isOne"),t.exportFunction(e+"_zero"),t.exportFunction(e+"_one"),t.exportFunction(e+"_copy"),t.exportFunction(e+"_mul"),t.exportFunction(e+"_mul1"),t.exportFunction(e+"_square"),t.exportFunction(e+"_add"),t.exportFunction(e+"_sub"),t.exportFunction(e+"_neg"),t.exportFunction(e+"_sign"),t.exportFunction(e+"_conjugate"),t.exportFunction(e+"_fromMontgomery"),t.exportFunction(e+"_toMontgomery"),t.exportFunction(e+"_eq"),t.exportFunction(e+"_inverse"),vt(t,e),Et(t,e+"_exp",2*i,e+"_mul",e+"_square",e+"_copy",e+"_one"),function(){const a=t.addFunction(e+"_sqrt");a.addParam("a","i32"),a.addParam("pr","i32");const l=a.getCodeBuilder(),c=l.i32_const(t.alloc(St.bigInt2BytesLE((BigInt(n||0)-3n)/4n,i))),s=l.i32_const(t.alloc(St.bigInt2BytesLE((BigInt(n||0)-1n)/2n,i))),r=l.getLocal("a"),d=l.i32_const(t.alloc(2*i)),u=l.i32_const(t.alloc(2*i)),_=l.i32_const(t.alloc(2*i)),g=t.alloc(2*i),f=l.i32_const(g),p=l.i32_const(g),h=l.i32_const(g+i),m=l.i32_const(t.alloc(2*i)),L=l.i32_const(t.alloc(2*i));a.addCode(l.call(e+"_one",f),l.call(e+"_neg",f,f),l.call(e+"_exp",r,c,l.i32_const(i),d),l.call(e+"_square",d,u),l.call(e+"_mul",r,u,u),l.call(e+"_conjugate",u,_),l.call(e+"_mul",_,u,_),l.if(l.call(e+"_eq",_,f),l.unreachable()),l.call(e+"_mul",d,r,m),l.if(l.call(e+"_eq",u,f),[...l.call(o+"_zero",p),...l.call(o+"_one",h),...l.call(e+"_mul",f,m,l.getLocal("pr"))],[...l.call(e+"_one",L),...l.call(e+"_add",L,u,L),...l.call(e+"_exp",L,s,l.i32_const(i),L),...l.call(e+"_mul",L,m,l.getLocal("pr"))]))}(),function(){const a=t.addFunction(e+"_isSquare");a.addParam("a","i32"),a.setReturnType("i32");const o=a.getCodeBuilder(),l=o.i32_const(t.alloc(St.bigInt2BytesLE((BigInt(n||0)-3n)/4n,i))),c=o.getLocal("a"),s=o.i32_const(t.alloc(2*i)),r=o.i32_const(t.alloc(2*i)),d=o.i32_const(t.alloc(2*i)),u=t.alloc(2*i),_=o.i32_const(u);a.addCode(o.call(e+"_one",_),o.call(e+"_neg",_,_),o.call(e+"_exp",c,l,o.i32_const(i),s),o.call(e+"_square",s,r),o.call(e+"_mul",c,r,r),o.call(e+"_conjugate",r,d),o.call(e+"_mul",d,r,d),o.if(o.call(e+"_eq",d,_),o.ret(o.i32_const(0))),o.ret(o.i32_const(1)))}(),t.exportFunction(e+"_exp"),t.exportFunction(e+"_timesScalar"),t.exportFunction(e+"_batchInverse"),t.exportFunction(e+"_sqrt"),t.exportFunction(e+"_isSquare"),t.exportFunction(e+"_isNegative"),e};const Ot=H,qt=Z;var Gt=function(t,a,e,o){if(t.modules[e])return e;const i=8*t.modules[o].n64;return t.modules[e]={n64:3*t.modules[o].n64},function(){const a=t.addFunction(e+"_isZero");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.i32_and(n.i32_and(n.call(o+"_isZero",l),n.call(o+"_isZero",c)),n.call(o+"_isZero",s)))}(),function(){const a=t.addFunction(e+"_isOne");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.ret(n.i32_and(n.i32_and(n.call(o+"_isOne",l),n.call(o+"_isZero",c)),n.call(o+"_isZero",s))))}(),function(){const a=t.addFunction(e+"_zero");a.addParam("x","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.call(o+"_zero",l),n.call(o+"_zero",c),n.call(o+"_zero",s))}(),function(){const a=t.addFunction(e+"_one");a.addParam("x","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.call(o+"_one",l),n.call(o+"_zero",c),n.call(o+"_zero",s))}(),function(){const a=t.addFunction(e+"_copy");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_copy",l,r),n.call(o+"_copy",c,d),n.call(o+"_copy",s,u))}(),function(){const n=t.addFunction(e+"_mul");n.addParam("x","i32"),n.addParam("y","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.i32_add(l.getLocal("x"),l.i32_const(2*i)),d=l.getLocal("y"),u=l.i32_add(l.getLocal("y"),l.i32_const(i)),_=l.i32_add(l.getLocal("y"),l.i32_const(2*i)),g=l.getLocal("r"),f=l.i32_add(l.getLocal("r"),l.i32_const(i)),p=l.i32_add(l.getLocal("r"),l.i32_const(2*i)),h=l.i32_const(t.alloc(i)),m=l.i32_const(t.alloc(i)),L=l.i32_const(t.alloc(i)),b=l.i32_const(t.alloc(i)),w=l.i32_const(t.alloc(i)),y=l.i32_const(t.alloc(i)),A=l.i32_const(t.alloc(i)),C=l.i32_const(t.alloc(i)),x=l.i32_const(t.alloc(i)),F=l.i32_const(t.alloc(i)),I=l.i32_const(t.alloc(i)),B=l.i32_const(t.alloc(i)),E=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_mul",c,d,h),l.call(o+"_mul",s,u,m),l.call(o+"_mul",r,_,L),l.call(o+"_add",c,s,b),l.call(o+"_add",d,u,w),l.call(o+"_add",c,r,y),l.call(o+"_add",d,_,A),l.call(o+"_add",s,r,C),l.call(o+"_add",u,_,x),l.call(o+"_add",h,m,F),l.call(o+"_add",h,L,I),l.call(o+"_add",m,L,B),l.call(o+"_mul",C,x,g),l.call(o+"_sub",g,B,g),l.call(a,g,g),l.call(o+"_add",h,g,g),l.call(o+"_mul",b,w,f),l.call(o+"_sub",f,F,f),l.call(a,L,E),l.call(o+"_add",f,E,f),l.call(o+"_mul",y,A,p),l.call(o+"_sub",p,I,p),l.call(o+"_add",p,m,p))}(),function(){const n=t.addFunction(e+"_square");n.addParam("x","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.i32_add(l.getLocal("x"),l.i32_const(2*i)),d=l.getLocal("r"),u=l.i32_add(l.getLocal("r"),l.i32_const(i)),_=l.i32_add(l.getLocal("r"),l.i32_const(2*i)),g=l.i32_const(t.alloc(i)),f=l.i32_const(t.alloc(i)),p=l.i32_const(t.alloc(i)),h=l.i32_const(t.alloc(i)),m=l.i32_const(t.alloc(i)),L=l.i32_const(t.alloc(i)),b=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_square",c,g),l.call(o+"_mul",c,s,f),l.call(o+"_add",f,f,p),l.call(o+"_sub",c,s,h),l.call(o+"_add",h,r,h),l.call(o+"_square",h,h),l.call(o+"_mul",s,r,m),l.call(o+"_add",m,m,L),l.call(o+"_square",r,b),l.call(a,L,d),l.call(o+"_add",g,d,d),l.call(a,b,u),l.call(o+"_add",p,u,u),l.call(o+"_add",g,b,_),l.call(o+"_sub",L,_,_),l.call(o+"_add",h,_,_),l.call(o+"_add",p,_,_))}(),function(){const a=t.addFunction(e+"_add");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("y"),d=n.i32_add(n.getLocal("y"),n.i32_const(i)),u=n.i32_add(n.getLocal("y"),n.i32_const(2*i)),_=n.getLocal("r"),g=n.i32_add(n.getLocal("r"),n.i32_const(i)),f=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_add",l,r,_),n.call(o+"_add",c,d,g),n.call(o+"_add",s,u,f))}(),function(){const a=t.addFunction(e+"_sub");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("y"),d=n.i32_add(n.getLocal("y"),n.i32_const(i)),u=n.i32_add(n.getLocal("y"),n.i32_const(2*i)),_=n.getLocal("r"),g=n.i32_add(n.getLocal("r"),n.i32_const(i)),f=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_sub",l,r,_),n.call(o+"_sub",c,d,g),n.call(o+"_sub",s,u,f))}(),function(){const a=t.addFunction(e+"_neg");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_neg",l,r),n.call(o+"_neg",c,d),n.call(o+"_neg",s,u))}(),function(){const a=t.addFunction(e+"_sign");a.addParam("x","i32"),a.addLocal("s","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.setLocal("s",n.call(o+"_sign",s)),n.if(n.getLocal("s"),n.ret(n.getLocal("s"))),n.setLocal("s",n.call(o+"_sign",c)),n.if(n.getLocal("s"),n.ret(n.getLocal("s"))),n.ret(n.call(o+"_sign",l)))}(),function(){const a=t.addFunction(e+"_toMontgomery");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_toMontgomery",l,r),n.call(o+"_toMontgomery",c,d),n.call(o+"_toMontgomery",s,u))}(),function(){const a=t.addFunction(e+"_fromMontgomery");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_fromMontgomery",l,r),n.call(o+"_fromMontgomery",c,d),n.call(o+"_fromMontgomery",s,u))}(),function(){const a=t.addFunction(e+"_eq");a.addParam("x","i32"),a.addParam("y","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("y"),d=n.i32_add(n.getLocal("y"),n.i32_const(i)),u=n.i32_add(n.getLocal("y"),n.i32_const(2*i));a.addCode(n.i32_and(n.i32_and(n.call(o+"_eq",l,r),n.call(o+"_eq",c,d)),n.call(o+"_eq",s,u)))}(),function(){const n=t.addFunction(e+"_inverse");n.addParam("x","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.i32_add(l.getLocal("x"),l.i32_const(2*i)),d=l.getLocal("r"),u=l.i32_add(l.getLocal("r"),l.i32_const(i)),_=l.i32_add(l.getLocal("r"),l.i32_const(2*i)),g=l.i32_const(t.alloc(i)),f=l.i32_const(t.alloc(i)),p=l.i32_const(t.alloc(i)),h=l.i32_const(t.alloc(i)),m=l.i32_const(t.alloc(i)),L=l.i32_const(t.alloc(i)),b=l.i32_const(t.alloc(i)),w=l.i32_const(t.alloc(i)),y=l.i32_const(t.alloc(i)),A=l.i32_const(t.alloc(i)),C=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_square",c,g),l.call(o+"_square",s,f),l.call(o+"_square",r,p),l.call(o+"_mul",c,s,h),l.call(o+"_mul",c,r,m),l.call(o+"_mul",s,r,L),l.call(a,L,b),l.call(o+"_sub",g,b,b),l.call(a,p,w),l.call(o+"_sub",w,h,w),l.call(o+"_sub",f,m,y),l.call(o+"_mul",r,w,A),l.call(o+"_mul",s,y,C),l.call(o+"_add",A,C,A),l.call(a,A,A),l.call(o+"_mul",c,b,C),l.call(o+"_add",C,A,A),l.call(o+"_inverse",A,A),l.call(o+"_mul",A,b,d),l.call(o+"_mul",A,w,u),l.call(o+"_mul",A,y,_))}(),function(){const a=t.addFunction(e+"_timesScalar");a.addParam("x","i32"),a.addParam("scalar","i32"),a.addParam("scalarLen","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_timesScalar",l,n.getLocal("scalar"),n.getLocal("scalarLen"),r),n.call(o+"_timesScalar",c,n.getLocal("scalar"),n.getLocal("scalarLen"),d),n.call(o+"_timesScalar",s,n.getLocal("scalar"),n.getLocal("scalarLen"),u))}(),function(){const a=t.addFunction(e+"_isNegative");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.if(n.call(o+"_isZero",s),n.if(n.call(o+"_isZero",c),n.ret(n.call(o+"_isNegative",l)),n.ret(n.call(o+"_isNegative",c)))),n.ret(n.call(o+"_isNegative",s)))}(),t.exportFunction(e+"_isZero"),t.exportFunction(e+"_isOne"),t.exportFunction(e+"_zero"),t.exportFunction(e+"_one"),t.exportFunction(e+"_copy"),t.exportFunction(e+"_mul"),t.exportFunction(e+"_square"),t.exportFunction(e+"_add"),t.exportFunction(e+"_sub"),t.exportFunction(e+"_neg"),t.exportFunction(e+"_sign"),t.exportFunction(e+"_fromMontgomery"),t.exportFunction(e+"_toMontgomery"),t.exportFunction(e+"_eq"),t.exportFunction(e+"_inverse"),qt(t,e),Ot(t,e+"_exp",3*i,e+"_mul",e+"_square",e+"_copy",e+"_one"),t.exportFunction(e+"_exp"),t.exportFunction(e+"_timesScalar"),t.exportFunction(e+"_batchInverse"),t.exportFunction(e+"_isNegative"),e};const zt=function(t,a,e,o,i,n,l,c){const s=t.addFunction(a);s.addParam("base","i32"),s.addParam("scalar","i32"),s.addParam("scalarLength","i32"),s.addParam("r","i32"),s.addLocal("old0","i32"),s.addLocal("nbits","i32"),s.addLocal("i","i32"),s.addLocal("last","i32"),s.addLocal("cur","i32"),s.addLocal("carry","i32"),s.addLocal("p","i32");const r=s.getCodeBuilder(),d=r.i32_const(t.alloc(e));function u(t){return r.i32_and(r.i32_shr_u(r.i32_load(r.i32_add(r.getLocal("scalar"),r.i32_and(r.i32_shr_u(t,r.i32_const(3)),r.i32_const(4294967292)))),r.i32_and(t,r.i32_const(31))),r.i32_const(1))}function _(t){return[...r.i32_store8(r.getLocal("p"),r.i32_const(t)),...r.setLocal("p",r.i32_add(r.getLocal("p"),r.i32_const(1)))]}s.addCode(r.if(r.i32_eqz(r.getLocal("scalarLength")),[...r.call(c,r.getLocal("r")),...r.ret([])]),r.setLocal("nbits",r.i32_shl(r.getLocal("scalarLength"),r.i32_const(3))),r.setLocal("old0",r.i32_load(r.i32_const(0))),r.setLocal("p",r.getLocal("old0")),r.i32_store(r.i32_const(0),r.i32_and(r.i32_add(r.i32_add(r.getLocal("old0"),r.i32_const(32)),r.getLocal("nbits")),r.i32_const(4294967288))),r.setLocal("i",r.i32_const(1)),r.setLocal("last",u(r.i32_const(0))),r.setLocal("carry",r.i32_const(0)),r.block(r.loop(r.br_if(1,r.i32_eq(r.getLocal("i"),r.getLocal("nbits"))),r.setLocal("cur",u(r.getLocal("i"))),r.if(r.getLocal("last"),r.if(r.getLocal("cur"),r.if(r.getLocal("carry"),[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(1)),..._(1)],[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(1)),..._(255)]),r.if(r.getLocal("carry"),[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(1)),..._(255)],[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(0)),..._(1)])),r.if(r.getLocal("cur"),r.if(r.getLocal("carry"),[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(1)),..._(0)],[...r.setLocal("last",r.i32_const(1)),...r.setLocal("carry",r.i32_const(0)),..._(0)]),r.if(r.getLocal("carry"),[...r.setLocal("last",r.i32_const(1)),...r.setLocal("carry",r.i32_const(0)),..._(0)],[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(0)),..._(0)]))),r.setLocal("i",r.i32_add(r.getLocal("i"),r.i32_const(1))),r.br(0))),r.if(r.getLocal("last"),r.if(r.getLocal("carry"),[..._(255),..._(0),..._(1)],[..._(1)]),r.if(r.getLocal("carry"),[..._(0),..._(1)])),r.setLocal("p",r.i32_sub(r.getLocal("p"),r.i32_const(1))),r.call(l,r.getLocal("base"),d),r.call(c,r.getLocal("r")),r.block(r.loop(r.call(i,r.getLocal("r"),r.getLocal("r")),r.setLocal("cur",r.i32_load8_u(r.getLocal("p"))),r.if(r.getLocal("cur"),r.if(r.i32_eq(r.getLocal("cur"),r.i32_const(1)),r.call(o,r.getLocal("r"),d,r.getLocal("r")),r.call(n,r.getLocal("r"),d,r.getLocal("r")))),r.br_if(1,r.i32_eq(r.getLocal("old0"),r.getLocal("p"))),r.setLocal("p",r.i32_sub(r.getLocal("p"),r.i32_const(1))),r.br(0))),r.i32_store(r.i32_const(0),r.getLocal("old0")))},Tt=W,Mt=function(t,a,e,o,i){const n=8*t.modules[a].n64;function l(){const o=t.addFunction(e);o.addParam("pBases","i32"),o.addParam("pScalars","i32"),o.addParam("scalarSize","i32"),o.addParam("n","i32"),o.addParam("pr","i32"),o.addLocal("chunkSize","i32"),o.addLocal("nChunks","i32"),o.addLocal("itScalar","i32"),o.addLocal("endScalar","i32"),o.addLocal("itBase","i32"),o.addLocal("itBit","i32"),o.addLocal("i","i32"),o.addLocal("j","i32"),o.addLocal("nTable","i32"),o.addLocal("pTable","i32"),o.addLocal("idx","i32"),o.addLocal("pIdxTable","i32");const i=o.getCodeBuilder(),l=i.i32_const(t.alloc(n)),c=t.alloc([17,17,17,17,17,17,17,17,17,17,16,16,15,14,13,13,12,11,10,9,8,7,7,6,5,4,3,2,1,1,1,1]);o.addCode(i.call(a+"_zero",i.getLocal("pr")),i.if(i.i32_eqz(i.getLocal("n")),i.ret([])),i.setLocal("chunkSize",i.i32_load8_u(i.i32_clz(i.getLocal("n")),c)),i.setLocal("nChunks",i.i32_add(i.i32_div_u(i.i32_sub(i.i32_shl(i.getLocal("scalarSize"),i.i32_const(3)),i.i32_const(1)),i.getLocal("chunkSize")),i.i32_const(1))),i.setLocal("itBit",i.i32_mul(i.i32_sub(i.getLocal("nChunks"),i.i32_const(1)),i.getLocal("chunkSize"))),i.block(i.loop(i.br_if(1,i.i32_lt_s(i.getLocal("itBit"),i.i32_const(0))),i.if(i.i32_eqz(i.call(a+"_isZero",i.getLocal("pr"))),[...i.setLocal("j",i.i32_const(0)),...i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("j"),i.getLocal("chunkSize"))),i.call(a+"_double",i.getLocal("pr"),i.getLocal("pr")),i.setLocal("j",i.i32_add(i.getLocal("j"),i.i32_const(1))),i.br(0)))]),i.call(e+"_chunk",i.getLocal("pBases"),i.getLocal("pScalars"),i.getLocal("scalarSize"),i.getLocal("n"),i.getLocal("itBit"),i.getLocal("chunkSize"),l),i.call(a+"_add",i.getLocal("pr"),l,i.getLocal("pr")),i.setLocal("itBit",i.i32_sub(i.getLocal("itBit"),i.getLocal("chunkSize"))),i.br(0))))}!function(){const a=t.addFunction(e+"_getChunk");a.addParam("pScalar","i32"),a.addParam("scalarSize","i32"),a.addParam("startBit","i32"),a.addParam("chunkSize","i32"),a.addLocal("bitsToEnd","i32"),a.addLocal("mask","i32"),a.setReturnType("i32");const o=a.getCodeBuilder();a.addCode(o.setLocal("bitsToEnd",o.i32_sub(o.i32_mul(o.getLocal("scalarSize"),o.i32_const(8)),o.getLocal("startBit"))),o.if(o.i32_gt_s(o.getLocal("chunkSize"),o.getLocal("bitsToEnd")),o.setLocal("mask",o.i32_sub(o.i32_shl(o.i32_const(1),o.getLocal("bitsToEnd")),o.i32_const(1))),o.setLocal("mask",o.i32_sub(o.i32_shl(o.i32_const(1),o.getLocal("chunkSize")),o.i32_const(1)))),o.i32_and(o.i32_shr_u(o.i32_load(o.i32_add(o.getLocal("pScalar"),o.i32_shr_u(o.getLocal("startBit"),o.i32_const(3))),0,0),o.i32_and(o.getLocal("startBit"),o.i32_const(7))),o.getLocal("mask")))}(),function(){const o=t.addFunction(e+"_reduceTable");o.addParam("pTable","i32"),o.addParam("p","i32"),o.addLocal("half","i32"),o.addLocal("it1","i32"),o.addLocal("it2","i32"),o.addLocal("pAcc","i32");const i=o.getCodeBuilder();o.addCode(i.if(i.i32_eq(i.getLocal("p"),i.i32_const(1)),i.ret([])),i.setLocal("half",i.i32_shl(i.i32_const(1),i.i32_sub(i.getLocal("p"),i.i32_const(1)))),i.setLocal("it1",i.getLocal("pTable")),i.setLocal("it2",i.i32_add(i.getLocal("pTable"),i.i32_mul(i.getLocal("half"),i.i32_const(n)))),i.setLocal("pAcc",i.i32_sub(i.getLocal("it2"),i.i32_const(n))),i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("it1"),i.getLocal("pAcc"))),i.call(a+"_add",i.getLocal("it1"),i.getLocal("it2"),i.getLocal("it1")),i.call(a+"_add",i.getLocal("pAcc"),i.getLocal("it2"),i.getLocal("pAcc")),i.setLocal("it1",i.i32_add(i.getLocal("it1"),i.i32_const(n))),i.setLocal("it2",i.i32_add(i.getLocal("it2"),i.i32_const(n))),i.br(0))),i.call(e+"_reduceTable",i.getLocal("pTable"),i.i32_sub(i.getLocal("p"),i.i32_const(1))),i.setLocal("p",i.i32_sub(i.getLocal("p"),i.i32_const(1))),i.block(i.loop(i.br_if(1,i.i32_eqz(i.getLocal("p"))),i.call(a+"_double",i.getLocal("pAcc"),i.getLocal("pAcc")),i.setLocal("p",i.i32_sub(i.getLocal("p"),i.i32_const(1))),i.br(0))),i.call(a+"_add",i.getLocal("pTable"),i.getLocal("pAcc"),i.getLocal("pTable")))}(),function(){const l=t.addFunction(e+"_chunk");l.addParam("pBases","i32"),l.addParam("pScalars","i32"),l.addParam("scalarSize","i32"),l.addParam("n","i32"),l.addParam("startBit","i32"),l.addParam("chunkSize","i32"),l.addParam("pr","i32"),l.addLocal("nChunks","i32"),l.addLocal("itScalar","i32"),l.addLocal("endScalar","i32"),l.addLocal("itBase","i32"),l.addLocal("i","i32"),l.addLocal("j","i32"),l.addLocal("nTable","i32"),l.addLocal("pTable","i32"),l.addLocal("idx","i32"),l.addLocal("pIdxTable","i32");const c=l.getCodeBuilder();l.addCode(c.if(c.i32_eqz(c.getLocal("n")),[...c.call(a+"_zero",c.getLocal("pr")),...c.ret([])]),c.setLocal("nTable",c.i32_shl(c.i32_const(1),c.getLocal("chunkSize"))),c.setLocal("pTable",c.i32_load(c.i32_const(0))),c.i32_store(c.i32_const(0),c.i32_add(c.getLocal("pTable"),c.i32_mul(c.getLocal("nTable"),c.i32_const(n)))),c.setLocal("j",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("j"),c.getLocal("nTable"))),c.call(a+"_zero",c.i32_add(c.getLocal("pTable"),c.i32_mul(c.getLocal("j"),c.i32_const(n)))),c.setLocal("j",c.i32_add(c.getLocal("j"),c.i32_const(1))),c.br(0))),c.setLocal("itBase",c.getLocal("pBases")),c.setLocal("itScalar",c.getLocal("pScalars")),c.setLocal("endScalar",c.i32_add(c.getLocal("pScalars"),c.i32_mul(c.getLocal("n"),c.getLocal("scalarSize")))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("itScalar"),c.getLocal("endScalar"))),c.setLocal("idx",c.call(e+"_getChunk",c.getLocal("itScalar"),c.getLocal("scalarSize"),c.getLocal("startBit"),c.getLocal("chunkSize"))),c.if(c.getLocal("idx"),[...c.setLocal("pIdxTable",c.i32_add(c.getLocal("pTable"),c.i32_mul(c.i32_sub(c.getLocal("idx"),c.i32_const(1)),c.i32_const(n)))),...c.call(o,c.getLocal("pIdxTable"),c.getLocal("itBase"),c.getLocal("pIdxTable"))]),c.setLocal("itScalar",c.i32_add(c.getLocal("itScalar"),c.getLocal("scalarSize"))),c.setLocal("itBase",c.i32_add(c.getLocal("itBase"),c.i32_const(i))),c.br(0))),c.call(e+"_reduceTable",c.getLocal("pTable"),c.getLocal("chunkSize")),c.call(a+"_copy",c.getLocal("pTable"),c.getLocal("pr")),c.i32_store(c.i32_const(0),c.getLocal("pTable")))}(),l(),t.exportFunction(e),t.exportFunction(e+"_chunk")};var Ut=function(t,a,e,o){const i=t.modules[e].n64,n=8*i;if(t.modules[a])return a;return t.modules[a]={n64:3*i},function(){const o=t.addFunction(a+"_isZeroAffine");o.addParam("p1","i32"),o.setReturnType("i32");const i=o.getCodeBuilder();o.addCode(i.i32_and(i.call(e+"_isZero",i.getLocal("p1")),i.call(e+"_isZero",i.i32_add(i.getLocal("p1"),i.i32_const(n)))))}(),function(){const o=t.addFunction(a+"_isZero");o.addParam("p1","i32"),o.setReturnType("i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_isZero",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))))}(),function(){const o=t.addFunction(a+"_zeroAffine");o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_zero",i.getLocal("pr"))),o.addCode(i.call(e+"_zero",i.i32_add(i.getLocal("pr"),i.i32_const(n))))}(),function(){const o=t.addFunction(a+"_zero");o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_zero",i.getLocal("pr"))),o.addCode(i.call(e+"_one",i.i32_add(i.getLocal("pr"),i.i32_const(n)))),o.addCode(i.call(e+"_zero",i.i32_add(i.getLocal("pr"),i.i32_const(2*n))))}(),function(){const e=t.addFunction(a+"_copyAffine");e.addParam("ps","i32"),e.addParam("pd","i32");const o=e.getCodeBuilder();for(let t=0;t<2*i;t++)e.addCode(o.i64_store(o.getLocal("pd"),8*t,o.i64_load(o.getLocal("ps"),8*t)))}(),function(){const e=t.addFunction(a+"_copy");e.addParam("ps","i32"),e.addParam("pd","i32");const o=e.getCodeBuilder();for(let t=0;t<3*i;t++)e.addCode(o.i64_store(o.getLocal("pd"),8*t,o.i64_load(o.getLocal("ps"),8*t)))}(),function(){const o=t.addFunction(a+"_toJacobian");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.getLocal("pr"),r=i.i32_add(i.getLocal("pr"),i.i32_const(n)),d=i.i32_add(i.getLocal("pr"),i.i32_const(2*n));o.addCode(i.if(i.call(a+"_isZeroAffine",i.getLocal("p1")),i.call(a+"_zero",i.getLocal("pr")),[...i.call(e+"_one",d),...i.call(e+"_copy",c,r),...i.call(e+"_copy",l,s)]))}(),function(){const o=t.addFunction(a+"_eqAffine");o.addParam("p1","i32"),o.addParam("p2","i32"),o.setReturnType("i32"),o.addLocal("z1","i32");const i=o.getCodeBuilder();o.addCode(i.ret(i.i32_and(i.call(e+"_eq",i.getLocal("p1"),i.getLocal("p2")),i.call(e+"_eq",i.i32_add(i.getLocal("p1"),i.i32_const(n)),i.i32_add(i.getLocal("p2"),i.i32_const(n))))))}(),function(){const o=t.addFunction(a+"_eqMixed");o.addParam("p1","i32"),o.addParam("p2","i32"),o.setReturnType("i32"),o.addLocal("z1","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n));o.addCode(i.setLocal("z1",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))));const s=i.getLocal("z1"),r=i.getLocal("p2"),d=i.i32_add(i.getLocal("p2"),i.i32_const(n)),u=i.i32_const(t.alloc(n)),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),i.ret(i.call(a+"_isZeroAffine",i.getLocal("p2")))),i.if(i.call(a+"_isZeroAffine",i.getLocal("p2")),i.ret(i.i32_const(0))),i.if(i.call(e+"_isOne",s),i.ret(i.call(a+"_eqAffine",i.getLocal("p1"),i.getLocal("p2")))),i.call(e+"_square",s,u),i.call(e+"_mul",r,u,_),i.call(e+"_mul",s,u,g),i.call(e+"_mul",d,g,f),i.if(i.call(e+"_eq",l,_),i.if(i.call(e+"_eq",c,f),i.ret(i.i32_const(1)))),i.ret(i.i32_const(0)))}(),function(){const o=t.addFunction(a+"_eq");o.addParam("p1","i32"),o.addParam("p2","i32"),o.setReturnType("i32"),o.addLocal("z1","i32"),o.addLocal("z2","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n));o.addCode(i.setLocal("z1",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))));const s=i.getLocal("z1"),r=i.getLocal("p2"),d=i.i32_add(i.getLocal("p2"),i.i32_const(n));o.addCode(i.setLocal("z2",i.i32_add(i.getLocal("p2"),i.i32_const(2*n))));const u=i.getLocal("z2"),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n)),m=i.i32_const(t.alloc(n)),L=i.i32_const(t.alloc(n)),b=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),i.ret(i.call(a+"_isZero",i.getLocal("p2")))),i.if(i.call(a+"_isZero",i.getLocal("p2")),i.ret(i.i32_const(0))),i.if(i.call(e+"_isOne",s),i.ret(i.call(a+"_eqMixed",i.getLocal("p2"),i.getLocal("p1")))),i.if(i.call(e+"_isOne",u),i.ret(i.call(a+"_eqMixed",i.getLocal("p1"),i.getLocal("p2")))),i.call(e+"_square",s,_),i.call(e+"_square",u,g),i.call(e+"_mul",l,g,f),i.call(e+"_mul",r,_,p),i.call(e+"_mul",s,_,h),i.call(e+"_mul",u,g,m),i.call(e+"_mul",c,m,L),i.call(e+"_mul",d,h,b),i.if(i.call(e+"_eq",f,p),i.if(i.call(e+"_eq",L,b),i.ret(i.i32_const(1)))),i.ret(i.i32_const(0)))}(),function(){const o=t.addFunction(a+"_doubleAffine");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.getLocal("pr"),r=i.i32_add(i.getLocal("pr"),i.i32_const(n)),d=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),u=i.i32_const(t.alloc(n)),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZeroAffine",i.getLocal("p1")),[...i.call(a+"_toJacobian",i.getLocal("p1"),i.getLocal("pr")),...i.ret([])]),i.call(e+"_square",l,u),i.call(e+"_square",c,_),i.call(e+"_square",_,g),i.call(e+"_add",l,_,f),i.call(e+"_square",f,f),i.call(e+"_sub",f,u,f),i.call(e+"_sub",f,g,f),i.call(e+"_add",f,f,f),i.call(e+"_add",u,u,p),i.call(e+"_add",p,u,p),i.call(e+"_add",c,c,d),i.call(e+"_square",p,s),i.call(e+"_sub",s,f,s),i.call(e+"_sub",s,f,s),i.call(e+"_add",g,g,h),i.call(e+"_add",h,h,h),i.call(e+"_add",h,h,h),i.call(e+"_sub",f,s,r),i.call(e+"_mul",r,p,r),i.call(e+"_sub",r,h,r))}(),function(){const o=t.addFunction(a+"_double");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.i32_add(i.getLocal("p1"),i.i32_const(2*n)),r=i.getLocal("pr"),d=i.i32_add(i.getLocal("pr"),i.i32_const(n)),u=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n)),m=i.i32_const(t.alloc(n)),L=i.i32_const(t.alloc(n)),b=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),[...i.call(a+"_copy",i.getLocal("p1"),i.getLocal("pr")),...i.ret([])]),i.if(i.call(e+"_isOne",s),[...i.ret(i.call(a+"_doubleAffine",i.getLocal("p1"),i.getLocal("pr"))),...i.ret([])]),i.call(e+"_square",l,_),i.call(e+"_square",c,g),i.call(e+"_square",g,f),i.call(e+"_add",l,g,p),i.call(e+"_square",p,p),i.call(e+"_sub",p,_,p),i.call(e+"_sub",p,f,p),i.call(e+"_add",p,p,p),i.call(e+"_add",_,_,h),i.call(e+"_add",h,_,h),i.call(e+"_square",h,m),i.call(e+"_mul",c,s,L),i.call(e+"_add",p,p,r),i.call(e+"_sub",m,r,r),i.call(e+"_add",f,f,b),i.call(e+"_add",b,b,b),i.call(e+"_add",b,b,b),i.call(e+"_sub",p,r,d),i.call(e+"_mul",d,h,d),i.call(e+"_sub",d,b,d),i.call(e+"_add",L,L,u))}(),function(){const o=t.addFunction(a+"_addAffine");o.addParam("p1","i32"),o.addParam("p2","i32"),o.addParam("pr","i32"),o.addLocal("z1","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n));o.addCode(i.setLocal("z1",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))));const s=i.getLocal("p2"),r=i.i32_add(i.getLocal("p2"),i.i32_const(n)),d=i.getLocal("pr"),u=i.i32_add(i.getLocal("pr"),i.i32_const(n)),_=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n)),m=i.i32_const(t.alloc(n)),L=i.i32_const(t.alloc(n)),b=i.i32_const(t.alloc(n)),w=i.i32_const(t.alloc(n)),y=i.i32_const(t.alloc(n)),A=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZeroAffine",i.getLocal("p1")),[...i.call(a+"_copyAffine",i.getLocal("p2"),i.getLocal("pr")),...i.call(e+"_one",i.i32_add(i.getLocal("pr"),i.i32_const(2*n))),...i.ret([])]),i.if(i.call(a+"_isZeroAffine",i.getLocal("p2")),[...i.call(a+"_copyAffine",i.getLocal("p1"),i.getLocal("pr")),...i.call(e+"_one",i.i32_add(i.getLocal("pr"),i.i32_const(2*n))),...i.ret([])]),i.if(i.call(e+"_eq",l,s),i.if(i.call(e+"_eq",c,r),[...i.call(a+"_doubleAffine",i.getLocal("p2"),i.getLocal("pr")),...i.ret([])])),i.call(e+"_sub",s,l,g),i.call(e+"_sub",r,c,p),i.call(e+"_square",g,f),i.call(e+"_add",f,f,h),i.call(e+"_add",h,h,h),i.call(e+"_mul",g,h,m),i.call(e+"_add",p,p,L),i.call(e+"_mul",l,h,w),i.call(e+"_square",L,b),i.call(e+"_add",w,w,y),i.call(e+"_sub",b,m,d),i.call(e+"_sub",d,y,d),i.call(e+"_mul",c,m,A),i.call(e+"_add",A,A,A),i.call(e+"_sub",w,d,u),i.call(e+"_mul",u,L,u),i.call(e+"_sub",u,A,u),i.call(e+"_add",g,g,_))}(),function(){const o=t.addFunction(a+"_addMixed");o.addParam("p1","i32"),o.addParam("p2","i32"),o.addParam("pr","i32"),o.addLocal("z1","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n));o.addCode(i.setLocal("z1",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))));const s=i.getLocal("z1"),r=i.getLocal("p2"),d=i.i32_add(i.getLocal("p2"),i.i32_const(n)),u=i.getLocal("pr"),_=i.i32_add(i.getLocal("pr"),i.i32_const(n)),g=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),f=i.i32_const(t.alloc(n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n)),m=i.i32_const(t.alloc(n)),L=i.i32_const(t.alloc(n)),b=i.i32_const(t.alloc(n)),w=i.i32_const(t.alloc(n)),y=i.i32_const(t.alloc(n)),A=i.i32_const(t.alloc(n)),C=i.i32_const(t.alloc(n)),x=i.i32_const(t.alloc(n)),F=i.i32_const(t.alloc(n)),I=i.i32_const(t.alloc(n)),B=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),[...i.call(a+"_copyAffine",i.getLocal("p2"),i.getLocal("pr")),...i.call(e+"_one",i.i32_add(i.getLocal("pr"),i.i32_const(2*n))),...i.ret([])]),i.if(i.call(a+"_isZeroAffine",i.getLocal("p2")),[...i.call(a+"_copy",i.getLocal("p1"),i.getLocal("pr")),...i.ret([])]),i.if(i.call(e+"_isOne",s),[...i.call(a+"_addAffine",l,r,u),...i.ret([])]),i.call(e+"_square",s,f),i.call(e+"_mul",r,f,p),i.call(e+"_mul",s,f,h),i.call(e+"_mul",d,h,m),i.if(i.call(e+"_eq",l,p),i.if(i.call(e+"_eq",c,m),[...i.call(a+"_doubleAffine",i.getLocal("p2"),i.getLocal("pr")),...i.ret([])])),i.call(e+"_sub",p,l,L),i.call(e+"_sub",m,c,w),i.call(e+"_square",L,b),i.call(e+"_add",b,b,y),i.call(e+"_add",y,y,y),i.call(e+"_mul",L,y,A),i.call(e+"_add",w,w,C),i.call(e+"_mul",l,y,F),i.call(e+"_square",C,x),i.call(e+"_add",F,F,I),i.call(e+"_sub",x,A,u),i.call(e+"_sub",u,I,u),i.call(e+"_mul",c,A,B),i.call(e+"_add",B,B,B),i.call(e+"_sub",F,u,_),i.call(e+"_mul",_,C,_),i.call(e+"_sub",_,B,_),i.call(e+"_add",s,L,g),i.call(e+"_square",g,g),i.call(e+"_sub",g,f,g),i.call(e+"_sub",g,b,g))}(),function(){const o=t.addFunction(a+"_add");o.addParam("p1","i32"),o.addParam("p2","i32"),o.addParam("pr","i32"),o.addLocal("z1","i32"),o.addLocal("z2","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n));o.addCode(i.setLocal("z1",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))));const s=i.getLocal("z1"),r=i.getLocal("p2"),d=i.i32_add(i.getLocal("p2"),i.i32_const(n));o.addCode(i.setLocal("z2",i.i32_add(i.getLocal("p2"),i.i32_const(2*n))));const u=i.getLocal("z2"),_=i.getLocal("pr"),g=i.i32_add(i.getLocal("pr"),i.i32_const(n)),f=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n)),m=i.i32_const(t.alloc(n)),L=i.i32_const(t.alloc(n)),b=i.i32_const(t.alloc(n)),w=i.i32_const(t.alloc(n)),y=i.i32_const(t.alloc(n)),A=i.i32_const(t.alloc(n)),C=i.i32_const(t.alloc(n)),x=i.i32_const(t.alloc(n)),F=i.i32_const(t.alloc(n)),I=i.i32_const(t.alloc(n)),B=i.i32_const(t.alloc(n)),E=i.i32_const(t.alloc(n)),v=i.i32_const(t.alloc(n)),S=i.i32_const(t.alloc(n)),P=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),[...i.call(a+"_copy",i.getLocal("p2"),i.getLocal("pr")),...i.ret([])]),i.if(i.call(a+"_isZero",i.getLocal("p2")),[...i.call(a+"_copy",i.getLocal("p1"),i.getLocal("pr")),...i.ret([])]),i.if(i.call(e+"_isOne",s),[...i.call(a+"_addMixed",r,l,_),...i.ret([])]),i.if(i.call(e+"_isOne",u),[...i.call(a+"_addMixed",l,r,_),...i.ret([])]),i.call(e+"_square",s,p),i.call(e+"_square",u,h),i.call(e+"_mul",l,h,m),i.call(e+"_mul",r,p,L),i.call(e+"_mul",s,p,b),i.call(e+"_mul",u,h,w),i.call(e+"_mul",c,w,y),i.call(e+"_mul",d,b,A),i.if(i.call(e+"_eq",m,L),i.if(i.call(e+"_eq",y,A),[...i.call(a+"_double",i.getLocal("p1"),i.getLocal("pr")),...i.ret([])])),i.call(e+"_sub",L,m,C),i.call(e+"_sub",A,y,x),i.call(e+"_add",C,C,F),i.call(e+"_square",F,F),i.call(e+"_mul",C,F,I),i.call(e+"_add",x,x,B),i.call(e+"_mul",m,F,v),i.call(e+"_square",B,E),i.call(e+"_add",v,v,S),i.call(e+"_sub",E,I,_),i.call(e+"_sub",_,S,_),i.call(e+"_mul",y,I,P),i.call(e+"_add",P,P,P),i.call(e+"_sub",v,_,g),i.call(e+"_mul",g,B,g),i.call(e+"_sub",g,P,g),i.call(e+"_add",s,u,f),i.call(e+"_square",f,f),i.call(e+"_sub",f,p,f),i.call(e+"_sub",f,h,f),i.call(e+"_mul",f,C,f))}(),function(){const o=t.addFunction(a+"_negAffine");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.getLocal("pr"),r=i.i32_add(i.getLocal("pr"),i.i32_const(n));o.addCode(i.call(e+"_copy",l,s),i.call(e+"_neg",c,r))}(),function(){const o=t.addFunction(a+"_neg");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.i32_add(i.getLocal("p1"),i.i32_const(2*n)),r=i.getLocal("pr"),d=i.i32_add(i.getLocal("pr"),i.i32_const(n)),u=i.i32_add(i.getLocal("pr"),i.i32_const(2*n));o.addCode(i.call(e+"_copy",l,r),i.call(e+"_neg",c,d),i.call(e+"_copy",s,u))}(),function(){const e=t.addFunction(a+"_subAffine");e.addParam("p1","i32"),e.addParam("p2","i32"),e.addParam("pr","i32");const o=e.getCodeBuilder(),i=o.i32_const(t.alloc(3*n));e.addCode(o.call(a+"_negAffine",o.getLocal("p2"),i),o.call(a+"_addAffine",o.getLocal("p1"),i,o.getLocal("pr")))}(),function(){const e=t.addFunction(a+"_subMixed");e.addParam("p1","i32"),e.addParam("p2","i32"),e.addParam("pr","i32");const o=e.getCodeBuilder(),i=o.i32_const(t.alloc(3*n));e.addCode(o.call(a+"_negAffine",o.getLocal("p2"),i),o.call(a+"_addMixed",o.getLocal("p1"),i,o.getLocal("pr")))}(),function(){const e=t.addFunction(a+"_sub");e.addParam("p1","i32"),e.addParam("p2","i32"),e.addParam("pr","i32");const o=e.getCodeBuilder(),i=o.i32_const(t.alloc(3*n));e.addCode(o.call(a+"_neg",o.getLocal("p2"),i),o.call(a+"_add",o.getLocal("p1"),i,o.getLocal("pr")))}(),function(){const o=t.addFunction(a+"_fromMontgomeryAffine");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_fromMontgomery",i.getLocal("p1"),i.getLocal("pr")));for(let t=1;t<2;t++)o.addCode(i.call(e+"_fromMontgomery",i.i32_add(i.getLocal("p1"),i.i32_const(t*n)),i.i32_add(i.getLocal("pr"),i.i32_const(t*n))))}(),function(){const o=t.addFunction(a+"_fromMontgomery");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_fromMontgomery",i.getLocal("p1"),i.getLocal("pr")));for(let t=1;t<3;t++)o.addCode(i.call(e+"_fromMontgomery",i.i32_add(i.getLocal("p1"),i.i32_const(t*n)),i.i32_add(i.getLocal("pr"),i.i32_const(t*n))))}(),function(){const o=t.addFunction(a+"_toMontgomeryAffine");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_toMontgomery",i.getLocal("p1"),i.getLocal("pr")));for(let t=1;t<2;t++)o.addCode(i.call(e+"_toMontgomery",i.i32_add(i.getLocal("p1"),i.i32_const(t*n)),i.i32_add(i.getLocal("pr"),i.i32_const(t*n))))}(),function(){const o=t.addFunction(a+"_toMontgomery");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_toMontgomery",i.getLocal("p1"),i.getLocal("pr")));for(let t=1;t<3;t++)o.addCode(i.call(e+"_toMontgomery",i.i32_add(i.getLocal("p1"),i.i32_const(t*n)),i.i32_add(i.getLocal("pr"),i.i32_const(t*n))))}(),function(){const o=t.addFunction(a+"_toAffine");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.i32_add(i.getLocal("p1"),i.i32_const(2*n)),r=i.getLocal("pr"),d=i.i32_add(i.getLocal("pr"),i.i32_const(n)),u=i.i32_const(t.alloc(n)),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),[...i.call(e+"_zero",r),...i.call(e+"_zero",d)],[...i.call(e+"_inverse",s,u),...i.call(e+"_square",u,_),...i.call(e+"_mul",u,_,g),...i.call(e+"_mul",l,_,r),...i.call(e+"_mul",c,g,d)]))}(),function(){const i=t.addFunction(a+"_inCurveAffine");i.addParam("pIn","i32"),i.setReturnType("i32");const l=i.getCodeBuilder(),c=l.getLocal("pIn"),s=l.i32_add(l.getLocal("pIn"),l.i32_const(n)),r=l.i32_const(t.alloc(n)),d=l.i32_const(t.alloc(n));i.addCode(l.call(e+"_square",s,r),l.call(e+"_square",c,d),l.call(e+"_mul",c,d,d),l.call(e+"_add",d,l.i32_const(o),d),l.ret(l.call(e+"_eq",r,d)))}(),function(){const e=t.addFunction(a+"_inCurve");e.addParam("pIn","i32"),e.setReturnType("i32");const o=e.getCodeBuilder(),i=o.i32_const(t.alloc(2*n));e.addCode(o.call(a+"_toAffine",o.getLocal("pIn"),i),o.ret(o.call(a+"_inCurveAffine",i)))}(),function(){const o=t.addFunction(a+"_batchToAffine");o.addParam("pIn","i32"),o.addParam("n","i32"),o.addParam("pOut","i32"),o.addLocal("pAux","i32"),o.addLocal("itIn","i32"),o.addLocal("itAux","i32"),o.addLocal("itOut","i32"),o.addLocal("i","i32");const i=o.getCodeBuilder(),l=i.i32_const(t.alloc(n));o.addCode(i.setLocal("pAux",i.i32_load(i.i32_const(0))),i.i32_store(i.i32_const(0),i.i32_add(i.getLocal("pAux"),i.i32_mul(i.getLocal("n"),i.i32_const(n)))),i.call(e+"_batchInverse",i.i32_add(i.getLocal("pIn"),i.i32_const(2*n)),i.i32_const(3*n),i.getLocal("n"),i.getLocal("pAux"),i.i32_const(n)),i.setLocal("itIn",i.getLocal("pIn")),i.setLocal("itAux",i.getLocal("pAux")),i.setLocal("itOut",i.getLocal("pOut")),i.setLocal("i",i.i32_const(0)),i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("i"),i.getLocal("n"))),i.if(i.call(e+"_isZero",i.getLocal("itAux")),[...i.call(e+"_zero",i.getLocal("itOut")),...i.call(e+"_zero",i.i32_add(i.getLocal("itOut"),i.i32_const(n)))],[...i.call(e+"_mul",i.getLocal("itAux"),i.i32_add(i.getLocal("itIn"),i.i32_const(n)),l),...i.call(e+"_square",i.getLocal("itAux"),i.getLocal("itAux")),...i.call(e+"_mul",i.getLocal("itAux"),i.getLocal("itIn"),i.getLocal("itOut")),...i.call(e+"_mul",i.getLocal("itAux"),l,i.i32_add(i.getLocal("itOut"),i.i32_const(n)))]),i.setLocal("itIn",i.i32_add(i.getLocal("itIn"),i.i32_const(3*n))),i.setLocal("itOut",i.i32_add(i.getLocal("itOut"),i.i32_const(2*n))),i.setLocal("itAux",i.i32_add(i.getLocal("itAux"),i.i32_const(n))),i.setLocal("i",i.i32_add(i.getLocal("i"),i.i32_const(1))),i.br(0))),i.i32_store(i.i32_const(0),i.getLocal("pAux")))}(),function(){const o=t.addFunction(a+"_normalize");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.i32_add(i.getLocal("p1"),i.i32_const(2*n)),r=i.getLocal("pr"),d=i.i32_add(i.getLocal("pr"),i.i32_const(n)),u=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),i.call(a+"_zero",i.getLocal("pr")),[...i.call(e+"_inverse",s,_),...i.call(e+"_square",_,g),...i.call(e+"_mul",_,g,f),...i.call(e+"_mul",l,g,r),...i.call(e+"_mul",c,f,d),...i.call(e+"_one",u)]))}(),function(){const e=t.addFunction(a+"__reverseBytes");e.addParam("pIn","i32"),e.addParam("n","i32"),e.addParam("pOut","i32"),e.addLocal("itOut","i32"),e.addLocal("itIn","i32");const o=e.getCodeBuilder();e.addCode(o.setLocal("itOut",o.i32_sub(o.i32_add(o.getLocal("pOut"),o.getLocal("n")),o.i32_const(1))),o.setLocal("itIn",o.getLocal("pIn")),o.block(o.loop(o.br_if(1,o.i32_lt_s(o.getLocal("itOut"),o.getLocal("pOut"))),o.i32_store8(o.getLocal("itOut"),o.i32_load8_u(o.getLocal("itIn"))),o.setLocal("itOut",o.i32_sub(o.getLocal("itOut"),o.i32_const(1))),o.setLocal("itIn",o.i32_add(o.getLocal("itIn"),o.i32_const(1))),o.br(0))))}(),function(){const e=t.addFunction(a+"_LEMtoU");e.addParam("pIn","i32"),e.addParam("pOut","i32");const o=e.getCodeBuilder(),i=t.alloc(2*n),l=o.i32_const(i),c=o.i32_const(i),s=o.i32_const(i+n);e.addCode(o.if(o.call(a+"_isZeroAffine",o.getLocal("pIn")),[...o.call(a+"_zeroAffine",o.getLocal("pOut")),...o.ret([])]),o.call(a+"_fromMontgomeryAffine",o.getLocal("pIn"),l),o.call(a+"__reverseBytes",c,o.i32_const(n),o.getLocal("pOut")),o.call(a+"__reverseBytes",s,o.i32_const(n),o.i32_add(o.getLocal("pOut"),o.i32_const(n))))}(),function(){const o=t.addFunction(a+"_LEMtoC");o.addParam("pIn","i32"),o.addParam("pOut","i32");const i=o.getCodeBuilder(),l=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("pIn")),[...i.call(e+"_zero",i.getLocal("pOut")),...i.i32_store8(i.getLocal("pOut"),i.i32_const(64)),...i.ret([])]),i.call(e+"_fromMontgomery",i.getLocal("pIn"),l),i.call(a+"__reverseBytes",l,i.i32_const(n),i.getLocal("pOut")),i.if(i.i32_eq(i.call(e+"_sign",i.i32_add(i.getLocal("pIn"),i.i32_const(n))),i.i32_const(-1)),i.i32_store8(i.getLocal("pOut"),i.i32_or(i.i32_load8_u(i.getLocal("pOut")),i.i32_const(128)))))}(),function(){const e=t.addFunction(a+"_UtoLEM");e.addParam("pIn","i32"),e.addParam("pOut","i32");const o=e.getCodeBuilder(),i=t.alloc(2*n),l=o.i32_const(i),c=o.i32_const(i),s=o.i32_const(i+n);e.addCode(o.if(o.i32_and(o.i32_load8_u(o.getLocal("pIn")),o.i32_const(64)),[...o.call(a+"_zeroAffine",o.getLocal("pOut")),...o.ret([])]),o.call(a+"__reverseBytes",o.getLocal("pIn"),o.i32_const(n),c),o.call(a+"__reverseBytes",o.i32_add(o.getLocal("pIn"),o.i32_const(n)),o.i32_const(n),s),o.call(a+"_toMontgomeryAffine",l,o.getLocal("pOut")))}(),function(){const i=t.addFunction(a+"_CtoLEM");i.addParam("pIn","i32"),i.addParam("pOut","i32"),i.addLocal("firstByte","i32"),i.addLocal("greatest","i32");const l=i.getCodeBuilder(),c=t.alloc(2*n),s=l.i32_const(c),r=l.i32_const(c+n);i.addCode(l.setLocal("firstByte",l.i32_load8_u(l.getLocal("pIn"))),l.if(l.i32_and(l.getLocal("firstByte"),l.i32_const(64)),[...l.call(a+"_zeroAffine",l.getLocal("pOut")),...l.ret([])]),l.setLocal("greatest",l.i32_and(l.getLocal("firstByte"),l.i32_const(128))),l.call(e+"_copy",l.getLocal("pIn"),r),l.i32_store8(r,l.i32_and(l.getLocal("firstByte"),l.i32_const(63))),l.call(a+"__reverseBytes",r,l.i32_const(n),s),l.call(e+"_toMontgomery",s,l.getLocal("pOut")),l.call(e+"_square",l.getLocal("pOut"),r),l.call(e+"_mul",l.getLocal("pOut"),r,r),l.call(e+"_add",r,l.i32_const(o),r),l.call(e+"_sqrt",r,r),l.call(e+"_neg",r,s),l.if(l.i32_eq(l.call(e+"_sign",r),l.i32_const(-1)),l.if(l.getLocal("greatest"),l.call(e+"_copy",r,l.i32_add(l.getLocal("pOut"),l.i32_const(n))),l.call(e+"_neg",r,l.i32_add(l.getLocal("pOut"),l.i32_const(n)))),l.if(l.getLocal("greatest"),l.call(e+"_neg",r,l.i32_add(l.getLocal("pOut"),l.i32_const(n))),l.call(e+"_copy",r,l.i32_add(l.getLocal("pOut"),l.i32_const(n))))))}(),Tt(t,a+"_batchLEMtoU",a+"_LEMtoU",2*n,2*n),Tt(t,a+"_batchLEMtoC",a+"_LEMtoC",2*n,n),Tt(t,a+"_batchUtoLEM",a+"_UtoLEM",2*n,2*n),Tt(t,a+"_batchCtoLEM",a+"_CtoLEM",n,2*n,!0),Tt(t,a+"_batchToJacobian",a+"_toJacobian",2*n,3*n,!0),Mt(t,a,a+"_multiexp",a+"_add",3*n),Mt(t,a,a+"_multiexpAffine",a+"_addMixed",2*n),zt(t,a+"_timesScalar",3*n,a+"_add",a+"_double",a+"_sub",a+"_copy",a+"_zero"),zt(t,a+"_timesScalarAffine",2*n,a+"_addMixed",a+"_double",a+"_subMixed",a+"_copyAffine",a+"_zero"),t.exportFunction(a+"_isZero"),t.exportFunction(a+"_isZeroAffine"),t.exportFunction(a+"_eq"),t.exportFunction(a+"_eqMixed"),t.exportFunction(a+"_eqAffine"),t.exportFunction(a+"_copy"),t.exportFunction(a+"_copyAffine"),t.exportFunction(a+"_zero"),t.exportFunction(a+"_zeroAffine"),t.exportFunction(a+"_double"),t.exportFunction(a+"_doubleAffine"),t.exportFunction(a+"_add"),t.exportFunction(a+"_addMixed"),t.exportFunction(a+"_addAffine"),t.exportFunction(a+"_neg"),t.exportFunction(a+"_negAffine"),t.exportFunction(a+"_sub"),t.exportFunction(a+"_subMixed"),t.exportFunction(a+"_subAffine"),t.exportFunction(a+"_fromMontgomery"),t.exportFunction(a+"_fromMontgomeryAffine"),t.exportFunction(a+"_toMontgomery"),t.exportFunction(a+"_toMontgomeryAffine"),t.exportFunction(a+"_timesScalar"),t.exportFunction(a+"_timesScalarAffine"),t.exportFunction(a+"_normalize"),t.exportFunction(a+"_LEMtoU"),t.exportFunction(a+"_LEMtoC"),t.exportFunction(a+"_UtoLEM"),t.exportFunction(a+"_CtoLEM"),t.exportFunction(a+"_batchLEMtoU"),t.exportFunction(a+"_batchLEMtoC"),t.exportFunction(a+"_batchUtoLEM"),t.exportFunction(a+"_batchCtoLEM"),t.exportFunction(a+"_toAffine"),t.exportFunction(a+"_toJacobian"),t.exportFunction(a+"_batchToAffine"),t.exportFunction(a+"_batchToJacobian"),t.exportFunction(a+"_inCurve"),t.exportFunction(a+"_inCurveAffine"),a};const{isOdd:Qt,modInv:kt,modPow:Rt}=J,Nt=K;var Dt=function(t,a,e,o,i){const n=8*t.modules[o].n64,l=8*t.modules[e].n64,c=t.modules[o].q;let s=c-1n,r=0;for(;!Qt(s);)r++,s>>=1n;let d=2n;for(;1n===Rt(d,c>>1n,c);)d+=1n;const u=new Array(r+1);u[r]=Rt(d,s,c);let _=r-1;for(;_>=0;)u[_]=Rt(u[_+1],2n,c),_--;const g=[],f=(1n<<BigInt(8*n))%c;for(let t=0;t<u.length;t++){const a=u[t]*f%c;g.push(...Nt.bigInt2BytesLE(a,n))}const p=t.alloc(g),h=new Array(r+1);h[0]=1n;for(let t=1;t<=r;t++)h[t]=2n*h[t-1];const m=[];for(let t=0;t<=r;t++){const a=kt(h[t],c)*f%c;m.push(...Nt.bigInt2BytesLE(a,n))}const L=t.alloc(m),b=Rt(d,2n,c),w=[],y=[];for(let t=0;t<=r;t++){const a=Rt(b,2n**BigInt(t),c),e=kt(c+1n-a,c);w.push(...Nt.bigInt2BytesLE(a*f%c,n)),y.push(...Nt.bigInt2BytesLE(e*f%c,n))}const A=t.alloc(w),C=t.alloc(y);function x(t){let a=0;for(let e=0;e<8;e++)t&1<<e&&(a|=128>>e);return a}const F=Array(256);for(let t=0;t<256;t++)F[t]=x(t);const I=t.alloc(F);function B(){const e=t.addFunction(a+"_fft");e.addParam("px","i32"),e.addParam("n","i32"),e.addLocal("bits","i32");const i=e.getCodeBuilder(),l=i.i32_const(t.alloc(n));e.addCode(i.setLocal("bits",i.call(a+"__log2",i.getLocal("n"))),i.call(o+"_one",l),i.call(a+"_rawfft",i.getLocal("px"),i.getLocal("bits"),i.i32_const(0),l))}!function(){const e=t.addFunction(a+"__rev");e.addParam("x","i32"),e.addParam("bits","i32"),e.setReturnType("i32");const o=e.getCodeBuilder();e.addCode(o.i32_rotl(o.i32_add(o.i32_add(o.i32_shl(o.i32_load8_u(o.i32_and(o.getLocal("x"),o.i32_const(255)),I,0),o.i32_const(24)),o.i32_shl(o.i32_load8_u(o.i32_and(o.i32_shr_u(o.getLocal("x"),o.i32_const(8)),o.i32_const(255)),I,0),o.i32_const(16))),o.i32_add(o.i32_shl(o.i32_load8_u(o.i32_and(o.i32_shr_u(o.getLocal("x"),o.i32_const(16)),o.i32_const(255)),I,0),o.i32_const(8)),o.i32_load8_u(o.i32_and(o.i32_shr_u(o.getLocal("x"),o.i32_const(24)),o.i32_const(255)),I,0))),o.getLocal("bits")))}(),function(){const o=t.addFunction(a+"__reversePermutation");o.addParam("px","i32"),o.addParam("bits","i32"),o.addLocal("n","i32"),o.addLocal("i","i32"),o.addLocal("ri","i32"),o.addLocal("idx1","i32"),o.addLocal("idx2","i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(l));o.addCode(i.setLocal("n",i.i32_shl(i.i32_const(1),i.getLocal("bits"))),i.setLocal("i",i.i32_const(0)),i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("i"),i.getLocal("n"))),i.setLocal("idx1",i.i32_add(i.getLocal("px"),i.i32_mul(i.getLocal("i"),i.i32_const(l)))),i.setLocal("ri",i.call(a+"__rev",i.getLocal("i"),i.getLocal("bits"))),i.setLocal("idx2",i.i32_add(i.getLocal("px"),i.i32_mul(i.getLocal("ri"),i.i32_const(l)))),i.if(i.i32_lt_u(i.getLocal("i"),i.getLocal("ri")),[...i.call(e+"_copy",i.getLocal("idx1"),n),...i.call(e+"_copy",i.getLocal("idx2"),i.getLocal("idx1")),...i.call(e+"_copy",n,i.getLocal("idx2"))]),i.setLocal("i",i.i32_add(i.getLocal("i"),i.i32_const(1))),i.br(0))))}(),function(){const n=t.addFunction(a+"__fftFinal");n.addParam("px","i32"),n.addParam("bits","i32"),n.addParam("reverse","i32"),n.addParam("mulFactor","i32"),n.addLocal("n","i32"),n.addLocal("ndiv2","i32"),n.addLocal("pInv2","i32"),n.addLocal("i","i32"),n.addLocal("mask","i32"),n.addLocal("idx1","i32"),n.addLocal("idx2","i32");const c=n.getCodeBuilder(),s=c.i32_const(t.alloc(l));n.addCode(c.if(c.i32_and(c.i32_eqz(c.getLocal("reverse")),c.call(o+"_isOne",c.getLocal("mulFactor"))),c.ret([])),c.setLocal("n",c.i32_shl(c.i32_const(1),c.getLocal("bits"))),c.setLocal("mask",c.i32_sub(c.getLocal("n"),c.i32_const(1))),c.setLocal("i",c.i32_const(1)),c.setLocal("ndiv2",c.i32_shr_u(c.getLocal("n"),c.i32_const(1))),c.block(c.loop(c.br_if(1,c.i32_ge_u(c.getLocal("i"),c.getLocal("ndiv2"))),c.setLocal("idx1",c.i32_add(c.getLocal("px"),c.i32_mul(c.getLocal("i"),c.i32_const(l)))),c.setLocal("idx2",c.i32_add(c.getLocal("px"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.getLocal("i")),c.i32_const(l)))),c.if(c.getLocal("reverse"),c.if(c.call(o+"_isOne",c.getLocal("mulFactor")),[...c.call(e+"_copy",c.getLocal("idx1"),s),...c.call(e+"_copy",c.getLocal("idx2"),c.getLocal("idx1")),...c.call(e+"_copy",s,c.getLocal("idx2"))],[...c.call(e+"_copy",c.getLocal("idx1"),s),...c.call(i,c.getLocal("idx2"),c.getLocal("mulFactor"),c.getLocal("idx1")),...c.call(i,s,c.getLocal("mulFactor"),c.getLocal("idx2"))]),c.if(c.call(o+"_isOne",c.getLocal("mulFactor")),[],[...c.call(i,c.getLocal("idx1"),c.getLocal("mulFactor"),c.getLocal("idx1")),...c.call(i,c.getLocal("idx2"),c.getLocal("mulFactor"),c.getLocal("idx2"))])),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0))),c.if(c.call(o+"_isOne",c.getLocal("mulFactor")),[],[...c.call(i,c.getLocal("px"),c.getLocal("mulFactor"),c.getLocal("px")),...c.setLocal("idx2",c.i32_add(c.getLocal("px"),c.i32_mul(c.getLocal("ndiv2"),c.i32_const(l)))),...c.call(i,c.getLocal("idx2"),c.getLocal("mulFactor"),c.getLocal("idx2"))]))}(),function(){const c=t.addFunction(a+"_rawfft");c.addParam("px","i32"),c.addParam("bits","i32"),c.addParam("reverse","i32"),c.addParam("mulFactor","i32"),c.addLocal("s","i32"),c.addLocal("k","i32"),c.addLocal("j","i32"),c.addLocal("m","i32"),c.addLocal("mdiv2","i32"),c.addLocal("n","i32"),c.addLocal("pwm","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l)),u=s.i32_const(t.alloc(l));c.addCode(s.call(a+"__reversePermutation",s.getLocal("px"),s.getLocal("bits")),s.setLocal("n",s.i32_shl(s.i32_const(1),s.getLocal("bits"))),s.setLocal("s",s.i32_const(1)),s.block(s.loop(s.br_if(1,s.i32_gt_u(s.getLocal("s"),s.getLocal("bits"))),s.setLocal("m",s.i32_shl(s.i32_const(1),s.getLocal("s"))),s.setLocal("pwm",s.i32_add(s.i32_const(p),s.i32_mul(s.getLocal("s"),s.i32_const(n)))),s.setLocal("k",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_ge_u(s.getLocal("k"),s.getLocal("n"))),s.call(o+"_one",r),s.setLocal("mdiv2",s.i32_shr_u(s.getLocal("m"),s.i32_const(1))),s.setLocal("j",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_ge_u(s.getLocal("j"),s.getLocal("mdiv2"))),s.setLocal("idx1",s.i32_add(s.getLocal("px"),s.i32_mul(s.i32_add(s.getLocal("k"),s.getLocal("j")),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("idx1"),s.i32_mul(s.getLocal("mdiv2"),s.i32_const(l)))),s.call(i,s.getLocal("idx2"),r,d),s.call(e+"_copy",s.getLocal("idx1"),u),s.call(e+"_add",u,d,s.getLocal("idx1")),s.call(e+"_sub",u,d,s.getLocal("idx2")),s.call(o+"_mul",r,s.getLocal("pwm"),r),s.setLocal("j",s.i32_add(s.getLocal("j"),s.i32_const(1))),s.br(0))),s.setLocal("k",s.i32_add(s.getLocal("k"),s.getLocal("m"))),s.br(0))),s.setLocal("s",s.i32_add(s.getLocal("s"),s.i32_const(1))),s.br(0))),s.call(a+"__fftFinal",s.getLocal("px"),s.getLocal("bits"),s.getLocal("reverse"),s.getLocal("mulFactor")))}(),function(){const e=t.addFunction(a+"__log2");e.addParam("n","i32"),e.setReturnType("i32"),e.addLocal("bits","i32"),e.addLocal("aux","i32");const o=e.getCodeBuilder();e.addCode(o.setLocal("aux",o.i32_shr_u(o.getLocal("n"),o.i32_const(1)))),e.addCode(o.setLocal("bits",o.i32_const(0))),e.addCode(o.block(o.loop(o.br_if(1,o.i32_eqz(o.getLocal("aux"))),o.setLocal("aux",o.i32_shr_u(o.getLocal("aux"),o.i32_const(1))),o.setLocal("bits",o.i32_add(o.getLocal("bits"),o.i32_const(1))),o.br(0)))),e.addCode(o.if(o.i32_ne(o.getLocal("n"),o.i32_shl(o.i32_const(1),o.getLocal("bits"))),o.unreachable())),e.addCode(o.if(o.i32_gt_u(o.getLocal("bits"),o.i32_const(r)),o.unreachable())),e.addCode(o.getLocal("bits"))}(),B(),function(){const e=t.addFunction(a+"_ifft");e.addParam("px","i32"),e.addParam("n","i32"),e.addLocal("bits","i32"),e.addLocal("pInv2","i32");const o=e.getCodeBuilder();e.addCode(o.setLocal("bits",o.call(a+"__log2",o.getLocal("n"))),o.setLocal("pInv2",o.i32_add(o.i32_const(L),o.i32_mul(o.getLocal("bits"),o.i32_const(n)))),o.call(a+"_rawfft",o.getLocal("px"),o.getLocal("bits"),o.i32_const(1),o.getLocal("pInv2")))}(),function(){const c=t.addFunction(a+"_fftJoin");c.addParam("pBuff1","i32"),c.addParam("pBuff2","i32"),c.addParam("n","i32"),c.addParam("first","i32"),c.addParam("inc","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32"),c.addLocal("i","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l)),u=s.i32_const(t.alloc(l));c.addCode(s.call(o+"_copy",s.getLocal("first"),r),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.setLocal("idx1",s.i32_add(s.getLocal("pBuff1"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("pBuff2"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.call(i,s.getLocal("idx2"),r,d),s.call(e+"_copy",s.getLocal("idx1"),u),s.call(e+"_add",u,d,s.getLocal("idx1")),s.call(e+"_sub",u,d,s.getLocal("idx2")),s.call(o+"_mul",r,s.getLocal("inc"),r),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}(),function(){const c=t.addFunction(a+"_fftJoinExt");c.addParam("pBuff1","i32"),c.addParam("pBuff2","i32"),c.addParam("n","i32"),c.addParam("first","i32"),c.addParam("inc","i32"),c.addParam("totalBits","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32"),c.addLocal("i","i32"),c.addLocal("pShiftToM","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l));c.addCode(s.setLocal("pShiftToM",s.i32_add(s.i32_const(A),s.i32_mul(s.getLocal("totalBits"),s.i32_const(n)))),s.call(o+"_copy",s.getLocal("first"),r),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.setLocal("idx1",s.i32_add(s.getLocal("pBuff1"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("pBuff2"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.call(e+"_add",s.getLocal("idx1"),s.getLocal("idx2"),d),s.call(i,s.getLocal("idx2"),s.getLocal("pShiftToM"),s.getLocal("idx2")),s.call(e+"_add",s.getLocal("idx1"),s.getLocal("idx2"),s.getLocal("idx2")),s.call(i,s.getLocal("idx2"),r,s.getLocal("idx2")),s.call(e+"_copy",d,s.getLocal("idx1")),s.call(o+"_mul",r,s.getLocal("inc"),r),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}(),function(){const c=t.addFunction(a+"_fftJoinExtInv");c.addParam("pBuff1","i32"),c.addParam("pBuff2","i32"),c.addParam("n","i32"),c.addParam("first","i32"),c.addParam("inc","i32"),c.addParam("totalBits","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32"),c.addLocal("i","i32"),c.addLocal("pShiftToM","i32"),c.addLocal("pSConst","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l));c.addCode(s.setLocal("pShiftToM",s.i32_add(s.i32_const(A),s.i32_mul(s.getLocal("totalBits"),s.i32_const(n)))),s.setLocal("pSConst",s.i32_add(s.i32_const(C),s.i32_mul(s.getLocal("totalBits"),s.i32_const(n)))),s.call(o+"_copy",s.getLocal("first"),r),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.setLocal("idx1",s.i32_add(s.getLocal("pBuff1"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("pBuff2"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.call(i,s.getLocal("idx2"),r,d),s.call(e+"_sub",s.getLocal("idx1"),d,s.getLocal("idx2")),s.call(i,s.getLocal("idx2"),s.getLocal("pSConst"),s.getLocal("idx2")),s.call(i,s.getLocal("idx1"),s.getLocal("pShiftToM"),s.getLocal("idx1")),s.call(e+"_sub",d,s.getLocal("idx1"),s.getLocal("idx1")),s.call(i,s.getLocal("idx1"),s.getLocal("pSConst"),s.getLocal("idx1")),s.call(o+"_mul",r,s.getLocal("inc"),r),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}(),function(){const c=t.addFunction(a+"_fftMix");c.addParam("pBuff","i32"),c.addParam("n","i32"),c.addParam("exp","i32"),c.addLocal("nGroups","i32"),c.addLocal("nPerGroup","i32"),c.addLocal("nPerGroupDiv2","i32"),c.addLocal("pairOffset","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32"),c.addLocal("i","i32"),c.addLocal("j","i32"),c.addLocal("pwm","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l)),u=s.i32_const(t.alloc(l));c.addCode(s.setLocal("nPerGroup",s.i32_shl(s.i32_const(1),s.getLocal("exp"))),s.setLocal("nPerGroupDiv2",s.i32_shr_u(s.getLocal("nPerGroup"),s.i32_const(1))),s.setLocal("nGroups",s.i32_shr_u(s.getLocal("n"),s.getLocal("exp"))),s.setLocal("pairOffset",s.i32_mul(s.getLocal("nPerGroupDiv2"),s.i32_const(l))),s.setLocal("pwm",s.i32_add(s.i32_const(p),s.i32_mul(s.getLocal("exp"),s.i32_const(n)))),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("nGroups"))),s.call(o+"_one",r),s.setLocal("j",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("j"),s.getLocal("nPerGroupDiv2"))),s.setLocal("idx1",s.i32_add(s.getLocal("pBuff"),s.i32_mul(s.i32_add(s.i32_mul(s.getLocal("i"),s.getLocal("nPerGroup")),s.getLocal("j")),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("idx1"),s.getLocal("pairOffset"))),s.call(i,s.getLocal("idx2"),r,d),s.call(e+"_copy",s.getLocal("idx1"),u),s.call(e+"_add",u,d,s.getLocal("idx1")),s.call(e+"_sub",u,d,s.getLocal("idx2")),s.call(o+"_mul",r,s.getLocal("pwm"),r),s.setLocal("j",s.i32_add(s.getLocal("j"),s.i32_const(1))),s.br(0))),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}(),function(){const o=t.addFunction(a+"_fftFinal");o.addParam("pBuff","i32"),o.addParam("n","i32"),o.addParam("factor","i32"),o.addLocal("idx1","i32"),o.addLocal("idx2","i32"),o.addLocal("i","i32"),o.addLocal("ndiv2","i32");const n=o.getCodeBuilder(),c=n.i32_const(t.alloc(l));o.addCode(n.setLocal("ndiv2",n.i32_shr_u(n.getLocal("n"),n.i32_const(1))),n.if(n.i32_and(n.getLocal("n"),n.i32_const(1)),n.call(i,n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.getLocal("ndiv2"),n.i32_const(l))),n.getLocal("factor"),n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.getLocal("ndiv2"),n.i32_const(l))))),n.setLocal("i",n.i32_const(0)),n.block(n.loop(n.br_if(1,n.i32_ge_u(n.getLocal("i"),n.getLocal("ndiv2"))),n.setLocal("idx1",n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.getLocal("i"),n.i32_const(l)))),n.setLocal("idx2",n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.i32_sub(n.i32_sub(n.getLocal("n"),n.i32_const(1)),n.getLocal("i")),n.i32_const(l)))),n.call(i,n.getLocal("idx2"),n.getLocal("factor"),c),n.call(i,n.getLocal("idx1"),n.getLocal("factor"),n.getLocal("idx2")),n.call(e+"_copy",c,n.getLocal("idx1")),n.setLocal("i",n.i32_add(n.getLocal("i"),n.i32_const(1))),n.br(0))))}(),function(){const c=t.addFunction(a+"_prepareLagrangeEvaluation");c.addParam("pBuff1","i32"),c.addParam("pBuff2","i32"),c.addParam("n","i32"),c.addParam("first","i32"),c.addParam("inc","i32"),c.addParam("totalBits","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32"),c.addLocal("i","i32"),c.addLocal("pShiftToM","i32"),c.addLocal("pSConst","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l));c.addCode(s.setLocal("pShiftToM",s.i32_add(s.i32_const(A),s.i32_mul(s.getLocal("totalBits"),s.i32_const(n)))),s.setLocal("pSConst",s.i32_add(s.i32_const(C),s.i32_mul(s.getLocal("totalBits"),s.i32_const(n)))),s.call(o+"_copy",s.getLocal("first"),r),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.setLocal("idx1",s.i32_add(s.getLocal("pBuff1"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("pBuff2"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.call(i,s.getLocal("idx1"),s.getLocal("pShiftToM"),d),s.call(e+"_sub",s.getLocal("idx2"),d,d),s.call(e+"_sub",s.getLocal("idx1"),s.getLocal("idx2"),s.getLocal("idx2")),s.call(i,d,s.getLocal("pSConst"),s.getLocal("idx1")),s.call(i,s.getLocal("idx2"),r,s.getLocal("idx2")),s.call(o+"_mul",r,s.getLocal("inc"),r),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}(),t.exportFunction(a+"_fft"),t.exportFunction(a+"_ifft"),t.exportFunction(a+"_rawfft"),t.exportFunction(a+"_fftJoin"),t.exportFunction(a+"_fftJoinExt"),t.exportFunction(a+"_fftJoinExtInv"),t.exportFunction(a+"_fftMix"),t.exportFunction(a+"_fftFinal"),t.exportFunction(a+"_prepareLagrangeEvaluation")},$t=function(t,a,e){const o=8*t.modules[e].n64;return function(){const i=t.addFunction(a+"_zero");i.addParam("px","i32"),i.addParam("n","i32"),i.addLocal("lastp","i32"),i.addLocal("p","i32");const n=i.getCodeBuilder();i.addCode(n.setLocal("p",n.getLocal("px")),n.setLocal("lastp",n.i32_add(n.getLocal("px"),n.i32_mul(n.getLocal("n"),n.i32_const(o)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("p"),n.getLocal("lastp"))),n.call(e+"_zero",n.getLocal("p")),n.setLocal("p",n.i32_add(n.getLocal("p"),n.i32_const(o))),n.br(0))))}(),function(){const i=t.addFunction(a+"_constructLC");i.addParam("ppolynomials","i32"),i.addParam("psignals","i32"),i.addParam("nSignals","i32"),i.addParam("pres","i32"),i.addLocal("i","i32"),i.addLocal("j","i32"),i.addLocal("pp","i32"),i.addLocal("ps","i32"),i.addLocal("pd","i32"),i.addLocal("ncoefs","i32");const n=i.getCodeBuilder(),l=n.i32_const(t.alloc(o));i.addCode(n.setLocal("i",n.i32_const(0)),n.setLocal("pp",n.getLocal("ppolynomials")),n.setLocal("ps",n.getLocal("psignals")),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("i"),n.getLocal("nSignals"))),n.setLocal("ncoefs",n.i32_load(n.getLocal("pp"))),n.setLocal("pp",n.i32_add(n.getLocal("pp"),n.i32_const(4))),n.setLocal("j",n.i32_const(0)),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("j"),n.getLocal("ncoefs"))),n.setLocal("pd",n.i32_add(n.getLocal("pres"),n.i32_mul(n.i32_load(n.getLocal("pp")),n.i32_const(o)))),n.setLocal("pp",n.i32_add(n.getLocal("pp"),n.i32_const(4))),n.call(e+"_mul",n.getLocal("ps"),n.getLocal("pp"),l),n.call(e+"_add",l,n.getLocal("pd"),n.getLocal("pd")),n.setLocal("pp",n.i32_add(n.getLocal("pp"),n.i32_const(o))),n.setLocal("j",n.i32_add(n.getLocal("j"),n.i32_const(1))),n.br(0))),n.setLocal("ps",n.i32_add(n.getLocal("ps"),n.i32_const(o))),n.setLocal("i",n.i32_add(n.getLocal("i"),n.i32_const(1))),n.br(0))))}(),t.exportFunction(a+"_zero"),t.exportFunction(a+"_constructLC"),a},jt=function(t,a,e){const o=8*t.modules[e].n64;return function(){const i=t.addFunction(a+"_buildABC");i.addParam("pCoefs","i32"),i.addParam("nCoefs","i32"),i.addParam("pWitness","i32"),i.addParam("pA","i32"),i.addParam("pB","i32"),i.addParam("pC","i32"),i.addParam("offsetOut","i32"),i.addParam("nOut","i32"),i.addParam("offsetWitness","i32"),i.addParam("nWitness","i32"),i.addLocal("it","i32"),i.addLocal("ita","i32"),i.addLocal("itb","i32"),i.addLocal("last","i32"),i.addLocal("m","i32"),i.addLocal("c","i32"),i.addLocal("s","i32"),i.addLocal("pOut","i32");const n=i.getCodeBuilder(),l=n.i32_const(t.alloc(o));i.addCode(n.setLocal("ita",n.getLocal("pA")),n.setLocal("itb",n.getLocal("pB")),n.setLocal("last",n.i32_add(n.getLocal("pA"),n.i32_mul(n.getLocal("nOut"),n.i32_const(o)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(e+"_zero",n.getLocal("ita")),n.call(e+"_zero",n.getLocal("itb")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(o))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(o))),n.br(0))),n.setLocal("it",n.getLocal("pCoefs")),n.setLocal("last",n.i32_add(n.getLocal("pCoefs"),n.i32_mul(n.getLocal("nCoefs"),n.i32_const(o+12)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("it"),n.getLocal("last"))),n.setLocal("s",n.i32_load(n.getLocal("it"),8)),n.if(n.i32_or(n.i32_lt_u(n.getLocal("s"),n.getLocal("offsetWitness")),n.i32_ge_u(n.getLocal("s"),n.i32_add(n.getLocal("offsetWitness"),n.getLocal("nWitness")))),[...n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(o+12))),...n.br(1)]),n.setLocal("m",n.i32_load(n.getLocal("it"))),n.if(n.i32_eq(n.getLocal("m"),n.i32_const(0)),n.setLocal("pOut",n.getLocal("pA")),n.if(n.i32_eq(n.getLocal("m"),n.i32_const(1)),n.setLocal("pOut",n.getLocal("pB")),[...n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(o+12))),...n.br(1)])),n.setLocal("c",n.i32_load(n.getLocal("it"),4)),n.if(n.i32_or(n.i32_lt_u(n.getLocal("c"),n.getLocal("offsetOut")),n.i32_ge_u(n.getLocal("c"),n.i32_add(n.getLocal("offsetOut"),n.getLocal("nOut")))),[...n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(o+12))),...n.br(1)]),n.setLocal("pOut",n.i32_add(n.getLocal("pOut"),n.i32_mul(n.i32_sub(n.getLocal("c"),n.getLocal("offsetOut")),n.i32_const(o)))),n.call(e+"_mul",n.i32_add(n.getLocal("pWitness"),n.i32_mul(n.i32_sub(n.getLocal("s"),n.getLocal("offsetWitness")),n.i32_const(o))),n.i32_add(n.getLocal("it"),n.i32_const(12)),l),n.call(e+"_add",n.getLocal("pOut"),l,n.getLocal("pOut")),n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(o+12))),n.br(0))),n.setLocal("ita",n.getLocal("pA")),n.setLocal("itb",n.getLocal("pB")),n.setLocal("it",n.getLocal("pC")),n.setLocal("last",n.i32_add(n.getLocal("pA"),n.i32_mul(n.getLocal("nOut"),n.i32_const(o)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(e+"_mul",n.getLocal("ita"),n.getLocal("itb"),n.getLocal("it")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(o))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(o))),n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(o))),n.br(0))))}(),function(){const i=t.addFunction(a+"_joinABC");i.addParam("pA","i32"),i.addParam("pB","i32"),i.addParam("pC","i32"),i.addParam("n","i32"),i.addParam("pP","i32"),i.addLocal("ita","i32"),i.addLocal("itb","i32"),i.addLocal("itc","i32"),i.addLocal("itp","i32"),i.addLocal("last","i32");const n=i.getCodeBuilder(),l=n.i32_const(t.alloc(o));i.addCode(n.setLocal("ita",n.getLocal("pA")),n.setLocal("itb",n.getLocal("pB")),n.setLocal("itc",n.getLocal("pC")),n.setLocal("itp",n.getLocal("pP")),n.setLocal("last",n.i32_add(n.getLocal("pA"),n.i32_mul(n.getLocal("n"),n.i32_const(o)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(e+"_mul",n.getLocal("ita"),n.getLocal("itb"),l),n.call(e+"_sub",l,n.getLocal("itc"),n.getLocal("itp")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(o))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(o))),n.setLocal("itc",n.i32_add(n.getLocal("itc"),n.i32_const(o))),n.setLocal("itp",n.i32_add(n.getLocal("itp"),n.i32_const(o))),n.br(0))))}(),function(){const i=t.addFunction(a+"_batchAdd");i.addParam("pa","i32"),i.addParam("pb","i32"),i.addParam("n","i32"),i.addParam("pr","i32"),i.addLocal("ita","i32"),i.addLocal("itb","i32"),i.addLocal("itr","i32"),i.addLocal("last","i32");const n=i.getCodeBuilder();i.addCode(n.setLocal("ita",n.getLocal("pa")),n.setLocal("itb",n.getLocal("pb")),n.setLocal("itr",n.getLocal("pr")),n.setLocal("last",n.i32_add(n.getLocal("pa"),n.i32_mul(n.getLocal("n"),n.i32_const(o)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(e+"_add",n.getLocal("ita"),n.getLocal("itb"),n.getLocal("itr")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(o))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(o))),n.setLocal("itr",n.i32_add(n.getLocal("itr"),n.i32_const(o))),n.br(0))))}(),t.exportFunction(a+"_buildABC"),t.exportFunction(a+"_joinABC"),t.exportFunction(a+"_batchAdd"),a},Vt=function(t,a,e,o,i,n,l,c){const s=t.addFunction(a);s.addParam("pIn","i32"),s.addParam("n","i32"),s.addParam("pFirst","i32"),s.addParam("pInc","i32"),s.addParam("pOut","i32"),s.addLocal("pOldFree","i32"),s.addLocal("i","i32"),s.addLocal("pFrom","i32"),s.addLocal("pTo","i32");const r=s.getCodeBuilder(),d=r.i32_const(t.alloc(l));s.addCode(r.setLocal("pFrom",r.getLocal("pIn")),r.setLocal("pTo",r.getLocal("pOut"))),s.addCode(r.call(o+"_copy",r.getLocal("pFirst"),d)),s.addCode(r.setLocal("i",r.i32_const(0)),r.block(r.loop(r.br_if(1,r.i32_eq(r.getLocal("i"),r.getLocal("n"))),r.call(c,r.getLocal("pFrom"),d,r.getLocal("pTo")),r.setLocal("pFrom",r.i32_add(r.getLocal("pFrom"),r.i32_const(i))),r.setLocal("pTo",r.i32_add(r.getLocal("pTo"),r.i32_const(n))),r.call(o+"_mul",d,r.getLocal("pInc"),d),r.setLocal("i",r.i32_add(r.getLocal("i"),r.i32_const(1))),r.br(0)))),t.exportFunction(a)};const Kt=K,Ht=xt,Zt=Bt,Wt=Pt,Yt=Gt,Jt=Ut,Xt=Dt,ta=$t,aa=jt,ea=Vt,{bitLength:oa,modInv:ia,isOdd:na,isNegative:la}=J;const ca=K,sa=xt,ra=Bt,da=Pt,ua=Gt,_a=Ut,ga=Dt,fa=$t,pa=jt,ha=Vt,{bitLength:ma,isOdd:La,isNegative:ba}=J;var wa=function(t,a){const e=a||"bn128";if(t.modules[e])return e;const o=21888242871839275222246405745257275088696311157297823662689037894645226208583n,i=21888242871839275222246405745257275088548364400416034343698204186575808495617n,n=Math.floor((oa(o-1n)-1)/64)+1,l=8*n,c=l,s=l,r=2*s,d=12*s,u=t.alloc(Kt.bigInt2BytesLE(i,c)),_=Ht(t,o,"f1m");Zt(t,i,"fr","frm");const g=t.alloc(Kt.bigInt2BytesLE(b(3n),s)),f=Jt(t,"g1m","f1m",g);Xt(t,"frm","frm","frm","frm_mul"),ta(t,"pol","frm"),aa(t,"qap","frm");const p=Wt(t,"f1m_neg","f2m","f1m"),h=t.alloc([...Kt.bigInt2BytesLE(b(19485874751759354771024239261021720505790618469301721065564631296452457478373n),s),...Kt.bigInt2BytesLE(b(266929791119991161246907387137283842545076965332900288569378510910307636690n),s)]),m=Jt(t,"g2m","f2m",h);function L(a,e){const o=t.addFunction(a);o.addParam("pG","i32"),o.addParam("pFr","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(l));o.addCode(i.call("frm_fromMontgomery",i.getLocal("pFr"),n),i.call(e,i.getLocal("pG"),n,i.i32_const(l),i.getLocal("pr"))),t.exportFunction(a)}function b(t){return BigInt(t)*(1n<<BigInt(8*s))%o}L("g1m_timesFr","g1m_timesScalar"),Xt(t,"g1m","g1m","frm","g1m_timesFr"),L("g2m_timesFr","g2m_timesScalar"),Xt(t,"g2m","g2m","frm","g2m_timesFr"),L("g1m_timesFrAffine","g1m_timesScalarAffine"),L("g2m_timesFrAffine","g2m_timesScalarAffine"),ea(t,"frm_batchApplyKey","fmr","frm",l,l,l,"frm_mul"),ea(t,"g1m_batchApplyKey","g1m","frm",3*l,3*l,l,"g1m_timesFr"),ea(t,"g1m_batchApplyKeyMixed","g1m","frm",2*l,3*l,l,"g1m_timesFrAffine"),ea(t,"g2m_batchApplyKey","g2m","frm",2*l*3,3*l*2,l,"g2m_timesFr"),ea(t,"g2m_batchApplyKeyMixed","g2m","frm",2*l*2,3*l*2,l,"g2m_timesFrAffine");const w=[1n,2n,1n],y=t.alloc([...Kt.bigInt2BytesLE(b(w[0]),s),...Kt.bigInt2BytesLE(b(w[1]),s),...Kt.bigInt2BytesLE(b(w[2]),s)]),A=[0n,1n,0n],C=t.alloc([...Kt.bigInt2BytesLE(b(A[0]),s),...Kt.bigInt2BytesLE(b(A[1]),s),...Kt.bigInt2BytesLE(b(A[2]),s)]),x=[[10857046999023057135944570762232829481370756359578518086990519993285655852781n,11559732032986387107991004021392285783925812861821192530917403151452391805634n],[8495653923123431417604973247489272438418190587263600148770280649306958101930n,4082367875863433681332203403145435568316851327593401208105741076214120093531n],[1n,0n]],F=t.alloc([...Kt.bigInt2BytesLE(b(x[0][0]),s),...Kt.bigInt2BytesLE(b(x[0][1]),s),...Kt.bigInt2BytesLE(b(x[1][0]),s),...Kt.bigInt2BytesLE(b(x[1][1]),s),...Kt.bigInt2BytesLE(b(x[2][0]),s),...Kt.bigInt2BytesLE(b(x[2][1]),s)]),I=[[0n,0n],[1n,0n],[0n,0n]],B=t.alloc([...Kt.bigInt2BytesLE(b(I[0][0]),s),...Kt.bigInt2BytesLE(b(I[0][1]),s),...Kt.bigInt2BytesLE(b(I[1][0]),s),...Kt.bigInt2BytesLE(b(I[1][1]),s),...Kt.bigInt2BytesLE(b(I[2][0]),s),...Kt.bigInt2BytesLE(b(I[2][1]),s)]),E=t.alloc([...Kt.bigInt2BytesLE(b(1),s),...Kt.bigInt2BytesLE(b(0),s),...Kt.bigInt2BytesLE(b(0),s),...Kt.bigInt2BytesLE(b(0),s),...Kt.bigInt2BytesLE(b(0),s),...Kt.bigInt2BytesLE(b(0),s),...Kt.bigInt2BytesLE(b(0),s),...Kt.bigInt2BytesLE(b(0),s),...Kt.bigInt2BytesLE(b(0),s),...Kt.bigInt2BytesLE(b(0),s),...Kt.bigInt2BytesLE(b(0),s),...Kt.bigInt2BytesLE(b(0),s)]),v=t.alloc([...Kt.bigInt2BytesLE(b(9),s),...Kt.bigInt2BytesLE(b(1),s)]),S=t.alloc([...Kt.bigInt2BytesLE(b(ia(2n,o)),s),...Kt.bigInt2BytesLE(0n,s)]),P=v,O=t.alloc([...Kt.bigInt2BytesLE(b(19485874751759354771024239261021720505790618469301721065564631296452457478373n),s),...Kt.bigInt2BytesLE(b(266929791119991161246907387137283842545076965332900288569378510910307636690n),s)]);!function(){const a=t.addFunction(e+"_mulNR6");a.addParam("x","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder();a.addCode(o.call(p+"_mul",o.i32_const(v),o.getLocal("x"),o.getLocal("pr")))}();const q=Yt(t,e+"_mulNR6","f6m","f2m");!function(){const a=t.addFunction(e+"_mulNR12");a.addParam("x","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder();a.addCode(o.call(p+"_mul",o.i32_const(v),o.i32_add(o.getLocal("x"),o.i32_const(4*l)),o.getLocal("pr")),o.call(p+"_copy",o.getLocal("x"),o.i32_add(o.getLocal("pr"),o.i32_const(2*l))),o.call(p+"_copy",o.i32_add(o.getLocal("x"),o.i32_const(2*l)),o.i32_add(o.getLocal("pr"),o.i32_const(4*l))))}();const G=Wt(t,e+"_mulNR12","ftm",q),z=function(t){let a=t;const e=[];for(;a>0n;)na(a)?e.push(1):e.push(0),a>>=1n;return e}(29793968203157093288n),T=t.alloc(z),M=3*r,U=z.length-1,Q=z.reduce(((t,a)=>t+(0!=a?1:0)),0),k=6*l,R=3*l*2+(Q+U+1)*M;t.modules[e]={n64:n,pG1gen:y,pG1zero:C,pG1b:g,pG2gen:F,pG2zero:B,pG2b:h,pq:t.modules.f1m.pq,pr:u,pOneT:E,prePSize:k,preQSize:R,r:i.toString(),q:o.toString()};const N=4965661367192848881n;function D(a){const i=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[8376118865763821496583973867626364092589906065868298776909617916018768340080n,16469823323077808223889137241176536799009286646108169935659301613961712198316n],[21888242871839275220042445260109153167277707414472061641714758635765020556617n,0n],[11697423496358154304825782922584725312912383441159505038794027105778954184319n,303847389135065887422783454877609941456349188919719272345083954437860409601n],[21888242871839275220042445260109153167277707414472061641714758635765020556616n,0n],[3321304630594332808241809054958361220322477375291206261884409189760185844239n,5722266937896532885780051958958348231143373700109372999374820235121374419868n],[21888242871839275222246405745257275088696311157297823662689037894645226208582n,0n],[13512124006075453725662431877630910996106405091429524885779419978626457868503n,5418419548761466998357268504080738289687024511189653727029736280683514010267n],[2203960485148121921418603742825762020974279258880205651966n,0n],[10190819375481120917420622822672549775783927716138318623895010788866272024264n,21584395482704209334823622290379665147239961968378104390343953940207365798982n],[2203960485148121921418603742825762020974279258880205651967n,0n],[18566938241244942414004596690298913868373833782006617400804628704885040364344n,16165975933942742336466353786298926857552937457188450663314217659523851788715n]]],n=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[21575463638280843010398324269430826099269044274347216827212613867836435027261n,10307601595873709700152284273816112264069230130616436755625194854815875713954n],[21888242871839275220042445260109153167277707414472061641714758635765020556616n,0n],[3772000881919853776433695186713858239009073593817195771773381919316419345261n,2236595495967245188281701248203181795121068902605861227855261137820944008926n],[2203960485148121921418603742825762020974279258880205651966n,0n],[18429021223477853657660792034369865839114504446431234726392080002137598044644n,9344045779998320333812420223237981029506012124075525679208581902008406485703n]],[[1n,0n],[2581911344467009335267311115468803099551665605076196740867805258568234346338n,19937756971775647987995932169929341994314640652964949448313374472400716661030n],[2203960485148121921418603742825762020974279258880205651966n,0n],[5324479202449903542726783395506214481928257762400643279780343368557297135718n,16208900380737693084919495127334387981393726419856888799917914180988844123039n],[21888242871839275220042445260109153167277707414472061641714758635765020556616n,0n],[13981852324922362344252311234282257507216387789820983642040889267519694726527n,7629828391165209371577384193250820201684255241773809077146787135900891633097n]]],l=t.addFunction(e+"__frobeniusMap"+a);l.addParam("x","i32"),l.addParam("r","i32");const c=l.getCodeBuilder();for(let e=0;e<6;e++){const o=0==e?c.getLocal("x"):c.i32_add(c.getLocal("x"),c.i32_const(e*r)),u=o,g=c.i32_add(c.getLocal("x"),c.i32_const(e*r+s)),f=0==e?c.getLocal("r"):c.i32_add(c.getLocal("r"),c.i32_const(e*r)),h=f,m=c.i32_add(c.getLocal("r"),c.i32_const(e*r+s)),L=d(i[Math.floor(e/3)][a%12],n[e%3][a%6]),w=t.alloc([...Kt.bigInt2BytesLE(b(L[0]),32),...Kt.bigInt2BytesLE(b(L[1]),32)]);a%2==1?l.addCode(c.call(_+"_copy",u,h),c.call(_+"_neg",g,m),c.call(p+"_mul",f,c.i32_const(w),f)):l.addCode(c.call(p+"_mul",o,c.i32_const(w),f))}function d(t,a){const e=BigInt(t[0]),i=BigInt(t[1]),n=BigInt(a[0]),l=BigInt(a[1]),c=[(e*n-i*l)%o,(e*l+i*n)%o];return la(c[0])&&(c[0]=c[0]+o),c}}function $(a,o){const i=function(t){let a=t;const e=[];for(;a>0n;){if(na(a)){const t=2-Number(a%4n);e.push(t),a-=BigInt(t)}else e.push(0);a>>=1n}return e}(a).map((t=>-1==t?255:t)),n=t.alloc(i),l=t.addFunction(e+"__cyclotomicExp_"+o);l.addParam("x","i32"),l.addParam("r","i32"),l.addLocal("bit","i32"),l.addLocal("i","i32");const c=l.getCodeBuilder(),s=c.getLocal("x"),r=c.getLocal("r"),u=c.i32_const(t.alloc(d));l.addCode(c.call(G+"_conjugate",s,u),c.call(G+"_one",r),c.if(c.teeLocal("bit",c.i32_load8_s(c.i32_const(i.length-1),n)),c.if(c.i32_eq(c.getLocal("bit"),c.i32_const(1)),c.call(G+"_mul",r,s,r),c.call(G+"_mul",r,u,r))),c.setLocal("i",c.i32_const(i.length-2)),c.block(c.loop(c.call(e+"__cyclotomicSquare",r,r),c.if(c.teeLocal("bit",c.i32_load8_s(c.getLocal("i"),n)),c.if(c.i32_eq(c.getLocal("bit"),c.i32_const(1)),c.call(G+"_mul",r,s,r),c.call(G+"_mul",r,u,r))),c.br_if(1,c.i32_eqz(c.getLocal("i"))),c.setLocal("i",c.i32_sub(c.getLocal("i"),c.i32_const(1))),c.br(0))))}function j(){!function(){const a=t.addFunction(e+"__cyclotomicSquare");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=o.i32_add(o.getLocal("x"),o.i32_const(r)),l=o.i32_add(o.getLocal("x"),o.i32_const(2*r)),c=o.i32_add(o.getLocal("x"),o.i32_const(3*r)),s=o.i32_add(o.getLocal("x"),o.i32_const(4*r)),d=o.i32_add(o.getLocal("x"),o.i32_const(5*r)),u=o.getLocal("r"),_=o.i32_add(o.getLocal("r"),o.i32_const(r)),g=o.i32_add(o.getLocal("r"),o.i32_const(2*r)),f=o.i32_add(o.getLocal("r"),o.i32_const(3*r)),h=o.i32_add(o.getLocal("r"),o.i32_const(4*r)),m=o.i32_add(o.getLocal("r"),o.i32_const(5*r)),L=o.i32_const(t.alloc(r)),b=o.i32_const(t.alloc(r)),w=o.i32_const(t.alloc(r)),y=o.i32_const(t.alloc(r)),A=o.i32_const(t.alloc(r)),C=o.i32_const(t.alloc(r)),x=o.i32_const(t.alloc(r)),F=o.i32_const(t.alloc(r));a.addCode(o.call(p+"_mul",i,s,x),o.call(p+"_mul",s,o.i32_const(v),L),o.call(p+"_add",i,L,L),o.call(p+"_add",i,s,F),o.call(p+"_mul",F,L,L),o.call(p+"_mul",o.i32_const(v),x,F),o.call(p+"_add",x,F,F),o.call(p+"_sub",L,F,L),o.call(p+"_add",x,x,b),o.call(p+"_mul",c,l,x),o.call(p+"_mul",l,o.i32_const(v),w),o.call(p+"_add",c,w,w),o.call(p+"_add",c,l,F),o.call(p+"_mul",F,w,w),o.call(p+"_mul",o.i32_const(v),x,F),o.call(p+"_add",x,F,F),o.call(p+"_sub",w,F,w),o.call(p+"_add",x,x,y),o.call(p+"_mul",n,d,x),o.call(p+"_mul",d,o.i32_const(v),A),o.call(p+"_add",n,A,A),o.call(p+"_add",n,d,F),o.call(p+"_mul",F,A,A),o.call(p+"_mul",o.i32_const(v),x,F),o.call(p+"_add",x,F,F),o.call(p+"_sub",A,F,A),o.call(p+"_add",x,x,C),o.call(p+"_sub",L,i,u),o.call(p+"_add",u,u,u),o.call(p+"_add",L,u,u),o.call(p+"_add",b,s,h),o.call(p+"_add",h,h,h),o.call(p+"_add",b,h,h),o.call(p+"_mul",C,o.i32_const(P),F),o.call(p+"_add",F,c,f),o.call(p+"_add",f,f,f),o.call(p+"_add",F,f,f),o.call(p+"_sub",A,l,g),o.call(p+"_add",g,g,g),o.call(p+"_add",A,g,g),o.call(p+"_sub",w,n,_),o.call(p+"_add",_,_,_),o.call(p+"_add",w,_,_),o.call(p+"_add",y,d,m),o.call(p+"_add",m,m,m),o.call(p+"_add",y,m,m))}(),$(N,"w0");const a=t.addFunction(e+"__finalExponentiationLastChunk");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=o.getLocal("r"),l=o.i32_const(t.alloc(d)),c=o.i32_const(t.alloc(d)),s=o.i32_const(t.alloc(d)),u=o.i32_const(t.alloc(d)),_=o.i32_const(t.alloc(d)),g=o.i32_const(t.alloc(d)),f=o.i32_const(t.alloc(d)),h=o.i32_const(t.alloc(d)),m=o.i32_const(t.alloc(d)),L=o.i32_const(t.alloc(d)),b=o.i32_const(t.alloc(d)),w=o.i32_const(t.alloc(d)),y=o.i32_const(t.alloc(d)),A=o.i32_const(t.alloc(d)),C=o.i32_const(t.alloc(d)),x=o.i32_const(t.alloc(d)),F=o.i32_const(t.alloc(d)),I=o.i32_const(t.alloc(d)),B=o.i32_const(t.alloc(d)),E=o.i32_const(t.alloc(d)),S=o.i32_const(t.alloc(d));a.addCode(o.call(e+"__cyclotomicExp_w0",i,l),o.call(G+"_conjugate",l,l),o.call(e+"__cyclotomicSquare",l,c),o.call(e+"__cyclotomicSquare",c,s),o.call(G+"_mul",s,c,u),o.call(e+"__cyclotomicExp_w0",u,_),o.call(G+"_conjugate",_,_),o.call(e+"__cyclotomicSquare",_,g),o.call(e+"__cyclotomicExp_w0",g,f),o.call(G+"_conjugate",f,f),o.call(G+"_conjugate",u,h),o.call(G+"_conjugate",f,m),o.call(G+"_mul",m,_,L),o.call(G+"_mul",L,h,b),o.call(G+"_mul",b,c,w),o.call(G+"_mul",b,_,y),o.call(G+"_mul",y,i,A),o.call(e+"__frobeniusMap1",w,C),o.call(G+"_mul",C,A,x),o.call(e+"__frobeniusMap2",b,F),o.call(G+"_mul",F,x,I),o.call(G+"_conjugate",i,B),o.call(G+"_mul",B,w,E),o.call(e+"__frobeniusMap3",E,S),o.call(G+"_mul",S,I,n))}const V=t.alloc(k),K=t.alloc(R);function H(a){const o=t.addFunction(e+"_pairingEq"+a);for(let t=0;t<a;t++)o.addParam("p_"+t,"i32"),o.addParam("q_"+t,"i32");o.addParam("c","i32"),o.setReturnType("i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(d)),l=i.i32_const(t.alloc(d));o.addCode(i.call(G+"_one",n));for(let t=0;t<a;t++)o.addCode(i.call(e+"_prepareG1",i.getLocal("p_"+t),i.i32_const(V))),o.addCode(i.call(e+"_prepareG2",i.getLocal("q_"+t),i.i32_const(K))),o.addCode(i.call(e+"_millerLoop",i.i32_const(V),i.i32_const(K),l)),o.addCode(i.call(G+"_mul",n,l,n));o.addCode(i.call(e+"_finalExponentiation",n,n)),o.addCode(i.call(G+"_eq",n,i.getLocal("c")))}!function(){const a=t.addFunction(e+"_prepAddStep");a.addParam("pQ","i32"),a.addParam("pR","i32"),a.addParam("pCoef","i32");const o=a.getCodeBuilder(),i=o.getLocal("pQ"),n=o.i32_add(o.getLocal("pQ"),o.i32_const(r)),l=o.getLocal("pR"),c=o.i32_add(o.getLocal("pR"),o.i32_const(r)),s=o.i32_add(o.getLocal("pR"),o.i32_const(2*r)),d=o.getLocal("pCoef"),u=o.i32_add(o.getLocal("pCoef"),o.i32_const(r)),_=o.i32_add(o.getLocal("pCoef"),o.i32_const(2*r)),g=u,f=o.i32_const(t.alloc(r)),h=o.i32_const(t.alloc(r)),m=o.i32_const(t.alloc(r)),L=o.i32_const(t.alloc(r)),b=o.i32_const(t.alloc(r)),w=o.i32_const(t.alloc(r)),y=o.i32_const(t.alloc(r));a.addCode(o.call(p+"_mul",i,s,g),o.call(p+"_sub",l,g,g),o.call(p+"_mul",n,s,f),o.call(p+"_sub",c,f,f),o.call(p+"_square",g,h),o.call(p+"_square",f,m),o.call(p+"_mul",g,h,L),o.call(p+"_mul",l,h,b),o.call(p+"_add",b,b,y),o.call(p+"_mul",s,m,w),o.call(p+"_add",L,w,w),o.call(p+"_sub",w,y,w),o.call(p+"_mul",g,w,l),o.call(p+"_mul",L,c,c),o.call(p+"_sub",b,w,y),o.call(p+"_mul",f,y,y),o.call(p+"_sub",y,c,c),o.call(p+"_mul",s,L,s),o.call(p+"_mul",g,n,y),o.call(p+"_mul",f,i,d),o.call(p+"_sub",d,y,d),o.call(p+"_mul",d,o.i32_const(P),d),o.call(p+"_neg",f,_))}(),function(){const a=t.addFunction(e+"_prepDblStep");a.addParam("pR","i32"),a.addParam("pCoef","i32");const o=a.getCodeBuilder(),i=o.getLocal("pR"),n=o.i32_add(o.getLocal("pR"),o.i32_const(r)),l=o.i32_add(o.getLocal("pR"),o.i32_const(2*r)),c=o.getLocal("pCoef"),s=o.i32_add(o.getLocal("pCoef"),o.i32_const(r)),d=o.i32_add(o.getLocal("pCoef"),o.i32_const(2*r)),u=o.i32_const(t.alloc(r)),_=o.i32_const(t.alloc(r)),g=o.i32_const(t.alloc(r)),f=o.i32_const(t.alloc(r)),h=o.i32_const(t.alloc(r)),m=o.i32_const(t.alloc(r)),L=o.i32_const(t.alloc(r)),b=o.i32_const(t.alloc(r)),w=o.i32_const(t.alloc(r)),y=o.i32_const(t.alloc(r)),A=o.i32_const(t.alloc(r)),C=o.i32_const(t.alloc(r));a.addCode(o.call(p+"_mul",n,o.i32_const(S),u),o.call(p+"_mul",i,u,u),o.call(p+"_square",n,_),o.call(p+"_square",l,g),o.call(p+"_add",g,g,f),o.call(p+"_add",f,g,f),o.call(p+"_mul",o.i32_const(O),f,h),o.call(p+"_add",h,h,m),o.call(p+"_add",h,m,m),o.call(p+"_add",_,m,L),o.call(p+"_mul",L,o.i32_const(S),L),o.call(p+"_add",_,g,C),o.call(p+"_add",n,l,b),o.call(p+"_square",b,b),o.call(p+"_sub",b,C,b),o.call(p+"_sub",h,_,w),o.call(p+"_square",i,y),o.call(p+"_square",h,A),o.call(p+"_sub",_,m,C),o.call(p+"_mul",u,C,i),o.call(p+"_add",A,A,C),o.call(p+"_add",A,C,C),o.call(p+"_square",L,n),o.call(p+"_sub",n,C,n),o.call(p+"_mul",_,b,l),o.call(p+"_mul",o.i32_const(P),w,c),o.call(p+"_neg",b,s),o.call(p+"_add",y,y,d),o.call(p+"_add",y,d,d))}(),function(){const a=t.addFunction(e+"_prepareG1");a.addParam("pP","i32"),a.addParam("ppreP","i32");const o=a.getCodeBuilder();a.addCode(o.call(f+"_normalize",o.getLocal("pP"),o.getLocal("ppreP")))}(),function(){!function(){const a=t.addFunction(e+"_mulByQ");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),i=o.getLocal("p1"),n=o.i32_add(o.getLocal("p1"),o.i32_const(r)),l=o.i32_add(o.getLocal("p1"),o.i32_const(2*r)),c=o.getLocal("pr"),d=o.i32_add(o.getLocal("pr"),o.i32_const(r)),u=o.i32_add(o.getLocal("pr"),o.i32_const(2*r)),_=o.i32_const(t.alloc([...Kt.bigInt2BytesLE(b("21575463638280843010398324269430826099269044274347216827212613867836435027261"),s),...Kt.bigInt2BytesLE(b("10307601595873709700152284273816112264069230130616436755625194854815875713954"),s)])),g=o.i32_const(t.alloc([...Kt.bigInt2BytesLE(b("2821565182194536844548159561693502659359617185244120367078079554186484126554"),s),...Kt.bigInt2BytesLE(b("3505843767911556378687030309984248845540243509899259641013678093033130930403"),s)]));a.addCode(o.call(p+"_conjugate",i,c),o.call(p+"_mul",_,c,c),o.call(p+"_conjugate",n,d),o.call(p+"_mul",g,d,d),o.call(p+"_conjugate",l,u))}();const a=t.addFunction(e+"_prepareG2");a.addParam("pQ","i32"),a.addParam("ppreQ","i32"),a.addLocal("pCoef","i32"),a.addLocal("i","i32");const o=a.getCodeBuilder(),i=o.getLocal("pQ"),n=t.alloc(3*r),l=o.i32_const(n),c=o.i32_const(n),d=o.i32_const(n+r),u=o.i32_const(n+2*r),_=o.i32_add(o.getLocal("ppreQ"),o.i32_const(0)),g=o.i32_add(o.getLocal("ppreQ"),o.i32_const(r)),f=t.alloc(3*r),h=o.i32_const(f),L=t.alloc(3*r),w=o.i32_const(L),y=o.i32_const(L+r);a.addCode(o.call(m+"_normalize",i,_),o.call(p+"_copy",_,c),o.call(p+"_copy",g,d),o.call(p+"_one",u)),a.addCode(o.setLocal("pCoef",o.i32_add(o.getLocal("ppreQ"),o.i32_const(3*r))),o.setLocal("i",o.i32_const(z.length-2)),o.block(o.loop(o.call(e+"_prepDblStep",l,o.getLocal("pCoef")),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))),o.if(o.i32_load8_s(o.getLocal("i"),T),[...o.call(e+"_prepAddStep",_,l,o.getLocal("pCoef")),...o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M)))]),o.br_if(1,o.i32_eqz(o.getLocal("i"))),o.setLocal("i",o.i32_sub(o.getLocal("i"),o.i32_const(1))),o.br(0)))),a.addCode(o.call(e+"_mulByQ",_,h),o.call(e+"_mulByQ",h,w)),a.addCode(o.call(p+"_neg",y,y),o.call(e+"_prepAddStep",h,l,o.getLocal("pCoef")),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))),o.call(e+"_prepAddStep",w,l,o.getLocal("pCoef")),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))))}(),function(){const a=t.addFunction(e+"__mulBy024");a.addParam("pEll0","i32"),a.addParam("pEllVW","i32"),a.addParam("pEllVV","i32"),a.addParam("pR","i32");const o=a.getCodeBuilder(),i=o.getLocal("pEll0"),n=o.getLocal("pEllVV"),c=o.getLocal("pEllVW"),s=o.getLocal("pR"),d=o.i32_add(o.getLocal("pR"),o.i32_const(2*l)),u=o.i32_add(o.getLocal("pR"),o.i32_const(4*l)),_=o.i32_add(o.getLocal("pR"),o.i32_const(6*l)),g=o.i32_add(o.getLocal("pR"),o.i32_const(8*l)),f=o.i32_add(o.getLocal("pR"),o.i32_const(10*l)),h=o.i32_const(t.alloc(r)),m=o.i32_const(t.alloc(r)),L=o.i32_const(t.alloc(r)),b=o.i32_const(t.alloc(r)),w=o.i32_const(t.alloc(r)),y=o.i32_const(t.alloc(r)),A=o.i32_const(t.alloc(r)),C=o.i32_const(t.alloc(r)),x=o.i32_const(t.alloc(r)),F=o.i32_const(t.alloc(r)),I=o.i32_const(t.alloc(r));a.addCode(o.call(p+"_mul",s,i,A),o.call(p+"_mul",u,n,C),o.call(p+"_mul",g,c,x),o.call(p+"_add",s,g,L),o.call(p+"_add",s,u,m),o.call(p+"_add",d,_,b),o.call(p+"_add",b,f,b),o.call(p+"_mul",d,n,F),o.call(p+"_add",F,x,w),o.call(p+"_mul",o.i32_const(v),w,y),o.call(p+"_add",y,A,s),o.call(p+"_mul",f,c,w),o.call(p+"_add",F,w,F),o.call(p+"_add",w,C,w),o.call(p+"_mul",o.i32_const(v),w,y),o.call(p+"_mul",d,i,w),o.call(p+"_add",F,w,F),o.call(p+"_add",y,w,d),o.call(p+"_add",i,n,h),o.call(p+"_mul",m,h,w),o.call(p+"_add",A,C,I),o.call(p+"_sub",w,I,w),o.call(p+"_mul",_,c,y),o.call(p+"_add",F,y,F),o.call(p+"_add",u,g,h),o.call(p+"_add",w,y,u),o.call(p+"_add",n,c,m),o.call(p+"_mul",m,h,w),o.call(p+"_add",C,x,I),o.call(p+"_sub",w,I,w),o.call(p+"_mul",o.i32_const(v),w,y),o.call(p+"_mul",_,i,w),o.call(p+"_add",F,w,F),o.call(p+"_add",y,w,_),o.call(p+"_mul",f,n,w),o.call(p+"_add",F,w,F),o.call(p+"_mul",o.i32_const(v),w,y),o.call(p+"_add",i,c,h),o.call(p+"_mul",L,h,w),o.call(p+"_add",A,x,I),o.call(p+"_sub",w,I,w),o.call(p+"_add",y,w,g),o.call(p+"_add",i,n,h),o.call(p+"_add",h,c,h),o.call(p+"_mul",b,h,w),o.call(p+"_sub",w,F,f))}(),function(){const a=t.addFunction(e+"__mulBy024Old");a.addParam("pEll0","i32"),a.addParam("pEllVW","i32"),a.addParam("pEllVV","i32"),a.addParam("pR","i32");const o=a.getCodeBuilder(),i=o.getLocal("pEll0"),n=o.getLocal("pEllVV"),l=o.getLocal("pEllVW"),c=o.getLocal("pR"),s=t.alloc(d),u=o.i32_const(s),_=o.i32_const(s),g=o.i32_const(s+r),f=o.i32_const(s+2*r),h=o.i32_const(s+3*r),m=o.i32_const(s+4*r),L=o.i32_const(s+5*r);a.addCode(o.call(p+"_copy",i,_),o.call(p+"_zero",g),o.call(p+"_copy",n,f),o.call(p+"_zero",h),o.call(p+"_copy",l,m),o.call(p+"_zero",L),o.call(G+"_mul",u,c,c))}(),function(){const a=t.addFunction(e+"_millerLoop");a.addParam("ppreP","i32"),a.addParam("ppreQ","i32"),a.addParam("r","i32"),a.addLocal("pCoef","i32"),a.addLocal("i","i32");const o=a.getCodeBuilder(),i=o.getLocal("ppreP"),n=o.i32_add(o.getLocal("ppreP"),o.i32_const(s)),l=o.getLocal("pCoef"),c=o.i32_add(o.getLocal("pCoef"),o.i32_const(r)),d=o.i32_add(o.getLocal("pCoef"),o.i32_const(2*r)),u=t.alloc(r),_=o.i32_const(u),g=t.alloc(r),f=o.i32_const(g),h=o.getLocal("r");a.addCode(o.call(G+"_one",h),o.setLocal("pCoef",o.i32_add(o.getLocal("ppreQ"),o.i32_const(3*r))),o.setLocal("i",o.i32_const(z.length-2)),o.block(o.loop(o.call(G+"_square",h,h),o.call(p+"_mul1",c,n,_),o.call(p+"_mul1",d,i,f),o.call(e+"__mulBy024",l,_,f,h),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))),o.if(o.i32_load8_s(o.getLocal("i"),T),[...o.call(p+"_mul1",c,n,_),...o.call(p+"_mul1",d,i,f),...o.call(e+"__mulBy024",l,_,f,h),...o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M)))]),o.br_if(1,o.i32_eqz(o.getLocal("i"))),o.setLocal("i",o.i32_sub(o.getLocal("i"),o.i32_const(1))),o.br(0)))),a.addCode(o.call(p+"_mul1",c,n,_),o.call(p+"_mul1",d,i,f),o.call(e+"__mulBy024",l,_,f,h),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))),o.call(p+"_mul1",c,n,_),o.call(p+"_mul1",d,i,f),o.call(e+"__mulBy024",l,_,f,h),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))))}();for(let a=0;a<10;a++)D(a),t.exportFunction(e+"__frobeniusMap"+a);!function(){const a=t.addFunction(e+"_finalExponentiationOld");a.addParam("x","i32"),a.addParam("r","i32");const o=t.alloc(Kt.bigInt2BytesLE(552484233613224096312617126783173147097382103762957654188882734314196910839907541213974502761540629817009608548654680343627701153829446747810907373256841551006201639677726139946029199968412598804882391702273019083653272047566316584365559776493027495458238373902875937659943504873220554161550525926302303331747463515644711876653177129578303191095900909191624817826566688241804408081892785725967931714097716709526092261278071952560171111444072049229123565057483750161460024353346284167282452756217662335528813519139808291170539072125381230815729071544861602750936964829313608137325426383735122175229541155376346436093930287402089517426973178917569713384748081827255472576937471496195752727188261435633271238710131736096299798168852925540549342330775279877006784354801422249722573783561685179618816480037695005515426162362431072245638324744480n,352)),i=a.getCodeBuilder();a.addCode(i.call(G+"_exp",i.getLocal("x"),i.i32_const(o),i.i32_const(352),i.getLocal("r")))}(),function(){!function(){const a=t.addFunction(e+"__finalExponentiationFirstChunk");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=i,c=o.i32_add(i,o.i32_const(6*l)),s=o.getLocal("r"),r=t.alloc(d),u=o.i32_const(r),_=u,g=o.i32_const(r+6*l),f=o.i32_const(t.alloc(d)),p=o.i32_const(t.alloc(d)),h=o.i32_const(t.alloc(d));a.addCode(o.call(q+"_copy",n,_),o.call(q+"_neg",c,g),o.call(G+"_inverse",i,f),o.call(G+"_mul",u,f,p),o.call(e+"__frobeniusMap2",p,h),o.call(G+"_mul",p,h,s))}(),j();const a=t.addFunction(e+"_finalExponentiation");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=o.getLocal("r"),c=o.i32_const(t.alloc(d));a.addCode(o.call(e+"__finalExponentiationFirstChunk",i,c),o.call(e+"__finalExponentiationLastChunk",c,n))}();for(let a=1;a<=5;a++)H(a),t.exportFunction(e+"_pairingEq"+a);!function(){const a=t.addFunction(e+"_pairing");a.addParam("p","i32"),a.addParam("q","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.i32_const(t.alloc(d));a.addCode(o.call(e+"_prepareG1",o.getLocal("p"),o.i32_const(V))),a.addCode(o.call(e+"_prepareG2",o.getLocal("q"),o.i32_const(K))),a.addCode(o.call(e+"_millerLoop",o.i32_const(V),o.i32_const(K),i)),a.addCode(o.call(e+"_finalExponentiation",i,o.getLocal("r")))}(),t.exportFunction(e+"_pairing"),t.exportFunction(e+"_prepareG1"),t.exportFunction(e+"_prepareG2"),t.exportFunction(e+"_millerLoop"),t.exportFunction(e+"_finalExponentiation"),t.exportFunction(e+"_finalExponentiationOld"),t.exportFunction(e+"__mulBy024"),t.exportFunction(e+"__mulBy024Old"),t.exportFunction(e+"__cyclotomicSquare"),t.exportFunction(e+"__cyclotomicExp_w0")},ya=function(t,a){const e=a||"bls12381";if(t.modules[e])return e;const o=0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn,i=0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001n,n=Math.floor((ma(o-1n)-1)/64)+1,l=8*n,c=l,s=2*c,r=12*c,d=Math.floor((ma(i-1n)-1)/64)+1,u=8*d,_=u,g=t.alloc(ca.bigInt2BytesLE(i,_)),f=sa(t,o,"f1m","intq");ra(t,i,"fr","frm","intr");const p=t.alloc(ca.bigInt2BytesLE(y(4n),c)),h=_a(t,"g1m","f1m",p);ga(t,"frm","frm","frm","frm_mul"),fa(t,"pol","frm"),pa(t,"qap","frm");const m=da(t,"f1m_neg","f2m","f1m"),L=t.alloc([...ca.bigInt2BytesLE(y(4n),c),...ca.bigInt2BytesLE(y(4n),c)]),b=_a(t,"g2m","f2m",L);function w(a,e){const o=t.addFunction(a);o.addParam("pG","i32"),o.addParam("pFr","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(u));o.addCode(i.call("frm_fromMontgomery",i.getLocal("pFr"),n),i.call(e,i.getLocal("pG"),n,i.i32_const(u),i.getLocal("pr"))),t.exportFunction(a)}function y(t){return BigInt(t)*(1n<<BigInt(8*c))%o}w("g1m_timesFr","g1m_timesScalar"),ga(t,"g1m","g1m","frm","g1m_timesFr"),w("g2m_timesFr","g2m_timesScalar"),ga(t,"g2m","g2m","frm","g2m_timesFr"),w("g1m_timesFrAffine","g1m_timesScalarAffine"),w("g2m_timesFrAffine","g2m_timesScalarAffine"),ha(t,"frm_batchApplyKey","fmr","frm",u,u,u,"frm_mul"),ha(t,"g1m_batchApplyKey","g1m","frm",3*l,3*l,u,"g1m_timesFr"),ha(t,"g1m_batchApplyKeyMixed","g1m","frm",2*l,3*l,u,"g1m_timesFrAffine"),ha(t,"g2m_batchApplyKey","g2m","frm",2*l*3,3*l*2,u,"g2m_timesFr"),ha(t,"g2m_batchApplyKeyMixed","g2m","frm",2*l*2,3*l*2,u,"g2m_timesFrAffine");const A=[3685416753713387016781088315183077757961620795782546409894578378688607592378376318836054947676345821548104185464507n,1339506544944476473020471379941921221584933875938349620426543736416511423956333506472724655353366534992391756441569n,1n],C=t.alloc([...ca.bigInt2BytesLE(y(A[0]),c),...ca.bigInt2BytesLE(y(A[1]),c),...ca.bigInt2BytesLE(y(A[2]),c)]),x=[0n,1n,0n],F=t.alloc([...ca.bigInt2BytesLE(y(x[0]),c),...ca.bigInt2BytesLE(y(x[1]),c),...ca.bigInt2BytesLE(y(x[2]),c)]),I=[[352701069587466618187139116011060144890029952792775240219908644239793785735715026873347600343865175952761926303160n,3059144344244213709971259814753781636986470325476647558659373206291635324768958432433509563104347017837885763365758n],[1985150602287291935568054521177171638300868978215655730859378665066344726373823718423869104263333984641494340347905n,927553665492332455747201965776037880757740193453592970025027978793976877002675564980949289727957565575433344219582n],[1n,0n]],B=t.alloc([...ca.bigInt2BytesLE(y(I[0][0]),c),...ca.bigInt2BytesLE(y(I[0][1]),c),...ca.bigInt2BytesLE(y(I[1][0]),c),...ca.bigInt2BytesLE(y(I[1][1]),c),...ca.bigInt2BytesLE(y(I[2][0]),c),...ca.bigInt2BytesLE(y(I[2][1]),c)]),E=[[0n,0n],[1n,0n],[0n,0n]],v=t.alloc([...ca.bigInt2BytesLE(y(E[0][0]),c),...ca.bigInt2BytesLE(y(E[0][1]),c),...ca.bigInt2BytesLE(y(E[1][0]),c),...ca.bigInt2BytesLE(y(E[1][1]),c),...ca.bigInt2BytesLE(y(E[2][0]),c),...ca.bigInt2BytesLE(y(E[2][1]),c)]),S=t.alloc([...ca.bigInt2BytesLE(y(1n),c),...ca.bigInt2BytesLE(y(0n),c),...ca.bigInt2BytesLE(y(0n),c),...ca.bigInt2BytesLE(y(0n),c),...ca.bigInt2BytesLE(y(0n),c),...ca.bigInt2BytesLE(y(0n),c),...ca.bigInt2BytesLE(y(0n),c),...ca.bigInt2BytesLE(y(0n),c),...ca.bigInt2BytesLE(y(0n),c),...ca.bigInt2BytesLE(y(0n),c),...ca.bigInt2BytesLE(y(0n),c),...ca.bigInt2BytesLE(y(0n),c)]),P=t.alloc([...ca.bigInt2BytesLE(y(1n),c),...ca.bigInt2BytesLE(y(1n),c)]);!function(){const a=t.addFunction(m+"_mulNR");a.addParam("x","i32"),a.addParam("pr","i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(c)),i=e.getLocal("x"),n=e.i32_add(e.getLocal("x"),e.i32_const(c)),l=e.getLocal("pr"),s=e.i32_add(e.getLocal("pr"),e.i32_const(c));a.addCode(e.call(f+"_copy",i,o),e.call(f+"_sub",i,n,l),e.call(f+"_add",o,n,s))}();const O=ua(t,m+"_mulNR","f6m","f2m");!function(){const a=t.addFunction(O+"_mulNR");a.addParam("x","i32"),a.addParam("pr","i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(2*c));a.addCode(e.call(m+"_copy",e.getLocal("x"),o),e.call(m+"_mulNR",e.i32_add(e.getLocal("x"),e.i32_const(4*l)),e.getLocal("pr")),e.call(m+"_copy",e.i32_add(e.getLocal("x"),e.i32_const(2*l)),e.i32_add(e.getLocal("pr"),e.i32_const(4*l))),e.call(m+"_copy",o,e.i32_add(e.getLocal("pr"),e.i32_const(2*l))))}();const q=da(t,O+"_mulNR","ftm",O),G=function(t){let a=t;const e=[];for(;a>0n;)La(a)?e.push(1):e.push(0),a>>=1n;return e}(0xd201000000010000n),z=t.alloc(G),T=3*s,M=G.length-1,U=G.reduce(((t,a)=>t+(0!=a?1:0)),0),Q=6*l,k=3*l*2+(U+M+1)*T,R=!0,N=15132376222941642752n;function D(a){const e=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760n,151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351n,0n],[2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n,1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,0n],[3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557n,877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230n],[4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786n,0n],[151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027n,3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,0n],[1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257n,2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437n,0n],[877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230n,3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557n]]],i=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[0n,4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,0n],[0n,1n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,0n],[0n,793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n]],[[1n,0n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437n,0n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,0n],[4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786n,0n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,0n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351n,0n]]],n=t.addFunction(q+"_frobeniusMap"+a);n.addParam("x","i32"),n.addParam("r","i32");const r=n.getCodeBuilder();for(let o=0;o<6;o++){const u=0==o?r.getLocal("x"):r.i32_add(r.getLocal("x"),r.i32_const(o*s)),_=u,g=r.i32_add(r.getLocal("x"),r.i32_const(o*s+c)),p=0==o?r.getLocal("r"):r.i32_add(r.getLocal("r"),r.i32_const(o*s)),h=p,L=r.i32_add(r.getLocal("r"),r.i32_const(o*s+c)),b=d(e[Math.floor(o/3)][a%12],i[o%3][a%6]),w=t.alloc([...ca.bigInt2BytesLE(y(b[0]),l),...ca.bigInt2BytesLE(y(b[1]),l)]);a%2==1?n.addCode(r.call(f+"_copy",_,h),r.call(f+"_neg",g,L),r.call(m+"_mul",p,r.i32_const(w),p)):n.addCode(r.call(m+"_mul",u,r.i32_const(w),p))}function d(t,a){const e=t[0],i=t[1],n=a[0],l=a[1],c=[(e*n-i*l)%o,(e*l+i*n)%o];return ba(c[0])&&(c[0]=c[0]+o),c}}function $(a,o,i){const n=function(t){let a=t;const e=[];for(;a>0n;){if(La(a)){const t=2-Number(a%4n);e.push(t),a-=BigInt(t)}else e.push(0);a>>=1n}return e}(a).map((t=>-1==t?255:t)),l=t.alloc(n),c=t.addFunction(e+"__cyclotomicExp_"+i);c.addParam("x","i32"),c.addParam("r","i32"),c.addLocal("bit","i32"),c.addLocal("i","i32");const s=c.getCodeBuilder(),d=s.getLocal("x"),u=s.getLocal("r"),_=s.i32_const(t.alloc(r));c.addCode(s.call(q+"_conjugate",d,_),s.call(q+"_one",u),s.if(s.teeLocal("bit",s.i32_load8_s(s.i32_const(n.length-1),l)),s.if(s.i32_eq(s.getLocal("bit"),s.i32_const(1)),s.call(q+"_mul",u,d,u),s.call(q+"_mul",u,_,u))),s.setLocal("i",s.i32_const(n.length-2)),s.block(s.loop(s.call(e+"__cyclotomicSquare",u,u),s.if(s.teeLocal("bit",s.i32_load8_s(s.getLocal("i"),l)),s.if(s.i32_eq(s.getLocal("bit"),s.i32_const(1)),s.call(q+"_mul",u,d,u),s.call(q+"_mul",u,_,u))),s.br_if(1,s.i32_eqz(s.getLocal("i"))),s.setLocal("i",s.i32_sub(s.getLocal("i"),s.i32_const(1))),s.br(0)))),o&&c.addCode(s.call(q+"_conjugate",u,u))}t.modules[e]={n64q:n,n64r:d,n8q:l,n8r:u,pG1gen:C,pG1zero:F,pG1b:p,pG2gen:B,pG2zero:v,pG2b:L,pq:t.modules.f1m.pq,pr:g,pOneT:S,r:i,q:o,prePSize:Q,preQSize:k},function(){const a=t.addFunction(O+"_mul1");a.addParam("pA","i32"),a.addParam("pC1","i32"),a.addParam("pR","i32");const e=a.getCodeBuilder(),o=e.getLocal("pA"),i=e.i32_add(e.getLocal("pA"),e.i32_const(2*c)),n=e.i32_add(e.getLocal("pA"),e.i32_const(4*c)),l=e.getLocal("pC1"),s=e.getLocal("pR"),r=e.i32_add(e.getLocal("pR"),e.i32_const(2*c)),d=e.i32_add(e.getLocal("pR"),e.i32_const(4*c)),u=e.i32_const(t.alloc(2*c)),_=e.i32_const(t.alloc(2*c));a.addCode(e.call(m+"_add",o,i,u),e.call(m+"_add",i,n,_),e.call(m+"_mul",i,l,d),e.call(m+"_mul",_,l,s),e.call(m+"_sub",s,d,s),e.call(m+"_mulNR",s,s),e.call(m+"_mul",u,l,r),e.call(m+"_sub",r,d,r))}(),function(){const a=t.addFunction(O+"_mul01");a.addParam("pA","i32"),a.addParam("pC0","i32"),a.addParam("pC1","i32"),a.addParam("pR","i32");const e=a.getCodeBuilder(),o=e.getLocal("pA"),i=e.i32_add(e.getLocal("pA"),e.i32_const(2*c)),n=e.i32_add(e.getLocal("pA"),e.i32_const(4*c)),l=e.getLocal("pC0"),s=e.getLocal("pC1"),r=e.getLocal("pR"),d=e.i32_add(e.getLocal("pR"),e.i32_const(2*c)),u=e.i32_add(e.getLocal("pR"),e.i32_const(4*c)),_=e.i32_const(t.alloc(2*c)),g=e.i32_const(t.alloc(2*c)),f=e.i32_const(t.alloc(2*c)),p=e.i32_const(t.alloc(2*c));a.addCode(e.call(m+"_mul",o,l,_),e.call(m+"_mul",i,s,g),e.call(m+"_add",o,i,f),e.call(m+"_add",o,n,p),e.call(m+"_add",i,n,r),e.call(m+"_mul",r,s,r),e.call(m+"_sub",r,g,r),e.call(m+"_mulNR",r,r),e.call(m+"_add",r,_,r),e.call(m+"_add",l,s,d),e.call(m+"_mul",d,f,d),e.call(m+"_sub",d,_,d),e.call(m+"_sub",d,g,d),e.call(m+"_mul",p,l,u),e.call(m+"_sub",u,_,u),e.call(m+"_add",u,g,u))}(),function(){const a=t.addFunction(q+"_mul014");a.addParam("pA","i32"),a.addParam("pC0","i32"),a.addParam("pC1","i32"),a.addParam("pC4","i32"),a.addParam("pR","i32");const e=a.getCodeBuilder(),o=e.getLocal("pA"),i=e.i32_add(e.getLocal("pA"),e.i32_const(6*c)),n=e.getLocal("pC0"),l=e.getLocal("pC1"),s=e.getLocal("pC4"),r=e.i32_const(t.alloc(6*c)),d=e.i32_const(t.alloc(6*c)),u=e.i32_const(t.alloc(2*c)),_=e.getLocal("pR"),g=e.i32_add(e.getLocal("pR"),e.i32_const(6*c));a.addCode(e.call(O+"_mul01",o,n,l,r),e.call(O+"_mul1",i,s,d),e.call(m+"_add",l,s,u),e.call(O+"_add",i,o,g),e.call(O+"_mul01",g,n,u,g),e.call(O+"_sub",g,r,g),e.call(O+"_sub",g,d,g),e.call(O+"_copy",d,_),e.call(O+"_mulNR",_,_),e.call(O+"_add",_,r,_))}(),function(){const a=t.addFunction(e+"_ell");a.addParam("pP","i32"),a.addParam("pCoefs","i32"),a.addParam("pF","i32");const o=a.getCodeBuilder(),i=o.getLocal("pP"),n=o.i32_add(o.getLocal("pP"),o.i32_const(l)),s=o.getLocal("pF"),r=o.getLocal("pCoefs"),d=o.i32_add(o.getLocal("pCoefs"),o.i32_const(c)),u=o.i32_add(o.getLocal("pCoefs"),o.i32_const(2*c)),_=o.i32_add(o.getLocal("pCoefs"),o.i32_const(3*c)),g=o.i32_add(o.getLocal("pCoefs"),o.i32_const(4*c)),p=t.alloc(2*c),h=o.i32_const(p),m=o.i32_const(p),L=o.i32_const(p+c),b=t.alloc(2*c),w=o.i32_const(b),y=o.i32_const(b),A=o.i32_const(b+c);a.addCode(o.call(f+"_mul",r,n,m),o.call(f+"_mul",d,n,L),o.call(f+"_mul",u,i,y),o.call(f+"_mul",_,i,A),o.call(q+"_mul014",s,g,w,h,s))}();const j=t.alloc(Q),V=t.alloc(k);function K(a){const o=t.addFunction(e+"_pairingEq"+a);for(let t=0;t<a;t++)o.addParam("p_"+t,"i32"),o.addParam("q_"+t,"i32");o.addParam("c","i32"),o.setReturnType("i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(r)),l=i.i32_const(t.alloc(r));o.addCode(i.call(q+"_one",n));for(let t=0;t<a;t++)o.addCode(i.call(e+"_prepareG1",i.getLocal("p_"+t),i.i32_const(j))),o.addCode(i.call(e+"_prepareG2",i.getLocal("q_"+t),i.i32_const(V))),o.addCode(i.if(i.i32_eqz(i.call(h+"_inGroupAffine",i.i32_const(j))),i.ret(i.i32_const(0))),i.if(i.i32_eqz(i.call(b+"_inGroupAffine",i.i32_const(V))),i.ret(i.i32_const(0)))),o.addCode(i.call(e+"_millerLoop",i.i32_const(j),i.i32_const(V),l)),o.addCode(i.call(q+"_mul",n,l,n));o.addCode(i.call(e+"_finalExponentiation",n,n)),o.addCode(i.call(q+"_eq",n,i.getLocal("c")))}for(let a=0;a<10;a++)D(a),t.exportFunction(q+"_frobeniusMap"+a);!function(){const a=t.addFunction(h+"_inGroupAffine");a.addParam("p","i32"),a.setReturnType("i32");const e=a.getCodeBuilder(),o=(N*N-1n)/3n,i=e.i32_const(t.alloc(ca.bigInt2BytesLE(y(4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n),l))),n=e.i32_const(t.alloc(ca.bigInt2BytesLE(y(793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n),l))),s=e.i32_const(t.alloc(ca.bigInt2BytesLE(o,16))),r=e.getLocal("p"),d=e.i32_add(e.getLocal("p"),e.i32_const(c)),u=t.alloc(3*c),_=e.i32_const(u),g=e.i32_const(u),p=e.i32_const(u+c),m=t.alloc(2*c),L=e.i32_const(m),b=e.i32_const(m),w=e.i32_const(m+c);a.addCode(e.if(e.call(h+"_isZeroAffine",e.getLocal("p")),e.ret(e.i32_const(1))),e.if(e.i32_eqz(e.call(h+"_inCurveAffine",e.getLocal("p"))),e.ret(e.i32_const(0))),e.call(f+"_mul",r,i,g),e.call(f+"_copy",d,p),e.call(f+"_mul",r,n,b),e.call(f+"_copy",d,w),e.call(h+"_doubleAffine",_,_),e.call(h+"_subMixed",_,e.getLocal("p"),_),e.call(h+"_subMixed",_,L,_),e.call(h+"_timesScalar",_,s,e.i32_const(16),_),e.ret(e.call(h+"_eqMixed",_,L)));const A=t.addFunction(h+"_inGroup");A.addParam("pIn","i32"),A.setReturnType("i32");const C=A.getCodeBuilder(),x=C.i32_const(t.alloc(2*c));A.addCode(C.call(h+"_toAffine",C.getLocal("pIn"),x),C.ret(C.call(h+"_inGroupAffine",x)))}(),function(){const a=t.addFunction(b+"_inGroupAffine");a.addParam("p","i32"),a.setReturnType("i32");const e=a.getCodeBuilder(),o=[2001204777610833696708894912867952078278441409969503942666029068062015825245418932221343814564507832018947136279894n,2001204777610833696708894912867952078278441409969503942666029068062015825245418932221343814564507832018947136279893n],i=[2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n,2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n],n=e.i32_const(t.alloc([...ca.bigInt2BytesLE(y(o[0]),l),...ca.bigInt2BytesLE(y(o[1]),l)])),r=e.i32_const(t.alloc(ca.bigInt2BytesLE(y(4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n),l))),d=e.i32_const(t.alloc([...ca.bigInt2BytesLE(y(i[0]),l),...ca.bigInt2BytesLE(y(i[1]),l)])),u=e.i32_const(t.alloc(ca.bigInt2BytesLE(N,8))),_=e.getLocal("p"),g=e.i32_add(e.getLocal("p"),e.i32_const(s)),p=e.i32_const(t.alloc(c)),h=e.i32_const(t.alloc(s)),L=e.i32_const(t.alloc(s)),w=t.alloc(2*s),A=e.i32_const(w),C=e.i32_const(w),x=e.i32_const(w),F=e.i32_const(w+c),I=e.i32_const(w+s),B=e.i32_const(w+s),E=e.i32_const(w+s+c),v=t.alloc(3*s),S=e.i32_const(v),P=e.i32_const(v),O=e.i32_const(v),q=e.i32_const(v+c),G=e.i32_const(v+s),z=e.i32_const(v+s),T=e.i32_const(v+s+c),M=e.i32_const(v+2*s);a.addCode(e.if(e.call(b+"_isZeroAffine",e.getLocal("p")),e.ret(e.i32_const(1))),e.if(e.i32_eqz(e.call(b+"_inCurveAffine",e.getLocal("p"))),e.ret(e.i32_const(0))),e.call(m+"_mul",_,n,h),e.call(m+"_mul",g,n,L),e.call(m+"_mul1",h,r,C),e.call(m+"_neg",L,I),e.call(m+"_neg",h,P),e.call(m+"_mul",L,d,G),e.call(f+"_sub",x,F,p),e.call(f+"_add",x,F,F),e.call(f+"_copy",p,x),e.call(f+"_sub",B,E,p),e.call(f+"_add",B,E,E),e.call(f+"_copy",p,B),e.call(f+"_add",O,q,p),e.call(f+"_sub",O,q,q),e.call(f+"_copy",p,O),e.call(f+"_sub",T,z,p),e.call(f+"_add",z,T,T),e.call(f+"_copy",p,z),e.call(m+"_one",M),e.call(b+"_timesScalar",S,u,e.i32_const(8),S),e.call(b+"_addMixed",S,A,S),e.ret(e.call(b+"_eqMixed",S,e.getLocal("p"))));const U=t.addFunction(b+"_inGroup");U.addParam("pIn","i32"),U.setReturnType("i32");const Q=U.getCodeBuilder(),k=Q.i32_const(t.alloc(2*s));U.addCode(Q.call(b+"_toAffine",Q.getLocal("pIn"),k),Q.ret(Q.call(b+"_inGroupAffine",k)))}(),function(){const a=t.addFunction(e+"_prepAddStep");a.addParam("R","i32"),a.addParam("Q","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("R"),n=o.i32_add(o.getLocal("R"),o.i32_const(2*l)),c=o.i32_add(o.getLocal("R"),o.i32_const(4*l)),r=o.getLocal("Q"),d=o.i32_add(o.getLocal("Q"),o.i32_const(2*l)),u=o.getLocal("r"),_=o.i32_add(o.getLocal("r"),o.i32_const(2*l)),g=o.i32_add(o.getLocal("r"),o.i32_const(4*l)),f=o.i32_const(t.alloc(s)),p=o.i32_const(t.alloc(s)),h=o.i32_const(t.alloc(s)),L=o.i32_const(t.alloc(s)),b=o.i32_const(t.alloc(s)),w=o.i32_const(t.alloc(s)),y=o.i32_const(t.alloc(s)),A=o.i32_const(t.alloc(s)),C=o.i32_const(t.alloc(s)),x=o.i32_const(t.alloc(s)),F=o.i32_const(t.alloc(s));a.addCode(o.call(m+"_square",c,f),o.call(m+"_square",d,p),o.call(m+"_mul",f,r,L),o.call(m+"_add",d,c,_),o.call(m+"_square",_,_),o.call(m+"_sub",_,p,_),o.call(m+"_sub",_,f,_),o.call(m+"_mul",_,f,_),o.call(m+"_sub",L,i,b),o.call(m+"_square",b,w),o.call(m+"_add",w,w,y),o.call(m+"_add",y,y,y),o.call(m+"_mul",y,b,A),o.call(m+"_sub",_,n,C),o.call(m+"_sub",C,n,C),o.call(m+"_mul",C,r,g),o.call(m+"_mul",y,i,x),o.call(m+"_square",C,i),o.call(m+"_sub",i,A,i),o.call(m+"_sub",i,x,i),o.call(m+"_sub",i,x,i),o.call(m+"_add",c,b,c),o.call(m+"_square",c,c),o.call(m+"_sub",c,f,c),o.call(m+"_sub",c,w,c),o.call(m+"_add",d,c,u),o.call(m+"_sub",x,i,F),o.call(m+"_mul",F,C,F),o.call(m+"_mul",n,A,L),o.call(m+"_add",L,L,L),o.call(m+"_sub",F,L,n),o.call(m+"_square",u,u),o.call(m+"_sub",u,p,u),o.call(m+"_square",c,h),o.call(m+"_sub",u,h,u),o.call(m+"_add",g,g,g),o.call(m+"_sub",g,u,g),o.call(m+"_add",c,c,u),o.call(m+"_neg",C,C),o.call(m+"_add",C,C,_))}(),function(){const a=t.addFunction(e+"_prepDblStep");a.addParam("R","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("R"),n=o.i32_add(o.getLocal("R"),o.i32_const(2*l)),c=o.i32_add(o.getLocal("R"),o.i32_const(4*l)),r=o.getLocal("r"),d=o.i32_add(o.getLocal("r"),o.i32_const(2*l)),u=o.i32_add(o.getLocal("r"),o.i32_const(4*l)),_=o.i32_const(t.alloc(s)),g=o.i32_const(t.alloc(s)),f=o.i32_const(t.alloc(s)),p=o.i32_const(t.alloc(s)),h=o.i32_const(t.alloc(s));a.addCode(o.call(m+"_square",i,r),o.call(m+"_square",n,g),o.call(m+"_square",g,f),o.call(m+"_add",g,i,d),o.call(m+"_square",d,d),o.call(m+"_sub",d,r,d),o.call(m+"_sub",d,f,d),o.call(m+"_add",d,d,d),o.call(m+"_add",r,r,p),o.call(m+"_add",p,r,p),o.call(m+"_add",i,p,u),o.call(m+"_square",p,h),o.call(m+"_square",c,_),o.call(m+"_sub",h,d,i),o.call(m+"_sub",i,d,i),o.call(m+"_add",c,n,c),o.call(m+"_square",c,c),o.call(m+"_sub",c,g,c),o.call(m+"_sub",c,_,c),o.call(m+"_sub",d,i,n),o.call(m+"_mul",n,p,n),o.call(m+"_add",f,f,f),o.call(m+"_add",f,f,f),o.call(m+"_add",f,f,f),o.call(m+"_sub",n,f,n),o.call(m+"_mul",p,_,d),o.call(m+"_add",d,d,d),o.call(m+"_neg",d,d),o.call(m+"_square",u,u),o.call(m+"_sub",u,r,u),o.call(m+"_sub",u,h,u),o.call(m+"_add",g,g,g),o.call(m+"_add",g,g,g),o.call(m+"_sub",u,g,u),o.call(m+"_mul",c,_,r),o.call(m+"_add",r,r,r))}(),function(){const a=t.addFunction(e+"_prepareG1");a.addParam("pP","i32"),a.addParam("ppreP","i32");const o=a.getCodeBuilder();a.addCode(o.call(h+"_normalize",o.getLocal("pP"),o.getLocal("ppreP")))}(),function(){const a=t.addFunction(e+"_prepareG2");a.addParam("pQ","i32"),a.addParam("ppreQ","i32"),a.addLocal("pCoef","i32"),a.addLocal("i","i32");const o=a.getCodeBuilder(),i=o.getLocal("pQ"),n=t.alloc(3*s),l=o.i32_const(n),c=o.getLocal("ppreQ");a.addCode(o.call(b+"_normalize",i,c),o.if(o.call(b+"_isZero",c),o.ret([])),o.call(b+"_copy",c,l),o.setLocal("pCoef",o.i32_add(o.getLocal("ppreQ"),o.i32_const(3*s)))),a.addCode(o.setLocal("i",o.i32_const(G.length-2)),o.block(o.loop(o.call(e+"_prepDblStep",l,o.getLocal("pCoef")),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(T))),o.if(o.i32_load8_s(o.getLocal("i"),z),[...o.call(e+"_prepAddStep",l,c,o.getLocal("pCoef")),...o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(T)))]),o.br_if(1,o.i32_eqz(o.getLocal("i"))),o.setLocal("i",o.i32_sub(o.getLocal("i"),o.i32_const(1))),o.br(0))))}(),function(){const a=t.addFunction(e+"_millerLoop");a.addParam("ppreP","i32"),a.addParam("ppreQ","i32"),a.addParam("r","i32"),a.addLocal("pCoef","i32"),a.addLocal("i","i32");const o=a.getCodeBuilder(),i=o.getLocal("ppreP"),n=o.getLocal("pCoef"),l=o.getLocal("r");a.addCode(o.call(q+"_one",l),o.if(o.call(h+"_isZero",i),o.ret([])),o.if(o.call(h+"_isZero",o.getLocal("ppreQ")),o.ret([])),o.setLocal("pCoef",o.i32_add(o.getLocal("ppreQ"),o.i32_const(3*s))),o.setLocal("i",o.i32_const(G.length-2)),o.block(o.loop(o.call(e+"_ell",i,n,l),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(T))),o.if(o.i32_load8_s(o.getLocal("i"),z),[...o.call(e+"_ell",i,n,l),...o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(T)))]),o.call(q+"_square",l,l),o.br_if(1,o.i32_eq(o.getLocal("i"),o.i32_const(1))),o.setLocal("i",o.i32_sub(o.getLocal("i"),o.i32_const(1))),o.br(0))),o.call(e+"_ell",i,n,l)),a.addCode(o.call(q+"_conjugate",l,l))}(),function(){const a=t.addFunction(e+"_finalExponentiationOld");a.addParam("x","i32"),a.addParam("r","i32");const o=t.alloc(ca.bigInt2BytesLE(322277361516934140462891564586510139908379969514828494218366688025288661041104682794998680497580008899973249814104447692778988208376779573819485263026159588510513834876303014016798809919343532899164848730280942609956670917565618115867287399623286813270357901731510188149934363360381614501334086825442271920079363289954510565375378443704372994881406797882676971082200626541916413184642520269678897559532260949334760604962086348898118982248842634379637598665468817769075878555493752214492790122785850202957575200176084204422751485957336465472324810982833638490904279282696134323072515220044451592646885410572234451732790590013479358343841220074174848221722017083597872017638514103174122784843925578370430843522959600095676285723737049438346544753168912974976791528535276317256904336520179281145394686565050419250614107803233314658825463117900250701199181529205942363159325765991819433914303908860460720581408201373164047773794825411011922305820065611121544561808414055302212057471395719432072209245600258134364584636810093520285711072578721435517884103526483832733289802426157301542744476740008494780363354305116978805620671467071400711358839553375340724899735460480144599782014906586543813292157922220645089192130209334926661588737007768565838519456601560804957985667880395221049249803753582637708560n,544)),i=a.getCodeBuilder();a.addCode(i.call(q+"_exp",i.getLocal("x"),i.i32_const(o),i.i32_const(544),i.getLocal("r")))}(),function(){!function(){const a=t.addFunction(e+"__cyclotomicSquare");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=o.i32_add(o.getLocal("x"),o.i32_const(s)),l=o.i32_add(o.getLocal("x"),o.i32_const(2*s)),c=o.i32_add(o.getLocal("x"),o.i32_const(3*s)),r=o.i32_add(o.getLocal("x"),o.i32_const(4*s)),d=o.i32_add(o.getLocal("x"),o.i32_const(5*s)),u=o.getLocal("r"),_=o.i32_add(o.getLocal("r"),o.i32_const(s)),g=o.i32_add(o.getLocal("r"),o.i32_const(2*s)),f=o.i32_add(o.getLocal("r"),o.i32_const(3*s)),p=o.i32_add(o.getLocal("r"),o.i32_const(4*s)),h=o.i32_add(o.getLocal("r"),o.i32_const(5*s)),L=o.i32_const(t.alloc(s)),b=o.i32_const(t.alloc(s)),w=o.i32_const(t.alloc(s)),y=o.i32_const(t.alloc(s)),A=o.i32_const(t.alloc(s)),C=o.i32_const(t.alloc(s)),x=o.i32_const(t.alloc(s)),F=o.i32_const(t.alloc(s));a.addCode(o.call(m+"_mul",i,r,x),o.call(m+"_mulNR",r,L),o.call(m+"_add",i,L,L),o.call(m+"_add",i,r,F),o.call(m+"_mul",F,L,L),o.call(m+"_mulNR",x,F),o.call(m+"_add",x,F,F),o.call(m+"_sub",L,F,L),o.call(m+"_add",x,x,b),o.call(m+"_mul",c,l,x),o.call(m+"_mulNR",l,w),o.call(m+"_add",c,w,w),o.call(m+"_add",c,l,F),o.call(m+"_mul",F,w,w),o.call(m+"_mulNR",x,F),o.call(m+"_add",x,F,F),o.call(m+"_sub",w,F,w),o.call(m+"_add",x,x,y),o.call(m+"_mul",n,d,x),o.call(m+"_mulNR",d,A),o.call(m+"_add",n,A,A),o.call(m+"_add",n,d,F),o.call(m+"_mul",F,A,A),o.call(m+"_mulNR",x,F),o.call(m+"_add",x,F,F),o.call(m+"_sub",A,F,A),o.call(m+"_add",x,x,C),o.call(m+"_sub",L,i,u),o.call(m+"_add",u,u,u),o.call(m+"_add",L,u,u),o.call(m+"_add",b,r,p),o.call(m+"_add",p,p,p),o.call(m+"_add",b,p,p),o.call(m+"_mul",C,o.i32_const(P),F),o.call(m+"_add",F,c,f),o.call(m+"_add",f,f,f),o.call(m+"_add",F,f,f),o.call(m+"_sub",A,l,g),o.call(m+"_add",g,g,g),o.call(m+"_add",A,g,g),o.call(m+"_sub",w,n,_),o.call(m+"_add",_,_,_),o.call(m+"_add",w,_,_),o.call(m+"_add",y,d,h),o.call(m+"_add",h,h,h),o.call(m+"_add",y,h,h))}(),$(N,R,"w0");const a=t.addFunction(e+"_finalExponentiation");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=o.getLocal("r"),l=o.i32_const(t.alloc(r)),c=o.i32_const(t.alloc(r)),d=o.i32_const(t.alloc(r)),u=o.i32_const(t.alloc(r)),_=o.i32_const(t.alloc(r)),g=o.i32_const(t.alloc(r)),f=o.i32_const(t.alloc(r));a.addCode(o.call(q+"_frobeniusMap6",i,l),o.call(q+"_inverse",i,c),o.call(q+"_mul",l,c,d),o.call(q+"_copy",d,c),o.call(q+"_frobeniusMap2",d,d),o.call(q+"_mul",d,c,d),o.call(e+"__cyclotomicSquare",d,c),o.call(q+"_conjugate",c,c),o.call(e+"__cyclotomicExp_w0",d,u),o.call(e+"__cyclotomicSquare",u,_),o.call(q+"_mul",c,u,g),o.call(e+"__cyclotomicExp_w0",g,c),o.call(e+"__cyclotomicExp_w0",c,l),o.call(e+"__cyclotomicExp_w0",l,f),o.call(q+"_mul",f,_,f),o.call(e+"__cyclotomicExp_w0",f,_),o.call(q+"_conjugate",g,g),o.call(q+"_mul",_,g,_),o.call(q+"_mul",_,d,_),o.call(q+"_conjugate",d,g),o.call(q+"_mul",c,d,c),o.call(q+"_frobeniusMap3",c,c),o.call(q+"_mul",f,g,f),o.call(q+"_frobeniusMap1",f,f),o.call(q+"_mul",u,l,u),o.call(q+"_frobeniusMap2",u,u),o.call(q+"_mul",u,c,u),o.call(q+"_mul",u,f,u),o.call(q+"_mul",u,_,n))}();for(let a=1;a<=5;a++)K(a),t.exportFunction(e+"_pairingEq"+a);!function(){const a=t.addFunction(e+"_pairing");a.addParam("p","i32"),a.addParam("q","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.i32_const(t.alloc(r));a.addCode(o.call(e+"_prepareG1",o.getLocal("p"),o.i32_const(j))),a.addCode(o.call(e+"_prepareG2",o.getLocal("q"),o.i32_const(V))),a.addCode(o.call(e+"_millerLoop",o.i32_const(j),o.i32_const(V),i)),a.addCode(o.call(e+"_finalExponentiation",i,o.getLocal("r")))}(),t.exportFunction(e+"_pairing"),t.exportFunction(e+"_prepareG1"),t.exportFunction(e+"_prepareG2"),t.exportFunction(e+"_millerLoop"),t.exportFunction(e+"_finalExponentiation"),t.exportFunction(e+"_finalExponentiationOld"),t.exportFunction(e+"__cyclotomicSquare"),t.exportFunction(e+"__cyclotomicExp_w0"),t.exportFunction(O+"_mul1"),t.exportFunction(O+"_mul01"),t.exportFunction(q+"_mul014"),t.exportFunction(h+"_inGroupAffine"),t.exportFunction(h+"_inGroup"),t.exportFunction(b+"_inGroupAffine"),t.exportFunction(b+"_inGroup")};const Aa=[];for(let t=0;t<256;t++)Aa[t]=Ca(t,8);function Ca(t,a){let e=0,o=t;for(let t=0;t<a;t++)e<<=1,e|=1&o,o>>=1;return e}function xa(t,a){return(Aa[t>>>24]|Aa[t>>>16&255]<<8|Aa[t>>>8&255]<<16|Aa[255&t]<<24)>>>32-a}function Fa(t){return(0!=(4294901760&t)?(t&=4294901760,16):0)|(0!=(4278255360&t)?(t&=4278255360,8):0)|(0!=(4042322160&t)?(t&=4042322160,4):0)|(0!=(3435973836&t)?(t&=3435973836,2):0)|0!=(2863311530&t)}function Ia(t,a){const e=new Uint8Array(a*t.length);for(let o=0;o<t.length;o++)e.set(t[o],o*a);return e}function Ba(t,a){const e=t.byteLength/a,o=new Array(e);for(let i=0;i<e;i++)o[i]=t.slice(i*a,i*a+a);return o}const Ea=1<<30;class va{constructor(t){this.buffers=[],this.byteLength=t;for(let a=0;a<t;a+=Ea){const e=Math.min(t-a,Ea);this.buffers.push(new Uint8Array(e))}}slice(t,a){void 0===a&&(a=this.byteLength),void 0===t&&(t=0);const e=a-t,o=Math.floor(t/Ea);if(o==Math.floor((t+e-1)/Ea)||0==e)return this.buffers[o].slice(t%Ea,t%Ea+e);let i,n=o,l=t%Ea,c=e;for(;c>0;){const t=l+c>Ea?Ea-l:c,a=new Uint8Array(this.buffers[n].buffer,this.buffers[n].byteOffset+l,t);if(t==e)return a.slice();i||(i=e<=Ea?new Uint8Array(e):new va(e)),i.set(a,e-c),c-=t,n++,l=0}return i}set(t,a){void 0===a&&(a=0);const e=t.byteLength;if(0==e)return;const o=Math.floor(a/Ea);if(o==Math.floor((a+e-1)/Ea))return t instanceof va&&1==t.buffers.length?this.buffers[o].set(t.buffers[0],a%Ea):this.buffers[o].set(t,a%Ea);let i=o,n=a%Ea,l=e;for(;l>0;){const a=n+l>Ea?Ea-n:l,o=t.slice(e-l,e-l+a);new Uint8Array(this.buffers[i].buffer,this.buffers[i].byteOffset+n,a).set(o),l-=a,i++,n=0}}}function Sa(t,a,e,o){return async function(i){const n=Math.floor(i.byteLength/e);if(n*e!==i.byteLength)throw new Error("Invalid buffer size");const l=Math.floor(n/t.concurrency),c=[];for(let s=0;s<t.concurrency;s++){let r;if(r=s<t.concurrency-1?l:n-s*l,0==r)continue;const d=[{cmd:"ALLOCSET",var:0,buff:i.slice(s*l*e,s*l*e+r*e)},{cmd:"ALLOC",var:1,len:o*r},{cmd:"CALL",fnName:a,params:[{var:0},{val:r},{var:1}]},{cmd:"GET",out:0,var:1,len:o*r}];c.push(t.queueAction(d))}const s=await Promise.all(c);let r;r=i instanceof va?new va(n*o):new Uint8Array(n*o);let d=0;for(let t=0;t<s.length;t++)r.set(s[t][0],d),d+=s[t][0].byteLength;return r}}class Pa{constructor(t,a,e,o){if(this.tm=t,this.prefix=a,this.p=o,this.n8=e,this.type="F1",this.m=1,this.half=s(o,O),this.bitLength=i(o),this.mask=p(c(O,this.bitLength),O),this.pOp1=t.alloc(e),this.pOp2=t.alloc(e),this.pOp3=t.alloc(e),this.tm.instance.exports[a+"_zero"](this.pOp1),this.zero=this.tm.getBuff(this.pOp1,this.n8),this.tm.instance.exports[a+"_one"](this.pOp1),this.one=this.tm.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one),this.n64=Math.floor(e/8),this.n32=Math.floor(e/4),8*this.n64!=this.n8)throw new Error("n8 must be a multiple of 8");this.half=s(this.p,O),this.nqr=this.two;let n=this.exp(this.nqr,this.half);for(;!this.eq(n,this.negone);)this.nqr=this.add(this.nqr,this.one),n=this.exp(this.nqr,this.half);this.shift=this.mul(this.nqr,this.nqr),this.shiftInv=this.inv(this.shift),this.s=0;let l=p(this.p,O);for(;!u(l);)this.s=this.s+1,l=s(l,O);this.w=[],this.w[this.s]=this.exp(this.nqr,l);for(let t=this.s-1;t>=0;t--)this.w[t]=this.square(this.w[t+1]);if(!this.eq(this.w[0],this.one))throw new Error("Error calculating roots of unity");this.batchToMontgomery=Sa(t,a+"_batchToMontgomery",this.n8,this.n8),this.batchFromMontgomery=Sa(t,a+"_batchFromMontgomery",this.n8,this.n8)}op2(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,a){return this.tm.setBuff(this.pOp1,a),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,a){return this.tm.setBuff(this.pOp1,a),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,a){return this.op2("_add",t,a)}eq(t,a){return this.op2Bool("_eq",t,a)}isZero(t){return this.op1Bool("_isZero",t)}sub(t,a){return this.op2("_sub",t,a)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,a){return this.op2("_mul",t,a)}div(t,a){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,a){return a instanceof Uint8Array||(a=S(o(a))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,a.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}isNegative(t){return this.op1Bool("_isNegative",t)}e(t,a){if(t instanceof Uint8Array)return t;let e=o(t,a);n(e)?(e=h(e),A(e,this.p)&&(e=w(e,this.p)),e=p(this.p,e)):A(e,this.p)&&(e=w(e,this.p));const l=function(t,a){let e=t;void 0===a&&0==(a=Math.floor((i(t)-1)/8)+1)&&(a=1);const o=new Uint8Array(a),n=new DataView(o.buffer);let l=0;for(;l<a;)l+4<=a?(n.setUint32(l,Number(e&BigInt(4294967295)),!0),l+=4,e>>=BigInt(32)):l+2<=a?(n.setUint16(l,Number(e&BigInt(65535)),!0),l+=2,e>>=BigInt(16)):(n.setUint8(l,Number(e&BigInt(255)),!0),l+=1,e>>=BigInt(8));if(e)throw new Error("Number does not fit in this length");return o}(e,this.n8);return this.toMontgomery(l)}toString(t,a){return v(B(this.fromMontgomery(t),0),a)}fromRng(t){let a;const e=new Uint8Array(this.n8);do{a=P;for(let e=0;e<this.n64;e++)a=f(a,c(t.nextU64(),64*e));a=x(a,this.mask)}while(C(a,this.p));return F(e,0,a,this.n8),e}random(){return this.fromRng(R())}toObject(t){return B(this.fromMontgomery(t),0)}fromObject(t){const a=new Uint8Array(this.n8);return F(a,0,t,this.n8),this.toMontgomery(a)}toRprLE(t,a,e){t.set(this.fromMontgomery(e),a)}toRprBE(t,a,e){const o=this.fromMontgomery(e);for(let t=0;t<this.n8/2;t++){const a=o[t];o[t]=o[this.n8-1-t],o[this.n8-1-t]=a}t.set(o,a)}fromRprLE(t,a){a=a||0;const e=t.slice(a,a+this.n8);return this.toMontgomery(e)}async batchInverse(t){let a=!1;const e=this.n8,o=this.n8;Array.isArray(t)?(t=Ia(t,e),a=!0):t=t.slice(0,t.byteLength);const i=Math.floor(t.byteLength/e);if(i*e!==t.byteLength)throw new Error("Invalid buffer size");const n=Math.floor(i/this.tm.concurrency),l=[];for(let a=0;a<this.tm.concurrency;a++){let c;if(c=a<this.tm.concurrency-1?n:i-a*n,0==c)continue;const s=[{cmd:"ALLOCSET",var:0,buff:t.slice(a*n*e,a*n*e+c*e)},{cmd:"ALLOC",var:1,len:o*c},{cmd:"CALL",fnName:this.prefix+"_batchInverse",params:[{var:0},{val:e},{val:c},{var:1},{val:o}]},{cmd:"GET",out:0,var:1,len:o*c}];l.push(this.tm.queueAction(s))}const c=await Promise.all(l);let s;s=t instanceof va?new va(i*o):new Uint8Array(i*o);let r=0;for(let t=0;t<c.length;t++)s.set(c[t][0],r),r+=c[t][0].byteLength;return a?Ba(s,o):s}}class Oa{constructor(t,a,e){this.tm=t,this.prefix=a,this.F=e,this.type="F2",this.m=2*e.m,this.n8=2*this.F.n8,this.n32=2*this.F.n32,this.n64=2*this.F.n64,this.pOp1=t.alloc(2*e.n8),this.pOp2=t.alloc(2*e.n8),this.pOp3=t.alloc(2*e.n8),this.tm.instance.exports[a+"_zero"](this.pOp1),this.zero=t.getBuff(this.pOp1,this.n8),this.tm.instance.exports[a+"_one"](this.pOp1),this.one=t.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one)}op2(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,a){return this.tm.setBuff(this.pOp1,a),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,a){return this.tm.setBuff(this.pOp1,a),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,a){return this.op2("_add",t,a)}eq(t,a){return this.op2Bool("_eq",t,a)}isZero(t){return this.op1Bool("_isZero",t)}sub(t,a){return this.op2("_sub",t,a)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}isNegative(t){return this.op1Bool("_isNegative",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,a){return this.op2("_mul",t,a)}mul1(t,a){return this.op2("_mul1",t,a)}div(t,a){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,a){return a instanceof Uint8Array||(a=S(o(a))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,a.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}e(t,a){if(t instanceof Uint8Array)return t;if(Array.isArray(t)&&2==t.length){const e=this.F.e(t[0],a),o=this.F.e(t[1],a),i=new Uint8Array(2*this.F.n8);return i.set(e),i.set(o,2*this.F.n8),i}throw new Error("invalid F2")}toString(t,a){return`[${this.F.toString(t.slice(0,this.F.n8),a)}, ${this.F.toString(t.slice(this.F.n8),a)}]`}fromRng(t){const a=this.F.fromRng(t),e=this.F.fromRng(t),o=new Uint8Array(2*this.F.n8);return o.set(a),o.set(e,this.F.n8),o}random(){return this.fromRng(R())}toObject(t){return[this.F.toObject(t.slice(0,this.F.n8)),this.F.toObject(t.slice(this.F.n8,2*this.F.n8))]}fromObject(t){const a=new Uint8Array(2*this.F.n8),e=this.F.fromObject(t[0]),o=this.F.fromObject(t[1]);return a.set(e),a.set(o,this.F.n8),a}c1(t){return t.slice(0,this.F.n8)}c2(t){return t.slice(this.F.n8)}}class qa{constructor(t,a,e){this.tm=t,this.prefix=a,this.F=e,this.type="F3",this.m=3*e.m,this.n8=3*this.F.n8,this.n32=3*this.F.n32,this.n64=3*this.F.n64,this.pOp1=t.alloc(3*e.n8),this.pOp2=t.alloc(3*e.n8),this.pOp3=t.alloc(3*e.n8),this.tm.instance.exports[a+"_zero"](this.pOp1),this.zero=t.getBuff(this.pOp1,this.n8),this.tm.instance.exports[a+"_one"](this.pOp1),this.one=t.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one)}op2(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,a){return this.tm.setBuff(this.pOp1,a),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,a){return this.tm.setBuff(this.pOp1,a),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}eq(t,a){return this.op2Bool("_eq",t,a)}isZero(t){return this.op1Bool("_isZero",t)}add(t,a){return this.op2("_add",t,a)}sub(t,a){return this.op2("_sub",t,a)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}isNegative(t){return this.op1Bool("_isNegative",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,a){return this.op2("_mul",t,a)}div(t,a){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,a){return a instanceof Uint8Array||(a=S(o(a))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,a.byteLength,this.pOp3),this.getBuff(this.pOp3,this.n8)}e(t,a){if(t instanceof Uint8Array)return t;if(Array.isArray(t)&&3==t.length){const e=this.F.e(t[0],a),o=this.F.e(t[1],a),i=this.F.e(t[2],a),n=new Uint8Array(3*this.F.n8);return n.set(e),n.set(o,this.F.n8),n.set(i,2*this.F.n8),n}throw new Error("invalid F3")}toString(t,a){return`[${this.F.toString(t.slice(0,this.F.n8),a)}, ${this.F.toString(t.slice(this.F.n8,2*this.F.n8),a)}, ${this.F.toString(t.slice(2*this.F.n8),a)}]`}fromRng(t){const a=this.F.fromRng(t),e=this.F.fromRng(t),o=this.F.fromRng(t),i=new Uint8Array(3*this.F.n8);return i.set(a),i.set(e,this.F.n8),i.set(o,2*this.F.n8),i}random(){return this.fromRng(R())}toObject(t){return[this.F.toObject(t.slice(0,this.F.n8)),this.F.toObject(t.slice(this.F.n8,2*this.F.n8)),this.F.toObject(t.slice(2*this.F.n8,3*this.F.n8))]}fromObject(t){const a=new Uint8Array(3*this.F.n8),e=this.F.fromObject(t[0]),o=this.F.fromObject(t[1]),i=this.F.fromObject(t[2]);return a.set(e),a.set(o,this.F.n8),a.set(i,2*this.F.n8),a}c1(t){return t.slice(0,this.F.n8)}c2(t){return t.slice(this.F.n8,2*this.F.n8)}c3(t){return t.slice(2*this.F.n8)}}class Ga{constructor(t,a,e,o,i,n){this.tm=t,this.prefix=a,this.F=e,this.pOp1=t.alloc(3*e.n8),this.pOp2=t.alloc(3*e.n8),this.pOp3=t.alloc(3*e.n8),this.tm.instance.exports[a+"_zero"](this.pOp1),this.zero=this.tm.getBuff(this.pOp1,3*e.n8),this.tm.instance.exports[a+"_zeroAffine"](this.pOp1),this.zeroAffine=this.tm.getBuff(this.pOp1,2*e.n8),this.one=this.tm.getBuff(o,3*e.n8),this.g=this.one,this.oneAffine=this.tm.getBuff(o,2*e.n8),this.gAffine=this.oneAffine,this.b=this.tm.getBuff(i,e.n8),n&&(this.cofactor=S(n)),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one),this.batchLEMtoC=Sa(t,a+"_batchLEMtoC",2*e.n8,e.n8),this.batchLEMtoU=Sa(t,a+"_batchLEMtoU",2*e.n8,2*e.n8),this.batchCtoLEM=Sa(t,a+"_batchCtoLEM",e.n8,2*e.n8),this.batchUtoLEM=Sa(t,a+"_batchUtoLEM",2*e.n8,2*e.n8),this.batchToJacobian=Sa(t,a+"_batchToJacobian",2*e.n8,3*e.n8),this.batchToAffine=Sa(t,a+"_batchToAffine",3*e.n8,2*e.n8)}op2(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}op2bool(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3)}op1(t,a){return this.tm.setBuff(this.pOp1,a),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}op1Affine(t,a){return this.tm.setBuff(this.pOp1,a),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,2*this.F.n8)}op1Bool(t,a){return this.tm.setBuff(this.pOp1,a),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,a){if(t.byteLength==3*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2("_add",t,a);if(a.byteLength==2*this.F.n8)return this.op2("_addMixed",t,a);throw new Error("invalid point size")}if(t.byteLength==2*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2("_addMixed",a,t);if(a.byteLength==2*this.F.n8)return this.op2("_addAffine",t,a);throw new Error("invalid point size")}throw new Error("invalid point size")}sub(t,a){if(t.byteLength==3*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2("_sub",t,a);if(a.byteLength==2*this.F.n8)return this.op2("_subMixed",t,a);throw new Error("invalid point size")}if(t.byteLength==2*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2("_subMixed",a,t);if(a.byteLength==2*this.F.n8)return this.op2("_subAffine",t,a);throw new Error("invalid point size")}throw new Error("invalid point size")}neg(t){if(t.byteLength==3*this.F.n8)return this.op1("_neg",t);if(t.byteLength==2*this.F.n8)return this.op1Affine("_negAffine",t);throw new Error("invalid point size")}double(t){if(t.byteLength==3*this.F.n8)return this.op1("_double",t);if(t.byteLength==2*this.F.n8)return this.op1("_doubleAffine",t);throw new Error("invalid point size")}isZero(t){if(t.byteLength==3*this.F.n8)return this.op1Bool("_isZero",t);if(t.byteLength==2*this.F.n8)return this.op1Bool("_isZeroAffine",t);throw new Error("invalid point size")}timesScalar(t,a){let e;if(a instanceof Uint8Array||(a=S(o(a))),t.byteLength==3*this.F.n8)e=this.prefix+"_timesScalar";else{if(t.byteLength!=2*this.F.n8)throw new Error("invalid point size");e=this.prefix+"_timesScalarAffine"}return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[e](this.pOp1,this.pOp2,a.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}timesFr(t,a){let e;if(t.byteLength==3*this.F.n8)e=this.prefix+"_timesFr";else{if(t.byteLength!=2*this.F.n8)throw new Error("invalid point size");e=this.prefix+"_timesFrAffine"}return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[e](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}eq(t,a){if(t.byteLength==3*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2bool("_eq",t,a);if(a.byteLength==2*this.F.n8)return this.op2bool("_eqMixed",t,a);throw new Error("invalid point size")}if(t.byteLength==2*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2bool("_eqMixed",a,t);if(a.byteLength==2*this.F.n8)return this.op2bool("_eqAffine",t,a);throw new Error("invalid point size")}throw new Error("invalid point size")}toAffine(t){if(t.byteLength==3*this.F.n8)return this.op1Affine("_toAffine",t);if(t.byteLength==2*this.F.n8)return t;throw new Error("invalid point size")}toJacobian(t){if(t.byteLength==3*this.F.n8)return t;if(t.byteLength==2*this.F.n8)return this.op1("_toJacobian",t);throw new Error("invalid point size")}toRprUncompressed(t,a,e){if(this.tm.setBuff(this.pOp1,e),e.byteLength==3*this.F.n8)this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);else if(e.byteLength!=2*this.F.n8)throw new Error("invalid point size");this.tm.instance.exports[this.prefix+"_LEMtoU"](this.pOp1,this.pOp1);const o=this.tm.getBuff(this.pOp1,2*this.F.n8);t.set(o,a)}fromRprUncompressed(t,a){const e=t.slice(a,a+2*this.F.n8);return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+"_UtoLEM"](this.pOp1,this.pOp1),this.tm.getBuff(this.pOp1,2*this.F.n8)}toRprCompressed(t,a,e){if(this.tm.setBuff(this.pOp1,e),e.byteLength==3*this.F.n8)this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);else if(e.byteLength!=2*this.F.n8)throw new Error("invalid point size");this.tm.instance.exports[this.prefix+"_LEMtoC"](this.pOp1,this.pOp1);const o=this.tm.getBuff(this.pOp1,this.F.n8);t.set(o,a)}fromRprCompressed(t,a){const e=t.slice(a,a+this.F.n8);return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+"_CtoLEM"](this.pOp1,this.pOp2),this.tm.getBuff(this.pOp2,2*this.F.n8)}toUncompressed(t){const a=new Uint8Array(2*this.F.n8);return this.toRprUncompressed(a,0,t),a}toRprLEM(t,a,e){if(e.byteLength!=2*this.F.n8){if(e.byteLength!=3*this.F.n8)throw new Error("invalid point size");{this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);const o=this.tm.getBuff(this.pOp1,2*this.F.n8);t.set(o,a)}}else t.set(e,a)}fromRprLEM(t,a){return a=a||0,t.slice(a,a+2*this.F.n8)}toString(t,a){if(t.byteLength==3*this.F.n8){return`[ ${this.F.toString(t.slice(0,this.F.n8),a)}, ${this.F.toString(t.slice(this.F.n8,2*this.F.n8),a)}, ${this.F.toString(t.slice(2*this.F.n8),a)} ]`}if(t.byteLength==2*this.F.n8){return`[ ${this.F.toString(t.slice(0,this.F.n8),a)}, ${this.F.toString(t.slice(this.F.n8),a)} ]`}throw new Error("invalid point size")}isValid(t){if(this.isZero(t))return!0;const a=this.F,e=this.toAffine(t),o=e.slice(0,this.F.n8),i=e.slice(this.F.n8,2*this.F.n8),n=a.add(a.mul(a.square(o),o),this.b),l=a.square(i);return a.eq(n,l)}fromRng(t){const a=this.F;let e,o,i=[];do{i[0]=a.fromRng(t),e=t.nextBool(),o=a.add(a.mul(a.square(i[0]),i[0]),this.b)}while(!a.isSquare(o));i[1]=a.sqrt(o);e^a.isNegative(i[1])&&(i[1]=a.neg(i[1]));let n=new Uint8Array(2*this.F.n8);return n.set(i[0]),n.set(i[1],this.F.n8),this.cofactor&&(n=this.timesScalar(n,this.cofactor)),n}toObject(t){if(this.isZero(t))return[this.F.toObject(this.F.zero),this.F.toObject(this.F.one),this.F.toObject(this.F.zero)];const a=this.F.toObject(t.slice(0,this.F.n8)),e=this.F.toObject(t.slice(this.F.n8,2*this.F.n8));let o;return o=t.byteLength==3*this.F.n8?this.F.toObject(t.slice(2*this.F.n8,3*this.F.n8)):this.F.toObject(this.F.one),[a,e,o]}fromObject(t){const a=this.F.fromObject(t[0]),e=this.F.fromObject(t[1]);let o;if(o=3==t.length?this.F.fromObject(t[2]):this.F.one,this.F.isZero(o,this.F.one))return this.zeroAffine;if(this.F.eq(o,this.F.one)){const t=new Uint8Array(2*this.F.n8);return t.set(a),t.set(e,this.F.n8),t}{const t=new Uint8Array(3*this.F.n8);return t.set(a),t.set(e,this.F.n8),t.set(o,2*this.F.n8),t}}e(t){return t instanceof Uint8Array?t:this.fromObject(t)}x(t){return this.toAffine(t).slice(0,this.F.n8)}y(t){return this.toAffine(t).slice(this.F.n8)}}function za(t){const a=32767;let e,o;async function i(t){const i=new Uint8Array(t.code),n=await WebAssembly.compile(i);o=new WebAssembly.Memory({initial:t.init,maximum:a}),e=await WebAssembly.instantiate(n,{env:{memory:o}})}function n(t){const e=new Uint32Array(o.buffer,0,1);for(;3&e[0];)e[0]++;const i=e[0];if(e[0]+=t,e[0]+t>o.buffer.byteLength){const i=o.buffer.byteLength/65536;let n=Math.floor((e[0]+t)/65536)+1;n>a&&(n=a),o.grow(n-i)}return i}function l(t){const a=n(t.byteLength);return s(a,t),a}function c(t,a){const e=new Uint8Array(o.buffer);return new Uint8Array(e.buffer,e.byteOffset+t,a)}function s(t,a){new Uint8Array(o.buffer).set(new Uint8Array(a),t)}function r(t){if("INIT"==t[0].cmd)return i(t[0]);const a={vars:[],out:[]},r=new Uint32Array(o.buffer,0,1)[0];for(let o=0;o<t.length;o++)switch(t[o].cmd){case"ALLOCSET":a.vars[t[o].var]=l(t[o].buff);break;case"ALLOC":a.vars[t[o].var]=n(t[o].len);break;case"SET":s(a.vars[t[o].var],t[o].buff);break;case"CALL":{const i=[];for(let e=0;e<t[o].params.length;e++){const n=t[o].params[e];void 0!==n.var?i.push(a.vars[n.var]+(n.offset||0)):void 0!==n.val&&i.push(n.val)}e.exports[t[o].fnName](...i);break}case"GET":a.out[t[o].out]=c(a.vars[t[o].var],t[o].len).slice();break;default:throw new Error("Invalid cmd")}return new Uint32Array(o.buffer,0,1)[0]=r,a.out}return t&&(t.onmessage=function(a){let e;if(e=a.data?a.data:a,"INIT"==e[0].cmd)i(e[0]).then((function(){t.postMessage(e.result)}));else if("TERMINATE"==e[0].cmd)t.close();else{const a=r(e);t.postMessage(a)}}),r}var Ta={},Ma=Worker;const Ua=25;class Qa{constructor(){this.promise=new Promise(((t,a)=>{this.reject=a,this.resolve=t}))}}var ka;const Ra="data:application/javascript;base64,"+(ka="("+za.toString()+")(self)",globalThis.btoa(ka));class Na{constructor(){this.actionQueue=[],this.oldPFree=0}startSyncOp(){if(0!=this.oldPFree)throw new Error("Sync operation in progress");this.oldPFree=this.u32[0]}endSyncOp(){if(0==this.oldPFree)throw new Error("No sync operation in progress");this.u32[0]=this.oldPFree,this.oldPFree=0}postAction(t,a,e,o){if(this.working[t])throw new Error("Posting a job t a working worker");return this.working[t]=!0,this.pendingDeferreds[t]=o||new Qa,this.workers[t].postMessage(a,e),this.pendingDeferreds[t].promise}processWorks(){for(let t=0;t<this.workers.length&&this.actionQueue.length>0;t++)if(0==this.working[t]){const a=this.actionQueue.shift();this.postAction(t,a.data,a.transfers,a.deferred)}}queueAction(t,a){const e=new Qa;if(this.singleThread){const a=this.taskManager(t);e.resolve(a)}else this.actionQueue.push({data:t,transfers:a,deferred:e}),this.processWorks();return e.promise}resetMemory(){this.u32[0]=this.initalPFree}allocBuff(t){const a=this.alloc(t.byteLength);return this.setBuff(a,t),a}getBuff(t,a){return this.u8.slice(t,t+a)}setBuff(t,a){this.u8.set(new Uint8Array(a),t)}alloc(t){for(;3&this.u32[0];)this.u32[0]++;const a=this.u32[0];return this.u32[0]+=t,a}async terminate(){for(let t=0;t<this.workers.length;t++)this.workers[t].postMessage([{cmd:"TERMINATE"}]);var t;await(t=200,new Promise((a=>setTimeout(a,t))))}}function Da(t,a){const e=t[a],o=t.Fr,i=t.tm;t[a].batchApplyKey=async function(t,n,l,c,s){let r,d,u,_,g;if(c=c||"affine",s=s||"affine","G1"==a)"jacobian"==c?(u=3*e.F.n8,r="g1m_batchApplyKey"):(u=2*e.F.n8,r="g1m_batchApplyKeyMixed"),_=3*e.F.n8,"jacobian"==s?g=3*e.F.n8:(d="g1m_batchToAffine",g=2*e.F.n8);else if("G2"==a)"jacobian"==c?(u=3*e.F.n8,r="g2m_batchApplyKey"):(u=2*e.F.n8,r="g2m_batchApplyKeyMixed"),_=3*e.F.n8,"jacobian"==s?g=3*e.F.n8:(d="g2m_batchToAffine",g=2*e.F.n8);else{if("Fr"!=a)throw new Error("Invalid group: "+a);r="frm_batchApplyKey",u=e.n8,_=e.n8,g=e.n8}const f=Math.floor(t.byteLength/u),p=Math.floor(f/i.concurrency),h=[];l=o.e(l);let m=o.e(n);for(let a=0;a<i.concurrency;a++){let e;if(e=a<i.concurrency-1?p:f-a*p,0==e)continue;const n=[];n.push({cmd:"ALLOCSET",var:0,buff:t.slice(a*p*u,a*p*u+e*u)}),n.push({cmd:"ALLOCSET",var:1,buff:m}),n.push({cmd:"ALLOCSET",var:2,buff:l}),n.push({cmd:"ALLOC",var:3,len:e*Math.max(_,g)}),n.push({cmd:"CALL",fnName:r,params:[{var:0},{val:e},{var:1},{var:2},{var:3}]}),d&&n.push({cmd:"CALL",fnName:d,params:[{var:3},{val:e},{var:3}]}),n.push({cmd:"GET",out:0,var:3,len:e*g}),h.push(i.queueAction(n)),m=o.mul(m,o.exp(l,e))}const L=await Promise.all(h);let b;b=t instanceof va?new va(f*g):new Uint8Array(f*g);let w=0;for(let t=0;t<L.length;t++)b.set(L[t][0],w),w+=L[t][0].byteLength;return b}}const $a=[1,1,1,1,2,3,4,5,6,7,7,8,9,10,11,12,13,13,14,15,16,16,17,17,17,17,17,17,17,17,17,17];function ja(t,a){const e=t[a],o=e.tm;async function i(t,o,i,n,l){if(!(t instanceof Uint8Array))throw n&&n.error(`${l} _multiExpChunk buffBases is not Uint8Array`),new Error(`${l} _multiExpChunk buffBases is not Uint8Array`);if(!(o instanceof Uint8Array))throw n&&n.error(`${l} _multiExpChunk buffScalars is not Uint8Array`),new Error(`${l} _multiExpChunk buffScalars is not Uint8Array`);let c,s;if(i=i||"affine","G1"==a)"affine"==i?(s="g1m_multiexpAffine_chunk",c=2*e.F.n8):(s="g1m_multiexp_chunk",c=3*e.F.n8);else{if("G2"!=a)throw new Error("Invalid group");"affine"==i?(s="g2m_multiexpAffine_chunk",c=2*e.F.n8):(s="g2m_multiexp_chunk",c=3*e.F.n8)}const r=Math.floor(t.byteLength/c);if(0==r)return e.zero;const d=Math.floor(o.byteLength/r);if(d*r!=o.byteLength)throw new Error("Scalar size does not match");const u=$a[Fa(r)],_=Math.floor((8*d-1)/u)+1,g=[];for(let a=0;a<_;a++){const i=[{cmd:"ALLOCSET",var:0,buff:t},{cmd:"ALLOCSET",var:1,buff:o},{cmd:"ALLOC",var:2,len:3*e.F.n8},{cmd:"CALL",fnName:s,params:[{var:0},{var:1},{val:d},{val:r},{val:a*u},{val:Math.min(8*d-a*u,u)},{var:2}]},{cmd:"GET",out:0,var:2,len:3*e.F.n8}];g.push(e.tm.queueAction(i))}const f=await Promise.all(g);let p=e.zero;for(let t=f.length-1;t>=0;t--){if(!e.isZero(p))for(let t=0;t<u;t++)p=e.double(p);p=e.add(p,f[t][0])}return p}async function n(t,n,l,c,s){const r=1<<22;let d;if("G1"==a)d="affine"==l?2*e.F.n8:3*e.F.n8;else{if("G2"!=a)throw new Error("Invalid group");d="affine"==l?2*e.F.n8:3*e.F.n8}const u=Math.floor(t.byteLength/d),_=Math.floor(n.byteLength/u);if(_*u!=n.byteLength)throw new Error("Scalar size does not match");const g=$a[Fa(u)],f=Math.floor((8*_-1)/g)+1;let p;p=Math.floor(u/(o.concurrency/f)),p>r&&(p=r),p<1024&&(p=1024);const h=[];for(let a=0;a<u;a+=p){c&&c.debug(`Multiexp start: ${s}: ${a}/${u}`);const e=Math.min(u-a,p),o=t.slice(a*d,(a+e)*d),r=n.slice(a*_,(a+e)*_);h.push(i(o,r,l,c,s).then((t=>(c&&c.debug(`Multiexp end: ${s}: ${a}/${u}`),t))))}const m=await Promise.all(h);let L=e.zero;for(let t=m.length-1;t>=0;t--)L=e.add(L,m[t]);return L}e.multiExp=async function(t,a,e,o){return await n(t,a,"jacobian",e,o)},e.multiExpAffine=async function(t,a,e,o){return await n(t,a,"affine",e,o)}}function Va(t,a){const e=t[a],o=t.Fr,i=e.tm;async function n(t,c,s,r,d,u){s=s||"affine",r=r||"affine";let _,g,f,p,h,m,L,b;"G1"==a?("affine"==s?(_=2*e.F.n8,p="g1m_batchToJacobian"):_=3*e.F.n8,g=3*e.F.n8,c&&(b="g1m_fftFinal"),L="g1m_fftJoin",m="g1m_fftMix","affine"==r?(f=2*e.F.n8,h="g1m_batchToAffine"):f=3*e.F.n8):"G2"==a?("affine"==s?(_=2*e.F.n8,p="g2m_batchToJacobian"):_=3*e.F.n8,g=3*e.F.n8,c&&(b="g2m_fftFinal"),L="g2m_fftJoin",m="g2m_fftMix","affine"==r?(f=2*e.F.n8,h="g2m_batchToAffine"):f=3*e.F.n8):"Fr"==a&&(_=e.n8,g=e.n8,f=e.n8,c&&(b="frm_fftFinal"),m="frm_fftMix",L="frm_fftJoin");let w=!1;Array.isArray(t)?(t=Ia(t,_),w=!0):t=t.slice(0,t.byteLength);const y=t.byteLength/_,A=Fa(y);if(1<<A!=y)throw new Error("fft must be multiple of 2");if(A==o.s+1){let a;return a=c?await async function(t,a,e,i,c){let s,r;s=t.slice(0,t.byteLength/2),r=t.slice(t.byteLength/2,t.byteLength);const d=[];d.push(n(s,!0,a,"jacobian",i,c)),d.push(n(r,!0,a,"jacobian",i,c)),[s,r]=await Promise.all(d);const u=await l(s,r,"fftJoinExtInv",o.one,o.shiftInv,"jacobian",e,i,c);let _;_=u[0].byteLength>1<<28?new va(2*u[0].byteLength):new Uint8Array(2*u[0].byteLength);return _.set(u[0]),_.set(u[1],u[0].byteLength),_}(t,s,r,d,u):await async function(t,a,e,i,c){let s,r;s=t.slice(0,t.byteLength/2),r=t.slice(t.byteLength/2,t.byteLength);const d=[];[s,r]=await l(s,r,"fftJoinExt",o.one,o.shift,a,"jacobian",i,c),d.push(n(s,!1,"jacobian",e,i,c)),d.push(n(r,!1,"jacobian",e,i,c));const u=await Promise.all(d);let _;_=u[0].byteLength>1<<28?new va(2*u[0].byteLength):new Uint8Array(2*u[0].byteLength);return _.set(u[0]),_.set(u[1],u[0].byteLength),_}(t,s,r,d,u),w?Ba(a,f):a}let C,x,F;c&&(C=o.inv(o.e(y))),function(t,a){const e=t.byteLength/a,o=Fa(e);if(e!=1<<o)throw new Error("Invalid number of pointers");for(let i=0;i<e;i++){const e=xa(i,o);if(i>e){const o=t.slice(i*a,(i+1)*a);t.set(t.slice(e*a,(e+1)*a),i*a),t.set(o,e*a)}}}(t,_);let I=Math.min(16384,y),B=y/I;for(;B<i.concurrency&&I>=16;)B*=2,I/=2;const E=Fa(I),v=[];for(let a=0;a<B;a++){d&&d.debug(`${u}: fft ${A} mix start: ${a}/${B}`);const e=[];e.push({cmd:"ALLOC",var:0,len:g*I});const o=t.slice(I*a*_,I*(a+1)*_);e.push({cmd:"SET",var:0,buff:o}),p&&e.push({cmd:"CALL",fnName:p,params:[{var:0},{val:I},{var:0}]});for(let t=1;t<=E;t++)e.push({cmd:"CALL",fnName:m,params:[{var:0},{val:I},{val:t}]});E==A?(b&&(e.push({cmd:"ALLOCSET",var:1,buff:C}),e.push({cmd:"CALL",fnName:b,params:[{var:0},{val:I},{var:1}]})),h&&e.push({cmd:"CALL",fnName:h,params:[{var:0},{val:I},{var:0}]}),e.push({cmd:"GET",out:0,var:0,len:I*f})):e.push({cmd:"GET",out:0,var:0,len:g*I}),v.push(i.queueAction(e).then((t=>(d&&d.debug(`${u}: fft ${A} mix end: ${a}/${B}`),t))))}F=await Promise.all(v);for(let t=0;t<B;t++)F[t]=F[t][0];for(let t=E+1;t<=A;t++){d&&d.debug(`${u}: fft  ${A}  join: ${t}/${A}`);const a=1<<A-t,e=B/a,n=[];for(let l=0;l<a;l++)for(let c=0;c<e/2;c++){const s=o.exp(o.w[t],c*I),r=o.w[t],_=l*e+c,p=l*e+c+e/2,m=[];m.push({cmd:"ALLOCSET",var:0,buff:F[_]}),m.push({cmd:"ALLOCSET",var:1,buff:F[p]}),m.push({cmd:"ALLOCSET",var:2,buff:s}),m.push({cmd:"ALLOCSET",var:3,buff:r}),m.push({cmd:"CALL",fnName:L,params:[{var:0},{var:1},{val:I},{var:2},{var:3}]}),t==A?(b&&(m.push({cmd:"ALLOCSET",var:4,buff:C}),m.push({cmd:"CALL",fnName:b,params:[{var:0},{val:I},{var:4}]}),m.push({cmd:"CALL",fnName:b,params:[{var:1},{val:I},{var:4}]})),h&&(m.push({cmd:"CALL",fnName:h,params:[{var:0},{val:I},{var:0}]}),m.push({cmd:"CALL",fnName:h,params:[{var:1},{val:I},{var:1}]})),m.push({cmd:"GET",out:0,var:0,len:I*f}),m.push({cmd:"GET",out:1,var:1,len:I*f})):(m.push({cmd:"GET",out:0,var:0,len:I*g}),m.push({cmd:"GET",out:1,var:1,len:I*g})),n.push(i.queueAction(m).then((o=>(d&&d.debug(`${u}: fft ${A} join  ${t}/${A}  ${l+1}/${a} ${c}/${e/2}`),o))))}const l=await Promise.all(n);for(let t=0;t<a;t++)for(let a=0;a<e/2;a++){const o=t*e+a,i=t*e+a+e/2,n=l.shift();F[o]=n[0],F[i]=n[1]}}if(x=t instanceof va?new va(y*f):new Uint8Array(y*f),c){x.set(F[0].slice((I-1)*f));let t=f;for(let a=B-1;a>0;a--)x.set(F[a],t),t+=I*f,delete F[a];x.set(F[0].slice(0,(I-1)*f),t),delete F[0]}else for(let t=0;t<B;t++)x.set(F[t],I*f*t),delete F[t];return w?Ba(x,f):x}async function l(t,n,l,c,s,r,d,u,_){let g,f,p,h,m,L;if("G1"==a)"affine"==r?(m=2*e.F.n8,f="g1m_batchToJacobian"):m=3*e.F.n8,L=3*e.F.n8,g="g1m_"+l,"affine"==d?(p="g1m_batchToAffine",h=2*e.F.n8):h=3*e.F.n8;else if("G2"==a)"affine"==r?(m=2*e.F.n8,f="g2m_batchToJacobian"):m=3*e.F.n8,g="g2m_"+l,L=3*e.F.n8,"affine"==d?(p="g2m_batchToAffine",h=2*e.F.n8):h=3*e.F.n8;else{if("Fr"!=a)throw new Error("Invalid group");m=o.n8,h=o.n8,L=o.n8,g="frm_"+l}if(t.byteLength!=n.byteLength)throw new Error("Invalid buffer size");const b=Math.floor(t.byteLength/m);if(b!=1<<Fa(b))throw new Error("Invalid number of points");let w=Math.floor(b/i.concurrency);w<16&&(w=16),w>65536&&(w=65536);const y=[];for(let a=0;a<b;a+=w){u&&u.debug(`${_}: fftJoinExt Start: ${a}/${b}`);const e=Math.min(b-a,w),l=o.mul(c,o.exp(s,a)),r=[],d=t.slice(a*m,(a+e)*m),A=n.slice(a*m,(a+e)*m);r.push({cmd:"ALLOC",var:0,len:L*e}),r.push({cmd:"SET",var:0,buff:d}),r.push({cmd:"ALLOC",var:1,len:L*e}),r.push({cmd:"SET",var:1,buff:A}),r.push({cmd:"ALLOCSET",var:2,buff:l}),r.push({cmd:"ALLOCSET",var:3,buff:s}),f&&(r.push({cmd:"CALL",fnName:f,params:[{var:0},{val:e},{var:0}]}),r.push({cmd:"CALL",fnName:f,params:[{var:1},{val:e},{var:1}]})),r.push({cmd:"CALL",fnName:g,params:[{var:0},{var:1},{val:e},{var:2},{var:3},{val:o.s}]}),p&&(r.push({cmd:"CALL",fnName:p,params:[{var:0},{val:e},{var:0}]}),r.push({cmd:"CALL",fnName:p,params:[{var:1},{val:e},{var:1}]})),r.push({cmd:"GET",out:0,var:0,len:e*h}),r.push({cmd:"GET",out:1,var:1,len:e*h}),y.push(i.queueAction(r).then((t=>(u&&u.debug(`${_}: fftJoinExt End: ${a}/${b}`),t))))}const A=await Promise.all(y);let C,x;b*h>1<<28?(C=new va(b*h),x=new va(b*h)):(C=new Uint8Array(b*h),x=new Uint8Array(b*h));let F=0;for(let t=0;t<A.length;t++)C.set(A[t][0],F),x.set(A[t][1],F),F+=A[t][0].byteLength;return[C,x]}e.fft=async function(t,a,e,o,i){return await n(t,!1,a,e,o,i)},e.ifft=async function(t,a,e,o,i){return await n(t,!0,a,e,o,i)},e.lagrangeEvaluations=async function(t,i,c,s,r){let d;if(i=i||"affine",c=c||"affine","G1"==a)d="affine"==i?2*e.F.n8:3*e.F.n8;else if("G2"==a)d="affine"==i?2*e.F.n8:3*e.F.n8;else{if("Fr"!=a)throw new Error("Invalid group");d=o.n8}const u=t.byteLength/d,_=Fa(u);if(2**_*d!=t.byteLength)throw s&&s.error("lagrangeEvaluations iinvalid input size"),new Error("lagrangeEvaluations invalid Input size");if(_<=o.s)return await e.ifft(t,i,c,s,r);if(_>o.s+1)throw s&&s.error("lagrangeEvaluations input too big"),new Error("lagrangeEvaluations input too big");let g=t.slice(0,t.byteLength/2),f=t.slice(t.byteLength/2,t.byteLength);const p=o.exp(o.shift,u/2),h=o.inv(o.sub(o.one,p));[g,f]=await l(g,f,"prepareLagrangeEvaluation",h,o.shiftInv,i,"jacobian",s,r+" prep");const m=[];let L;return m.push(n(g,!0,"jacobian",c,s,r+" t0")),m.push(n(f,!0,"jacobian",c,s,r+" t1")),[g,f]=await Promise.all(m),L=g.byteLength>1<<28?new va(2*g.byteLength):new Uint8Array(2*g.byteLength),L.set(g),L.set(f,g.byteLength),L},e.fftMix=async function(t){const n=3*e.F.n8;let l,c;if("G1"==a)l="g1m_fftMix",c="g1m_fftJoin";else if("G2"==a)l="g2m_fftMix",c="g2m_fftJoin";else{if("Fr"!=a)throw new Error("Invalid group");l="frm_fftMix",c="frm_fftJoin"}const s=Math.floor(t.byteLength/n),r=Fa(s);let d=1<<Fa(i.concurrency);s<=2*d&&(d=1);const u=s/d,_=Fa(u),g=[];for(let a=0;a<d;a++){const e=[],o=t.slice(a*u*n,(a+1)*u*n);e.push({cmd:"ALLOCSET",var:0,buff:o});for(let t=1;t<=_;t++)e.push({cmd:"CALL",fnName:l,params:[{var:0},{val:u},{val:t}]});e.push({cmd:"GET",out:0,var:0,len:u*n}),g.push(i.queueAction(e))}const f=await Promise.all(g),p=[];for(let t=0;t<f.length;t++)p[t]=f[t][0];for(let t=_+1;t<=r;t++){const a=1<<r-t,e=d/a,l=[];for(let s=0;s<a;s++)for(let a=0;a<e/2;a++){const r=o.exp(o.w[t],a*u),d=o.w[t],_=s*e+a,g=s*e+a+e/2,f=[];f.push({cmd:"ALLOCSET",var:0,buff:p[_]}),f.push({cmd:"ALLOCSET",var:1,buff:p[g]}),f.push({cmd:"ALLOCSET",var:2,buff:r}),f.push({cmd:"ALLOCSET",var:3,buff:d}),f.push({cmd:"CALL",fnName:c,params:[{var:0},{var:1},{val:u},{var:2},{var:3}]}),f.push({cmd:"GET",out:0,var:0,len:u*n}),f.push({cmd:"GET",out:1,var:1,len:u*n}),l.push(i.queueAction(f))}const s=await Promise.all(l);for(let t=0;t<a;t++)for(let a=0;a<e/2;a++){const o=t*e+a,i=t*e+a+e/2,n=s.shift();p[o]=n[0],p[i]=n[1]}}let h;h=t instanceof va?new va(s*n):new Uint8Array(s*n);let m=0;for(let t=0;t<d;t++)h.set(p[t],m),m+=p[t].byteLength;return h},e.fftJoin=async function(t,n,l,c){const s=3*e.F.n8;let r;if("G1"==a)r="g1m_fftJoin";else if("G2"==a)r="g2m_fftJoin";else{if("Fr"!=a)throw new Error("Invalid group");r="frm_fftJoin"}if(t.byteLength!=n.byteLength)throw new Error("Invalid buffer size");const d=Math.floor(t.byteLength/s);if(d!=1<<Fa(d))throw new Error("Invalid number of points");let u=1<<Fa(i.concurrency);d<=2*u&&(u=1);const _=d/u,g=[];for(let a=0;a<u;a++){const e=[],d=o.mul(l,o.exp(c,a*_)),u=t.slice(a*_*s,(a+1)*_*s),f=n.slice(a*_*s,(a+1)*_*s);e.push({cmd:"ALLOCSET",var:0,buff:u}),e.push({cmd:"ALLOCSET",var:1,buff:f}),e.push({cmd:"ALLOCSET",var:2,buff:d}),e.push({cmd:"ALLOCSET",var:3,buff:c}),e.push({cmd:"CALL",fnName:r,params:[{var:0},{var:1},{val:_},{var:2},{var:3}]}),e.push({cmd:"GET",out:0,var:0,len:_*s}),e.push({cmd:"GET",out:1,var:1,len:_*s}),g.push(i.queueAction(e))}const f=await Promise.all(g);let p,h;t instanceof va?(p=new va(d*s),h=new va(d*s)):(p=new Uint8Array(d*s),h=new Uint8Array(d*s));let m=0;for(let t=0;t<f.length;t++)p.set(f[t][0],m),h.set(f[t][1],m),m+=f[t][0].byteLength;return[p,h]},e.fftFinal=async function(t,o){const n=3*e.F.n8,l=2*e.F.n8;let c,s;if("G1"==a)c="g1m_fftFinal",s="g1m_batchToAffine";else{if("G2"!=a)throw new Error("Invalid group");c="g2m_fftFinal",s="g2m_batchToAffine"}const r=Math.floor(t.byteLength/n);if(r!=1<<Fa(r))throw new Error("Invalid number of points");const d=Math.floor(r/i.concurrency),u=[];for(let a=0;a<i.concurrency;a++){let e;if(e=a<i.concurrency-1?d:r-a*d,0==e)continue;const _=[],g=t.slice(a*d*n,(a*d+e)*n);_.push({cmd:"ALLOCSET",var:0,buff:g}),_.push({cmd:"ALLOCSET",var:1,buff:o}),_.push({cmd:"CALL",fnName:c,params:[{var:0},{val:e},{var:1}]}),_.push({cmd:"CALL",fnName:s,params:[{var:0},{val:e},{var:0}]}),_.push({cmd:"GET",out:0,var:0,len:e*l}),u.push(i.queueAction(_))}const _=await Promise.all(u);let g;g=t instanceof va?new va(r*l):new Uint8Array(r*l);let f=0;for(let t=_.length-1;t>=0;t--)g.set(_[t][0],f),f+=_[t][0].byteLength;return g}}async function Ka(t){const a=await async function(t,a){const e=new Na;e.memory=new WebAssembly.Memory({initial:Ua}),e.u8=new Uint8Array(e.memory.buffer),e.u32=new Uint32Array(e.memory.buffer);const o=await WebAssembly.compile(t.code);if(e.instance=await WebAssembly.instantiate(o,{env:{memory:e.memory}}),e.singleThread=a,e.initalPFree=e.u32[0],e.pq=t.pq,e.pr=t.pr,e.pG1gen=t.pG1gen,e.pG1zero=t.pG1zero,e.pG2gen=t.pG2gen,e.pG2zero=t.pG2zero,e.pOneT=t.pOneT,a)e.code=t.code,e.taskManager=za(),await e.taskManager([{cmd:"INIT",init:Ua,code:e.code.slice()}]),e.concurrency=1;else{let a;e.workers=[],e.pendingDeferreds=[],e.working=[],a="object"==typeof navigator&&navigator.hardwareConcurrency?navigator.hardwareConcurrency:Ta.cpus().length,0==a&&(a=2),a>64&&(a=64),e.concurrency=a;for(let t=0;t<a;t++)e.workers[t]=new Ma(Ra),e.workers[t].addEventListener("message",i(t)),e.working[t]=!1;const o=[];for(let a=0;a<e.workers.length;a++){const i=t.code.slice();o.push(e.postAction(a,[{cmd:"INIT",init:Ua,code:i}],[i.buffer]))}await Promise.all(o)}return e;function i(t){return function(a){let o;o=a&&a.data?a.data:a,e.working[t]=!1,e.pendingDeferreds[t].resolve(o),e.processWorks()}}}(t.wasm,t.singleThread),e={};return e.q=o(t.wasm.q.toString()),e.r=o(t.wasm.r.toString()),e.name=t.name,e.tm=a,e.prePSize=t.wasm.prePSize,e.preQSize=t.wasm.preQSize,e.Fr=new Pa(a,"frm",t.n8r,t.r),e.F1=new Pa(a,"f1m",t.n8q,t.q),e.F2=new Oa(a,"f2m",e.F1),e.G1=new Ga(a,"g1m",e.F1,t.wasm.pG1gen,t.wasm.pG1b,t.cofactorG1),e.G2=new Ga(a,"g2m",e.F2,t.wasm.pG2gen,t.wasm.pG2b,t.cofactorG2),e.F6=new qa(a,"f6m",e.F2),e.F12=new Oa(a,"ftm",e.F6),e.Gt=e.F12,Da(e,"G1"),Da(e,"G2"),Da(e,"Fr"),ja(e,"G1"),ja(e,"G2"),Va(e,"G1"),Va(e,"G2"),Va(e,"Fr"),function(t){const a=t.tm;t.pairing=function(e,o){a.startSyncOp();const i=a.allocBuff(t.G1.toJacobian(e)),n=a.allocBuff(t.G2.toJacobian(o)),l=a.alloc(t.Gt.n8);a.instance.exports[t.name+"_pairing"](i,n,l);const c=a.getBuff(l,t.Gt.n8);return a.endSyncOp(),c},t.pairingEq=async function(){let e,o;arguments.length%2==1?(e=arguments[arguments.length-1],o=(arguments.length-1)/2):(e=t.Gt.one,o=arguments.length/2);const i=[];for(let e=0;e<o;e++){const o=[],n=t.G1.toJacobian(arguments[2*e]);o.push({cmd:"ALLOCSET",var:0,buff:n}),o.push({cmd:"ALLOC",var:1,len:t.prePSize});const l=t.G2.toJacobian(arguments[2*e+1]);o.push({cmd:"ALLOCSET",var:2,buff:l}),o.push({cmd:"ALLOC",var:3,len:t.preQSize}),o.push({cmd:"ALLOC",var:4,len:t.Gt.n8}),o.push({cmd:"CALL",fnName:t.name+"_prepareG1",params:[{var:0},{var:1}]}),o.push({cmd:"CALL",fnName:t.name+"_prepareG2",params:[{var:2},{var:3}]}),o.push({cmd:"CALL",fnName:t.name+"_millerLoop",params:[{var:1},{var:3},{var:4}]}),o.push({cmd:"GET",out:0,var:4,len:t.Gt.n8}),i.push(a.queueAction(o))}const n=await Promise.all(i);a.startSyncOp();const l=a.alloc(t.Gt.n8);a.instance.exports.ftm_one(l);for(let t=0;t<n.length;t++){const e=a.allocBuff(n[t][0]);a.instance.exports.ftm_mul(l,e,l)}a.instance.exports[t.name+"_finalExponentiation"](l,l);const c=a.allocBuff(e),s=!!a.instance.exports.ftm_eq(l,c);return a.endSyncOp(),s},t.prepareG1=function(t){this.tm.startSyncOp();const a=this.tm.allocBuff(t),e=this.tm.alloc(this.prePSize);this.tm.instance.exports[this.name+"_prepareG1"](a,e);const o=this.tm.getBuff(e,this.prePSize);return this.tm.endSyncOp(),o},t.prepareG2=function(t){this.tm.startSyncOp();const a=this.tm.allocBuff(t),e=this.tm.alloc(this.preQSize);this.tm.instance.exports[this.name+"_prepareG2"](a,e);const o=this.tm.getBuff(e,this.preQSize);return this.tm.endSyncOp(),o},t.millerLoop=function(t,a){this.tm.startSyncOp();const e=this.tm.allocBuff(t),o=this.tm.allocBuff(a),i=this.tm.alloc(this.Gt.n8);this.tm.instance.exports[this.name+"_millerLoop"](e,o,i);const n=this.tm.getBuff(i,this.Gt.n8);return this.tm.endSyncOp(),n},t.finalExponentiation=function(t){this.tm.startSyncOp();const a=this.tm.allocBuff(t),e=this.tm.alloc(this.Gt.n8);this.tm.instance.exports[this.name+"_finalExponentiation"](a,e);const o=this.tm.getBuff(e,this.Gt.n8);return this.tm.endSyncOp(),o}}(e),e.array2buffer=function(t,a){const e=new Uint8Array(a*t.length);for(let o=0;o<t.length;o++)e.set(t[o],o*a);return e},e.buffer2array=function(t,a){const e=t.byteLength/a,o=new Array(e);for(let i=0;i<e;i++)o[i]=t.slice(i*a,i*a+a);return o},e}function Ha(t){return BigInt(t)}function Za(t){return t<0n}function Wa(t){return 0n===t}function Ya(t){const a=[],e=Ha(t);return a.push(Number(0xFFn&e)),a.push(Number(e>>8n&0xFFn)),a.push(Number(e>>16n&0xFFn)),a.push(Number(e>>24n&0xFFn)),a}function Ja(t){const a=function(t){for(var a=[],e=0;e<t.length;e++){var o=t.charCodeAt(e);o<128?a.push(o):o<2048?a.push(192|o>>6,128|63&o):o<55296||o>=57344?a.push(224|o>>12,128|o>>6&63,128|63&o):(e++,o=65536+((1023&o)<<10|1023&t.charCodeAt(e)),a.push(240|o>>18,128|o>>12&63,128|o>>6&63,128|63&o))}return a}(t);return[...oe(a.length),...a]}function Xa(t){const a=[];let e=Ha(t);if(Za(e))throw new Error("Number cannot be negative");for(;!Wa(e);)a.push(Number(0x7Fn&e)),e>>=7n;0==a.length&&a.push(0);for(let t=0;t<a.length-1;t++)a[t]=128|a[t];return a}function te(t){let a,e;const o=function(t){return Za(t)?t.toString(2).length-1:t.toString(2).length}(t);t<0?(e=!0,a=(1n<<BigInt(o))+t):(e=!1,a=Ha(t));const i=7-o%7,n=(1<<7-i)-1|128,l=Xa(a+((1n<<BigInt(i))-1n<<BigInt(o)));return e||(l[l.length-1]=l[l.length-1]&n),l}function ae(t){let a=Ha(t);if(a>0xFFFFFFFFn)throw new Error("Number too big");if(a>0x7FFFFFFFn&&(a-=0x100000000n),a<-2147483648n)throw new Error("Number too small");return te(a)}function ee(t){let a=Ha(t);if(a>0xFFFFFFFFFFFFFFFFn)throw new Error("Number too big");if(a>0x7FFFFFFFFFFFFFFFn&&(a-=0x10000000000000000n),a<-9223372036854775808n)throw new Error("Number too small");return te(a)}function oe(t){let a=Ha(t);if(a>0xFFFFFFFFn)throw new Error("Number too big");return Xa(a)}function ie(t){return Array.from(t,(function(t){return("0"+(255&t).toString(16)).slice(-2)})).join("")}class ne{constructor(t){this.func=t,this.functionName=t.functionName,this.module=t.module}setLocal(t,a){const e=this.func.localIdxByName[t];if(void 0===e)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${t} `);return[...a,33,...oe(e)]}teeLocal(t,a){const e=this.func.localIdxByName[t];if(void 0===e)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${t} `);return[...a,34,...oe(e)]}getLocal(t){const a=this.func.localIdxByName[t];if(void 0===a)throw new Error(`Local Variable not defined: Function: ${this.functionName} local: ${t} `);return[32,...oe(a)]}i64_load8_s(t,a,e){return[...t,48,void 0===e?0:e,...oe(a||0)]}i64_load8_u(t,a,e){return[...t,49,void 0===e?0:e,...oe(a||0)]}i64_load16_s(t,a,e){return[...t,50,void 0===e?1:e,...oe(a||0)]}i64_load16_u(t,a,e){return[...t,51,void 0===e?1:e,...oe(a||0)]}i64_load32_s(t,a,e){return[...t,52,void 0===e?2:e,...oe(a||0)]}i64_load32_u(t,a,e){return[...t,53,void 0===e?2:e,...oe(a||0)]}i64_load(t,a,e){return[...t,41,void 0===e?3:e,...oe(a||0)]}i64_store(t,a,e,o){let i,n,l;return Array.isArray(a)?(i=0,n=3,l=a):Array.isArray(e)?(i=a,n=3,l=e):Array.isArray(o)&&(i=a,n=e,l=o),[...t,...l,55,n,...oe(i)]}i64_store32(t,a,e,o){let i,n,l;return Array.isArray(a)?(i=0,n=2,l=a):Array.isArray(e)?(i=a,n=2,l=e):Array.isArray(o)&&(i=a,n=e,l=o),[...t,...l,62,n,...oe(i)]}i64_store16(t,a,e,o){let i,n,l;return Array.isArray(a)?(i=0,n=1,l=a):Array.isArray(e)?(i=a,n=1,l=e):Array.isArray(o)&&(i=a,n=e,l=o),[...t,...l,61,n,...oe(i)]}i64_store8(t,a,e,o){let i,n,l;return Array.isArray(a)?(i=0,n=0,l=a):Array.isArray(e)?(i=a,n=0,l=e):Array.isArray(o)&&(i=a,n=e,l=o),[...t,...l,60,n,...oe(i)]}i32_load8_s(t,a,e){return[...t,44,void 0===e?0:e,...oe(a||0)]}i32_load8_u(t,a,e){return[...t,45,void 0===e?0:e,...oe(a||0)]}i32_load16_s(t,a,e){return[...t,46,void 0===e?1:e,...oe(a||0)]}i32_load16_u(t,a,e){return[...t,47,void 0===e?1:e,...oe(a||0)]}i32_load(t,a,e){return[...t,40,void 0===e?2:e,...oe(a||0)]}i32_store(t,a,e,o){let i,n,l;return Array.isArray(a)?(i=0,n=2,l=a):Array.isArray(e)?(i=a,n=2,l=e):Array.isArray(o)&&(i=a,n=e,l=o),[...t,...l,54,n,...oe(i)]}i32_store16(t,a,e,o){let i,n,l;return Array.isArray(a)?(i=0,n=1,l=a):Array.isArray(e)?(i=a,n=1,l=e):Array.isArray(o)&&(i=a,n=e,l=o),[...t,...l,59,n,...oe(i)]}i32_store8(t,a,e,o){let i,n,l;return Array.isArray(a)?(i=0,n=0,l=a):Array.isArray(e)?(i=a,n=0,l=e):Array.isArray(o)&&(i=a,n=e,l=o),[...t,...l,58,n,...oe(i)]}call(t,...a){const e=this.module.functionIdxByName[t];if(void 0===e)throw new Error(`Function not defined: Function: ${t}`);return[...[].concat(...a),16,...oe(e)]}call_indirect(t,...a){return[...[].concat(...a),...t,17,0,0]}if(t,a,e){return e?[...t,4,64,...a,5,...e,11]:[...t,4,64,...a,11]}block(t){return[2,64,...t,11]}loop(...t){return[3,64,...[].concat(...t),11]}br_if(t,a){return[...a,13,...oe(t)]}br(t){return[12,...oe(t)]}ret(t){return[...t,15]}drop(t){return[...t,26]}i64_const(t){return[66,...ee(t)]}i32_const(t){return[65,...ae(t)]}i64_eqz(t){return[...t,80]}i64_eq(t,a){return[...t,...a,81]}i64_ne(t,a){return[...t,...a,82]}i64_lt_s(t,a){return[...t,...a,83]}i64_lt_u(t,a){return[...t,...a,84]}i64_gt_s(t,a){return[...t,...a,85]}i64_gt_u(t,a){return[...t,...a,86]}i64_le_s(t,a){return[...t,...a,87]}i64_le_u(t,a){return[...t,...a,88]}i64_ge_s(t,a){return[...t,...a,89]}i64_ge_u(t,a){return[...t,...a,90]}i64_add(t,a){return[...t,...a,124]}i64_sub(t,a){return[...t,...a,125]}i64_mul(t,a){return[...t,...a,126]}i64_div_s(t,a){return[...t,...a,127]}i64_div_u(t,a){return[...t,...a,128]}i64_rem_s(t,a){return[...t,...a,129]}i64_rem_u(t,a){return[...t,...a,130]}i64_and(t,a){return[...t,...a,131]}i64_or(t,a){return[...t,...a,132]}i64_xor(t,a){return[...t,...a,133]}i64_shl(t,a){return[...t,...a,134]}i64_shr_s(t,a){return[...t,...a,135]}i64_shr_u(t,a){return[...t,...a,136]}i64_extend_i32_s(t){return[...t,172]}i64_extend_i32_u(t){return[...t,173]}i64_clz(t){return[...t,121]}i64_ctz(t){return[...t,122]}i32_eqz(t){return[...t,69]}i32_eq(t,a){return[...t,...a,70]}i32_ne(t,a){return[...t,...a,71]}i32_lt_s(t,a){return[...t,...a,72]}i32_lt_u(t,a){return[...t,...a,73]}i32_gt_s(t,a){return[...t,...a,74]}i32_gt_u(t,a){return[...t,...a,75]}i32_le_s(t,a){return[...t,...a,76]}i32_le_u(t,a){return[...t,...a,77]}i32_ge_s(t,a){return[...t,...a,78]}i32_ge_u(t,a){return[...t,...a,79]}i32_add(t,a){return[...t,...a,106]}i32_sub(t,a){return[...t,...a,107]}i32_mul(t,a){return[...t,...a,108]}i32_div_s(t,a){return[...t,...a,109]}i32_div_u(t,a){return[...t,...a,110]}i32_rem_s(t,a){return[...t,...a,111]}i32_rem_u(t,a){return[...t,...a,112]}i32_and(t,a){return[...t,...a,113]}i32_or(t,a){return[...t,...a,114]}i32_xor(t,a){return[...t,...a,115]}i32_shl(t,a){return[...t,...a,116]}i32_shr_s(t,a){return[...t,...a,117]}i32_shr_u(t,a){return[...t,...a,118]}i32_rotl(t,a){return[...t,...a,119]}i32_rotr(t,a){return[...t,...a,120]}i32_wrap_i64(t){return[...t,167]}i32_clz(t){return[...t,103]}i32_ctz(t){return[...t,104]}unreachable(){return[0]}current_memory(){return[63,0]}comment(){return[]}}const le={i32:127,i64:126,f32:125,f64:124,anyfunc:112,func:96,emptyblock:64};class ce{constructor(t,a,e,o,i){if("import"==e)this.fnType="import",this.moduleName=o,this.fieldName=i;else{if("internal"!=e)throw new Error("Invalid function fnType: "+e);this.fnType="internal"}this.module=t,this.fnName=a,this.params=[],this.locals=[],this.localIdxByName={},this.code=[],this.returnType=null,this.nextLocal=0}addParam(t,a){if(this.localIdxByName[t])throw new Error(`param already exists. Function: ${this.fnName}, Param: ${t} `);const e=this.nextLocal++;this.localIdxByName[t]=e,this.params.push({type:a})}addLocal(t,a,e){const o=e||1;if(this.localIdxByName[t])throw new Error(`local already exists. Function: ${this.fnName}, Param: ${t} `);const i=this.nextLocal++;this.localIdxByName[t]=i,this.locals.push({type:a,length:o})}setReturnType(t){if(this.returnType)throw new Error(`returnType already defined. Function: ${this.fnName}`);this.returnType=t}getSignature(){return[96,...[...oe(this.params.length),...this.params.map((t=>le[t.type]))],...this.returnType?[1,le[this.returnType]]:[0]]}getBody(){const t=this.locals.map((t=>[...oe(t.length),le[t.type]])),a=[...oe(this.locals.length),...[].concat(...t),...this.code,11];return[...oe(a.length),...a]}addCode(...t){this.code.push(...[].concat(...t))}getCodeBuilder(){return new ne(this)}}class se{constructor(){this.functions=[],this.functionIdxByName={},this.nImportFunctions=0,this.nInternalFunctions=0,this.memory={pagesSize:1,moduleName:"env",fieldName:"memory"},this.free=8,this.datas=[],this.modules={},this.exports=[],this.functionsTable=[]}build(){return this._setSignatures(),new Uint8Array([...Ya(1836278016),...Ya(1),...this._buildType(),...this._buildImport(),...this._buildFunctionDeclarations(),...this._buildFunctionsTable(),...this._buildExports(),...this._buildElements(),...this._buildCode(),...this._buildData()])}addFunction(t){if(void 0!==this.functionIdxByName[t])throw new Error(`Function already defined: ${t}`);const a=this.functions.length;return this.functionIdxByName[t]=a,this.functions.push(new ce(this,t,"internal")),this.nInternalFunctions++,this.functions[a]}addIimportFunction(t,a,e){if(void 0!==this.functionIdxByName[t])throw new Error(`Function already defined: ${t}`);if(this.functions.length>0&&"internal"==this.functions[this.functions.length-1].type)throw new Error(`Import functions must be declared before internal: ${t}`);let o=e||t;const i=this.functions.length;return this.functionIdxByName[t]=i,this.functions.push(new ce(this,t,"import",a,o)),this.nImportFunctions++,this.functions[i]}setMemory(t,a,e){this.memory={pagesSize:t,moduleName:a||"env",fieldName:e||"memory"}}exportFunction(t,a){const e=a||t;if(void 0===this.functionIdxByName[t])throw new Error(`Function not defined: ${t}`);const o=this.functionIdxByName[t];e!=t&&(this.functionIdxByName[e]=o),this.exports.push({exportName:e,idx:o})}addFunctionToTable(t){const a=this.functionIdxByName[t];this.functionsTable.push(a)}addData(t,a){this.datas.push({offset:t,bytes:a})}alloc(t,a){let e,o;(Array.isArray(t)||ArrayBuffer.isView(t))&&void 0===a?(e=t.length,o=t):(e=t,o=a),e=1+(e-1>>3)<<3;const i=this.free;return this.free+=e,o&&this.addData(i,o),i}allocString(t){const a=(new globalThis.TextEncoder).encode(t);return this.alloc([...a,0])}_setSignatures(){this.signatures=[];const t={};if(this.functionsTable.length>0){const a=this.functions[this.functionsTable[0]].getSignature();t["s_"+ie(a)]=0,this.signatures.push(a)}for(let a=0;a<this.functions.length;a++){const e=this.functions[a].getSignature(),o="s_"+ie(e);void 0===t[o]&&(t[o]=this.signatures.length,this.signatures.push(e)),this.functions[a].signatureIdx=t[o]}}_buildSection(t,a){return[t,...oe(a.length),...a]}_buildType(){return this._buildSection(1,[...oe(this.signatures.length),...[].concat(...this.signatures)])}_buildImport(){const t=[];t.push([...Ja(this.memory.moduleName),...Ja(this.memory.fieldName),2,0,...oe(this.memory.pagesSize)]);for(let a=0;a<this.nImportFunctions;a++)t.push([...Ja(this.functions[a].moduleName),...Ja(this.functions[a].fieldName),0,...oe(this.functions[a].signatureIdx)]);return this._buildSection(2,oe(t.length).concat(...t))}_buildFunctionDeclarations(){const t=[];for(let a=this.nImportFunctions;a<this.nImportFunctions+this.nInternalFunctions;a++)t.push(...oe(this.functions[a].signatureIdx));return this._buildSection(3,[...oe(t.length),...t])}_buildFunctionsTable(){return 0==this.functionsTable.length?[]:this._buildSection(4,[...oe(1),112,0,...oe(this.functionsTable.length)])}_buildElements(){if(0==this.functionsTable.length)return[];const t=[];for(let a=0;a<this.functionsTable.length;a++)t.push(...oe(this.functionsTable[a]));return this._buildSection(9,[...oe(1),...oe(0),65,...ae(0),11,...oe(this.functionsTable.length),...t])}_buildExports(){const t=[];for(let a=0;a<this.exports.length;a++)t.push([...Ja(this.exports[a].exportName),0,...oe(this.exports[a].idx)]);return this._buildSection(7,oe(t.length).concat(...t))}_buildCode(){const t=[];for(let a=this.nImportFunctions;a<this.nImportFunctions+this.nInternalFunctions;a++)t.push(this.functions[a].getBody());return this._buildSection(10,oe(t.length).concat(...t))}_buildData(){const t=[];t.push([0,65,0,11,4,...Ya(this.free)]);for(let a=0;a<this.datas.length;a++)t.push([0,65,...ae(this.datas[a].offset),11,...oe(this.datas[a].bytes.length),...this.datas[a].bytes]);return this._buildSection(11,oe(t.length).concat(...t))}}globalThis.curve_bn128=null,globalThis.curve_bls12381=null;const re=o("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),de=o("21888242871839275222246405745257275088548364400416034343698204186575808495617");async function ue(t,a,e){let i;if(y(t,de))i=await async function(t,a){const e=new se;e.setMemory(25),wa(e),a&&a(e);const i={};if(i.code=e.build(),i.pq=e.modules.f1m.pq,i.pr=e.modules.frm.pq,i.pG1gen=e.modules.bn128.pG1gen,i.pG1zero=e.modules.bn128.pG1zero,i.pG1b=e.modules.bn128.pG1b,i.pG2gen=e.modules.bn128.pG2gen,i.pG2zero=e.modules.bn128.pG2zero,i.pG2b=e.modules.bn128.pG2b,i.pOneT=e.modules.bn128.pOneT,i.prePSize=e.modules.bn128.prePSize,i.preQSize=e.modules.bn128.preQSize,i.n8q=32,i.n8r=32,i.q=e.modules.bn128.q,i.r=e.modules.bn128.r,!t&&globalThis.curve_bn128)return globalThis.curve_bn128;const n={name:"bn128",wasm:i,q:o("21888242871839275222246405745257275088696311157297823662689037894645226208583"),r:o("21888242871839275222246405745257275088548364400416034343698204186575808495617"),n8q:32,n8r:32,cofactorG2:o("30644e72e131a029b85045b68181585e06ceecda572a2489345f2299c0f9fa8d",16),singleThread:!!t},l=await Ka(n);return l.terminate=async function(){n.singleThread||(globalThis.curve_bn128=null,await this.tm.terminate())},t||(globalThis.curve_bn128=l),l}(a,e);else{if(!y(t,re))throw new Error(`Curve not supported: ${v(t)}`);i=await async function(t,a){const e=new se;e.setMemory(25),ya(e),a&&a(e);const i={};if(i.code=e.build(),i.pq=e.modules.f1m.pq,i.pr=e.modules.frm.pq,i.pG1gen=e.modules.bls12381.pG1gen,i.pG1zero=e.modules.bls12381.pG1zero,i.pG1b=e.modules.bls12381.pG1b,i.pG2gen=e.modules.bls12381.pG2gen,i.pG2zero=e.modules.bls12381.pG2zero,i.pG2b=e.modules.bls12381.pG2b,i.pOneT=e.modules.bls12381.pOneT,i.prePSize=e.modules.bls12381.prePSize,i.preQSize=e.modules.bls12381.preQSize,i.n8q=48,i.n8r=32,i.q=e.modules.bls12381.q,i.r=e.modules.bls12381.r,!t&&globalThis.curve_bls12381)return globalThis.curve_bls12381;const n={name:"bls12381",wasm:i,q:o("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),r:o("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),n8q:48,n8r:32,cofactorG1:o("0x396c8c005555e1568c00aaab0000aaab",16),cofactorG2:o("0x5d543a95414e7f1091d50792876a202cd91de4547085abaa68a205b2e5a7ddfa628f1cb4d9e82ef21537e293a6691ae1616ec6e786f0c70cf1c38e31c7238e5",16),singleThread:!!t},l=await Ka(n);return l.terminate=async function(){n.singleThread||(globalThis.curve_bls12381=null,await this.tm.terminate())},t||(globalThis.curve_bls12381=l),l}(a,e)}return i}o("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),o("21888242871839275222246405745257275088696311157297823662689037894645226208583");const _e=q;var ge={};async function fe(t,a,e,o){if(e=e||262144,"number"!=typeof a&&["w+","wx+","r","ax+","a+"].indexOf(a)<0)throw new Error("Invalid open option");const i=await ge.promises.open(t,a),n=await i.stat();return new pe(i,n,e,o,t)}class pe{constructor(t,a,e,o,i){for(this.fileName=i,this.fd=t,this.pos=0,this.pageSize=o||256;this.pageSize<a.blksize;)this.pageSize*=2;this.totalSize=a.size,this.totalPages=Math.floor((a.size-1)/this.pageSize)+1,this.maxPagesLoaded=Math.floor(e/this.pageSize)+1,this.pages={},this.pendingLoads=[],this.writing=!1,this.reading=!1,this.avBuffs=[],this.history={}}_loadPage(t){const a=this,e=new Promise(((e,o)=>{a.pendingLoads.push({page:t,resolve:e,reject:o})}));return a.__statusPage("After Load request: ",t),e}__statusPage(t,a){const e=[],o=this;if(!o.logHistory)return;e.push("=="+t+" "+a);let i="";for(let t=0;t<o.pendingLoads.length;t++)o.pendingLoads[t].page==a&&(i=i+" "+t);if(i&&e.push("Pending loads:"+i),void 0!==o.pages[a]){const t=o.pages[a];e.push("Loaded"),e.push("pendingOps: "+t.pendingOps),t.loading&&e.push("loading: "+t.loading),t.writing&&e.push("writing"),t.dirty&&e.push("dirty")}e.push("=="),o.history[a]||(o.history[a]=[]),o.history[a].push(e)}__printHistory(t){const a=this;a.history[t]||console.log("Empty History ",t),console.log("History "+t);for(let e=0;e<a.history[t].length;e++)for(let o=0;o<a.history[t][e].length;o++)console.log("-> "+a.history[t][e][o])}_triggerLoad(){const t=this;if(t.reading)return;if(0==t.pendingLoads.length)return;const a=Object.keys(t.pages),e=[];for(let o=0;o<a.length;o++){const i=t.pages[parseInt(a[o])];0!=i.dirty||0!=i.pendingOps||i.writing||i.loading||e.push(parseInt(a[o]))}let o=t.maxPagesLoaded-a.length;const i=[];for(;t.pendingLoads.length>0&&(void 0!==t.pages[t.pendingLoads[0].page]||o>0||e.length>0);){const a=t.pendingLoads.shift();if(void 0!==t.pages[a.page]){t.pages[a.page].pendingOps++;const o=e.indexOf(a.page);o>=0&&e.splice(o,1),t.pages[a.page].loading?t.pages[a.page].loading.push(a):a.resolve(),t.__statusPage("After Load (cached): ",a.page)}else{if(o)o--;else{const a=e.shift();t.__statusPage("Before Unload: ",a),t.avBuffs.unshift(t.pages[a]),delete t.pages[a],t.__statusPage("After Unload: ",a)}a.page>=t.totalPages?(t.pages[a.page]=n(),a.resolve(),t.__statusPage("After Load (new): ",a.page)):(t.reading=!0,t.pages[a.page]=n(),t.pages[a.page].loading=[a],i.push(t.fd.read(t.pages[a.page].buff,0,t.pageSize,a.page*t.pageSize).then((e=>{t.pages[a.page].size=e.bytesRead;const o=t.pages[a.page].loading;delete t.pages[a.page].loading;for(let t=0;t<o.length;t++)o[t].resolve();return t.__statusPage("After Load (loaded): ",a.page),e}),(t=>{a.reject(t)}))),t.__statusPage("After Load (loading): ",a.page))}}function n(){if(t.avBuffs.length>0){const a=t.avBuffs.shift();return a.dirty=!1,a.pendingOps=1,a.size=0,a}return{dirty:!1,buff:new Uint8Array(t.pageSize),pendingOps:1,size:0}}Promise.all(i).then((()=>{t.reading=!1,t.pendingLoads.length>0&&setImmediate(t._triggerLoad.bind(t)),t._tryClose()}))}_triggerWrite(){const t=this;if(t.writing)return;const a=Object.keys(t.pages),e=[];for(let o=0;o<a.length;o++){const i=t.pages[parseInt(a[o])];i.dirty&&(i.dirty=!1,i.writing=!0,t.writing=!0,e.push(t.fd.write(i.buff,0,i.size,parseInt(a[o])*t.pageSize).then((()=>{i.writing=!1}),(a=>{console.log("ERROR Writing: "+a),t.error=a,t._tryClose()}))))}t.writing&&Promise.all(e).then((()=>{t.writing=!1,setImmediate(t._triggerWrite.bind(t)),t._tryClose(),t.pendingLoads.length>0&&setImmediate(t._triggerLoad.bind(t))}))}_getDirtyPage(){for(let t in this.pages)if(this.pages[t].dirty)return t;return-1}async write(t,a){if(0==t.byteLength)return;const e=this;if(void 0===a&&(a=e.pos),e.pos=a+t.byteLength,e.totalSize<a+t.byteLength&&(e.totalSize=a+t.byteLength),e.pendingClose)throw new Error("Writing a closing file");const o=Math.floor(a/e.pageSize),i=Math.floor((a+t.byteLength-1)/e.pageSize),n=[];for(let t=o;t<=i;t++)n.push(e._loadPage(t));e._triggerLoad();let l=o,c=a%e.pageSize,s=t.byteLength;for(;s>0;){await n[l-o];const a=c+s>e.pageSize?e.pageSize-c:s,i=t.slice(t.byteLength-s,t.byteLength-s+a);new Uint8Array(e.pages[l].buff.buffer,c,a).set(i),e.pages[l].dirty=!0,e.pages[l].pendingOps--,e.pages[l].size=Math.max(c+a,e.pages[l].size),l>=e.totalPages&&(e.totalPages=l+1),s-=a,l++,c=0,e.writing||setImmediate(e._triggerWrite.bind(e))}}async read(t,a){let e=new Uint8Array(t);return await this.readToBuffer(e,0,t,a),e}async readToBuffer(t,a,e,o){if(0==e)return;const i=this;if(e>i.pageSize*i.maxPagesLoaded*.8){const t=Math.floor(1.1*e);this.maxPagesLoaded=Math.floor(t/i.pageSize)+1}if(void 0===o&&(o=i.pos),i.pos=o+e,i.pendingClose)throw new Error("Reading a closing file");const n=Math.floor(o/i.pageSize),l=Math.floor((o+e-1)/i.pageSize),c=[];for(let t=n;t<=l;t++)c.push(i._loadPage(t));i._triggerLoad();let s=n,r=o%i.pageSize,d=o+e>i.totalSize?e-(o+e-i.totalSize):e;for(;d>0;){await c[s-n],i.__statusPage("After Await (read): ",s);const o=r+d>i.pageSize?i.pageSize-r:d,l=new Uint8Array(i.pages[s].buff.buffer,i.pages[s].buff.byteOffset+r,o);t.set(l,a+e-d),i.pages[s].pendingOps--,i.__statusPage("After Op done: ",s),d-=o,s++,r=0,i.pendingLoads.length>0&&setImmediate(i._triggerLoad.bind(i))}this.pos=o+e}_tryClose(){const t=this;if(!t.pendingClose)return;t.error&&t.pendingCloseReject(t.error);t._getDirtyPage()>=0||t.writing||t.reading||t.pendingLoads.length>0||t.pendingClose()}close(){const t=this;if(t.pendingClose)throw new Error("Closing the file twice");return new Promise(((a,e)=>{t.pendingClose=a,t.pendingCloseReject=e,t._tryClose()})).then((()=>{t.fd.close()}),(a=>{throw t.fd.close(),a}))}async discard(){await this.close(),await ge.promises.unlink(this.fileName)}async writeULE32(t,a){const e=new Uint8Array(4);new DataView(e.buffer).setUint32(0,t,!0),await this.write(e,a)}async writeUBE32(t,a){const e=new Uint8Array(4);new DataView(e.buffer).setUint32(0,t,!1),await this.write(e,a)}async writeULE64(t,a){const e=new Uint8Array(8),o=new DataView(e.buffer);o.setUint32(0,4294967295&t,!0),o.setUint32(4,Math.floor(t/4294967296),!0),await this.write(e,a)}async readULE32(t){const a=await this.read(4,t);return new Uint32Array(a.buffer)[0]}async readUBE32(t){const a=await this.read(4,t);return new DataView(a.buffer).getUint32(0,!1)}async readULE64(t){const a=await this.read(8,t),e=new Uint32Array(a.buffer);return 4294967296*e[1]+e[0]}async readString(t){const a=this;if(a.pendingClose)throw new Error("Reading a closing file");let e=void 0===t?a.pos:t,o=Math.floor(e/a.pageSize),i=!1,n="";for(;!i;){let t=a._loadPage(o);a._triggerLoad(),await t,a.__statusPage("After Await (read): ",o);let l=e%a.pageSize;const c=new Uint8Array(a.pages[o].buff.buffer,a.pages[o].buff.byteOffset+l,a.pageSize-l);let s=c.findIndex((t=>0===t));i=-1!==s,i?(n+=(new TextDecoder).decode(c.slice(0,s)),a.pos=o*this.pageSize+l+s+1):(n+=(new TextDecoder).decode(c),a.pos=o*this.pageSize+l+c.length),a.pages[o].pendingOps--,a.__statusPage("After Op done: ",o),e=a.pos,o++,a.pendingLoads.length>0&&setImmediate(a._triggerLoad.bind(a))}return n}}const he=new Uint8Array(4),me=new DataView(he.buffer),Le=new Uint8Array(8),be=new DataView(Le.buffer);class we{constructor(){this.pageSize=16384}_resizeIfNeeded(t){if(t>this.allocSize){const a=Math.max(this.allocSize+(1<<20),Math.floor(1.1*this.allocSize),t),e=new Uint8Array(a);e.set(this.o.data),this.o.data=e,this.allocSize=a}}async write(t,a){if(void 0===a&&(a=this.pos),this.readOnly)throw new Error("Writing a read only file");this._resizeIfNeeded(a+t.byteLength),this.o.data.set(t.slice(),a),a+t.byteLength>this.totalSize&&(this.totalSize=a+t.byteLength),this.pos=a+t.byteLength}async readToBuffer(t,a,e,o){if(void 0===o&&(o=this.pos),this.readOnly&&o+e>this.totalSize)throw new Error("Reading out of bounds");this._resizeIfNeeded(o+e);const i=new Uint8Array(this.o.data.buffer,this.o.data.byteOffset+o,e);t.set(i,a),this.pos=o+e}async read(t,a){const e=new Uint8Array(t);return await this.readToBuffer(e,0,t,a),e}close(){this.o.data.byteLength!=this.totalSize&&(this.o.data=this.o.data.slice(0,this.totalSize))}async discard(){}async writeULE32(t,a){me.setUint32(0,t,!0),await this.write(he,a)}async writeUBE32(t,a){me.setUint32(0,t,!1),await this.write(he,a)}async writeULE64(t,a){be.setUint32(0,4294967295&t,!0),be.setUint32(4,Math.floor(t/4294967296),!0),await this.write(Le,a)}async readULE32(t){const a=await this.read(4,t);return new Uint32Array(a.buffer)[0]}async readUBE32(t){const a=await this.read(4,t);return new DataView(a.buffer).getUint32(0,!1)}async readULE64(t){const a=await this.read(8,t),e=new Uint32Array(a.buffer);return 4294967296*e[1]+e[0]}async readString(t){const a=this;let e=void 0===t?a.pos:t;if(e>this.totalSize){if(this.readOnly)throw new Error("Reading out of bounds");this._resizeIfNeeded(t)}const o=new Uint8Array(a.o.data.buffer,e,this.totalSize-e);let i=o.findIndex((t=>0===t)),n="";return-1!==i?(n=(new TextDecoder).decode(o.slice(0,i)),a.pos=e+i+1):a.pos=e,n}}const ye=1<<22;const Ae=new Uint8Array(4),Ce=new DataView(Ae.buffer),xe=new Uint8Array(8),Fe=new DataView(xe.buffer);class Ie{constructor(){this.pageSize=16384}_resizeIfNeeded(t){if(t<=this.totalSize)return;if(this.readOnly)throw new Error("Reading out of file bounds");const a=Math.floor((t-1)/ye)+1;for(let e=Math.max(this.o.data.length-1,0);e<a;e++){const o=new Uint8Array(e<a-1?ye:t-(a-1)*ye);e==this.o.data.length-1&&o.set(this.o.data[e]),this.o.data[e]=o}this.totalSize=t}async write(t,a){const e=this;if(void 0===a&&(a=e.pos),this.readOnly)throw new Error("Writing a read only file");this._resizeIfNeeded(a+t.byteLength);let o=Math.floor(a/ye),i=a%ye,n=t.byteLength;for(;n>0;){const a=i+n>ye?ye-i:n,l=t.slice(t.byteLength-n,t.byteLength-n+a);new Uint8Array(e.o.data[o].buffer,i,a).set(l),n-=a,o++,i=0}this.pos=a+t.byteLength}async readToBuffer(t,a,e,o){const i=this;if(void 0===o&&(o=i.pos),this.readOnly&&o+e>this.totalSize)throw new Error("Reading out of bounds");this._resizeIfNeeded(o+e);let n=Math.floor(o/ye),l=o%ye,c=e;for(;c>0;){const o=l+c>ye?ye-l:c,s=new Uint8Array(i.o.data[n].buffer,l,o);t.set(s,a+e-c),c-=o,n++,l=0}this.pos=o+e}async read(t,a){const e=new Uint8Array(t);return await this.readToBuffer(e,0,t,a),e}close(){}async discard(){}async writeULE32(t,a){Ce.setUint32(0,t,!0),await this.write(Ae,a)}async writeUBE32(t,a){Ce.setUint32(0,t,!1),await this.write(Ae,a)}async writeULE64(t,a){Fe.setUint32(0,4294967295&t,!0),Fe.setUint32(4,Math.floor(t/4294967296),!0),await this.write(xe,a)}async readULE32(t){const a=await this.read(4,t);return new Uint32Array(a.buffer)[0]}async readUBE32(t){const a=await this.read(4,t);return new DataView(a.buffer).getUint32(0,!1)}async readULE64(t){const a=await this.read(8,t),e=new Uint32Array(a.buffer);return 4294967296*e[1]+e[0]}async readString(t){const a=this;let e=void 0===t?a.pos:t;if(e>this.totalSize){if(this.readOnly)throw new Error("Reading out of bounds");this._resizeIfNeeded(t)}let o=!1,i="";for(;!o;){let t=Math.floor(e/ye),n=e%ye;if(void 0===a.o.data[t])throw new Error("ERROR");let l=Math.min(2048,a.o.data[t].length-n);const c=new Uint8Array(a.o.data[t].buffer,n,l);let s=c.findIndex((t=>0===t));o=-1!==s,o?(i+=(new TextDecoder).decode(c.slice(0,s)),a.pos=t*ye+n+s+1):(i+=(new TextDecoder).decode(c),a.pos=t*ye+n+c.length),e=a.pos}return i}}const Be=512,Ee=64,ve=2,Se=0,Pe=65536,Oe=8192;async function qe(t,a,e){if("string"==typeof t&&(t={type:"file",fileName:t,cacheSize:a||Pe,pageSize:e||Oe}),"file"==t.type)return await fe(t.fileName,Be|Ee|ve,t.cacheSize,t.pageSize);if("mem"==t.type)return function(t){const a=t.initialSize||1<<20,e=new we;return e.o=t,e.o.data=new Uint8Array(a),e.allocSize=a,e.totalSize=0,e.readOnly=!1,e.pos=0,e}(t);if("bigMem"==t.type)return function(t){const a=t.initialSize||0,e=new Ie;e.o=t;const o=a?Math.floor((a-1)/ye)+1:0;e.o.data=[];for(let t=0;t<o-1;t++)e.o.data.push(new Uint8Array(ye));return o&&e.o.data.push(new Uint8Array(a-ye*(o-1))),e.totalSize=0,e.readOnly=!1,e.pos=0,e}(t);throw new Error("Invalid FastFile type: "+t.type)}async function Ge(t,a,e){if(t instanceof Uint8Array&&(t={type:"mem",data:t}),"string"==typeof t){t={type:"mem",data:await fetch(t).then((function(t){return t.arrayBuffer()})).then((function(t){return new Uint8Array(t)}))}}if("file"==t.type)return await fe(t.fileName,Se,t.cacheSize,t.pageSize);if("mem"==t.type)return await function(t){const a=new we;return a.o=t,a.allocSize=t.data.byteLength,a.totalSize=t.data.byteLength,a.readOnly=!0,a.pos=0,a}(t);if("bigMem"==t.type)return await function(t){const a=new Ie;return a.o=t,a.totalSize=(t.data.length-1)*ye+t.data[t.data.length-1].byteLength,a.readOnly=!0,a.pos=0,a}(t);throw new Error("Invalid FastFile type: "+t.type)}async function ze(t,a,e,o,i){const n=await Ge(t),l=await n.read(4);let c="";for(let t=0;t<4;t++)c+=String.fromCharCode(l[t]);if(c!=a)throw new Error(t+": Invalid File format");if(await n.readULE32()>e)throw new Error("Version not supported");const s=await n.readULE32();let r=[];for(let t=0;t<s;t++){let t=await n.readULE32(),a=await n.readULE64();void 0===r[t]&&(r[t]=[]),r[t].push({p:n.pos,size:a}),n.pos+=a}return{fd:n,sections:r}}async function Te(t,a,e,o,i,n){const l=await qe(t,i,n),c=new Uint8Array(4);for(let t=0;t<4;t++)c[t]=a.charCodeAt(t);return await l.write(c,0),await l.writeULE32(e),await l.writeULE32(o),l}async function Me(t,a){if(void 0!==t.writingSection)throw new Error("Already writing a section");await t.writeULE32(a),t.writingSection={pSectionSize:t.pos},await t.writeULE64(0)}async function Ue(t){if(void 0===t.writingSection)throw new Error("Not writing a section");const a=t.pos-t.writingSection.pSectionSize-8,e=t.pos;t.pos=t.writingSection.pSectionSize,await t.writeULE64(a),t.pos=e,delete t.writingSection}async function Qe(t,a,e){if(void 0!==t.readingSection)throw new Error("Already reading a section");if(!a[e])throw new Error(t.fileName+": Missing section "+e);if(a[e].length>1)throw new Error(t.fileName+": Section Duplicated "+e);t.pos=a[e][0].p,t.readingSection=a[e][0]}async function ke(t,a){if(void 0===t.readingSection)throw new Error("Not reading a section");if(!a&&t.pos-t.readingSection.p!=t.readingSection.size)throw new Error("Invalid section size reading");delete t.readingSection}async function Re(t,a,e,o){const i=new Uint8Array(e);_e.toRprLE(i,0,a,e),await t.write(i,o)}async function Ne(t,a,e){const o=await t.read(a,e);return _e.fromRprLE(o,0,a)}async function De(t,a,e,o,i){void 0===i&&(i=a[o][0].size);const n=t.pageSize;await Qe(t,a,o),await Me(e,o);for(let a=0;a<i;a+=n){const o=Math.min(i-a,n),l=await t.read(o);await e.write(l)}await Ue(e),await ke(t,i!=a[o][0].size)}async function $e(t,a,e,o,i){if((o=void 0===o?0:o)+(i=void 0===i?a[e][0].size-o:i)>a[e][0].size)throw new Error("Reading out of the range of the section");let n;return n=i<1<<30?new Uint8Array(i):new va(i),await t.readToBuffer(n,0,i,a[e][0].p+o),n}async function je(t,a,e,o,i){const n=16*t.pageSize;if(await Qe(t,a,i),await Qe(e,o,i),a[i][0].size!=o[i][0].size)return!1;const l=a[i][0].size;for(let a=0;a<l;a+=n){const o=Math.min(l-a,n),i=await t.read(o),c=await e.read(o);for(let t=0;t<o;t++)if(i[t]!=c[t])return!1}return await ke(t),await ke(e),!0}const Ve=[0,1,2,2,3,3,3,3,4,4,4,4,4,4,4,4];function Ke(t,a){return a&&10!=a?16==a?"0x"==t.slice(0,2)?BigInt(t):BigInt("0x"+t):void 0:BigInt(t)}const He=Ke;function Ze(t){const a=t.toString(16);return 4*(a.length-1)+Ve[parseInt(a[0],16)]}function We(t){return BigInt(t)<BigInt(0)}function Ye(t){return!t}function Je(t,a){return BigInt(t)<<BigInt(a)}function Xe(t,a){return BigInt(t)>>BigInt(a)}const to=Je,ao=Xe;function eo(t){return(BigInt(t)&BigInt(1))==BigInt(1)}function oo(t){let a=BigInt(t);const e=[];for(;a;)a&BigInt(1)?e.push(1):e.push(0),a>>=BigInt(1);return e}function io(t){if(t>BigInt(Number.MAX_SAFE_INTEGER))throw new Error("Number too big");return Number(t)}function no(t,a){return BigInt(t)+BigInt(a)}function lo(t,a){return BigInt(t)-BigInt(a)}function co(t){return-BigInt(t)}function so(t,a){return BigInt(t)*BigInt(a)}function ro(t,a){return BigInt(t)**BigInt(a)}function uo(t,a){return BigInt(t)/BigInt(a)}function _o(t,a){return BigInt(t)%BigInt(a)}function go(t,a){return BigInt(t)==BigInt(a)}function fo(t,a){return BigInt(t)>BigInt(a)}function po(t,a){return BigInt(t)>=BigInt(a)}function ho(t,a){return BigInt(t)&BigInt(a)}function mo(t,a,e,o){const i="0000000"+e.toString(16),n=new Uint32Array(t.buffer,t.byteOffset+a,o/4),l=1+(4*(i.length-7)-1>>5);for(let t=0;t<l;t++)n[t]=parseInt(i.substring(i.length-8*t-8,i.length-8*t),16);for(let t=l;t<n.length;t++)n[t]=0;for(let a=4*n.length;a<o;a++)t[a]=io(ho(Xe(e,8*a),255))}function Lo(t,a,e,o){const i="0000000"+e.toString(16),n=new DataView(t.buffer,t.byteOffset+a,o),l=1+(4*(i.length-7)-1>>5);for(let t=0;t<l;t++)n.setUint32(o-4*t-4,parseInt(i.substring(i.length-8*t-8,i.length-8*t),16),!1);for(let t=0;t<o/4-l;t++)n[t]=0}function bo(t,a,e){e=e||t.byteLength,a=a||0;const o=new Uint32Array(t.buffer,t.byteOffset+a,e/4),i=new Array(e/4);return o.forEach(((t,a)=>i[i.length-a-1]=t.toString(16).padStart(8,"0"))),Ke(i.join(""),16)}function wo(t,a,e){e=e||t.byteLength,a=a||0;const o=new DataView(t.buffer,t.byteOffset+a,e),i=new Array(e/4);for(let t=0;t<e/4;t++)i[t]=o.getUint32(4*t,!1).toString(16).padStart(8,"0");return Ke(i.join(""),16)}function yo(t,a){return t.toString(a)}function Ao(t){const a=new Uint8Array(Math.floor((Ze(t)-1)/8)+1);return mo(a,0,t,a.byteLength),a}const Co=He(0),xo=He(1);var Fo=Object.freeze({__proto__:null,fromString:Ke,e:He,fromArray:function(t,a){let e=BigInt(0);a=BigInt(a);for(let o=0;o<t.length;o++)e=e*a+BigInt(t[o]);return e},bitLength:Ze,isNegative:We,isZero:Ye,shiftLeft:Je,shiftRight:Xe,shl:to,shr:ao,isOdd:eo,naf:function(t){let a=BigInt(t);const e=[];for(;a;){if(a&BigInt(1)){const t=2-Number(a%BigInt(4));e.push(t),a-=BigInt(t)}else e.push(0);a>>=BigInt(1)}return e},bits:oo,toNumber:io,toArray:function(t,a){const e=[];let o=BigInt(t);for(a=BigInt(a);o;)e.unshift(Number(o%a)),o/=a;return e},add:no,sub:lo,neg:co,mul:so,square:function(t){return BigInt(t)*BigInt(t)},pow:ro,exp:function(t,a){return BigInt(t)**BigInt(a)},abs:function(t){return BigInt(t)>=0?BigInt(t):-BigInt(t)},div:uo,mod:_o,eq:go,neq:function(t,a){return BigInt(t)!=BigInt(a)},lt:function(t,a){return BigInt(t)<BigInt(a)},gt:fo,leq:function(t,a){return BigInt(t)<=BigInt(a)},geq:po,band:ho,bor:function(t,a){return BigInt(t)|BigInt(a)},bxor:function(t,a){return BigInt(t)^BigInt(a)},land:function(t,a){return BigInt(t)&&BigInt(a)},lor:function(t,a){return BigInt(t)||BigInt(a)},lnot:function(t){return!BigInt(t)},toRprLE:mo,toRprBE:Lo,fromRprLE:bo,fromRprBE:wo,toString:yo,toLEBuff:Ao,zero:Co,one:xo});function Io(t,a,e){if(Ye(e))return t.one;const o=oo(e);if(0==o.length)return t.one;let i=a;for(let e=o.length-2;e>=0;e--)i=t.square(i),o[e]&&(i=t.mul(i,a));return i}function Bo(t){if(t.m%2==1)if(go(_o(t.p,4),1))if(go(_o(t.p,8),1))if(go(_o(t.p,16),1))!function(t){t.sqrt_q=ro(t.p,t.m),t.sqrt_s=0,t.sqrt_t=lo(t.sqrt_q,1);for(;!eo(t.sqrt_t);)t.sqrt_s=t.sqrt_s+1,t.sqrt_t=uo(t.sqrt_t,2);let a=t.one;for(;t.eq(a,t.one);){const e=t.random();t.sqrt_z=t.pow(e,t.sqrt_t),a=t.pow(t.sqrt_z,2**(t.sqrt_s-1))}t.sqrt_tm1d2=uo(lo(t.sqrt_t,1),2),t.sqrt=function(t){const a=this;if(a.isZero(t))return a.zero;let e=a.pow(t,a.sqrt_tm1d2);const o=a.pow(a.mul(a.square(e),t),2**(a.sqrt_s-1));if(a.eq(o,a.negone))return null;let i=a.sqrt_s,n=a.mul(t,e),l=a.mul(n,e),c=a.sqrt_z;for(;!a.eq(l,a.one);){let t=a.square(l),o=1;for(;!a.eq(t,a.one);)t=a.square(t),o++;e=c;for(let t=0;t<i-o-1;t++)e=a.square(e);c=a.square(e),l=a.mul(l,c),n=a.mul(n,e),i=o}return a.geq(n,a.zero)?n:a.neg(n)}}(t);else{if(!go(_o(t.p,16),9))throw new Error("Field withot sqrt");!function(t){t.sqrt=function(){throw new Error("Sqrt alg 4 not implemented")}}(t)}else{if(!go(_o(t.p,8),5))throw new Error("Field withot sqrt");!function(t){t.sqrt=function(){throw new Error("Sqrt alg 3 not implemented")}}(t)}else go(_o(t.p,4),3)&&function(t){t.sqrt_q=ro(t.p,t.m),t.sqrt_e1=uo(lo(t.sqrt_q,3),4),t.sqrt=function(a){if(this.isZero(a))return this.zero;const e=this.pow(a,this.sqrt_e1),o=this.mul(this.square(e),a);if(this.eq(o,this.negone))return null;const i=this.mul(e,a);return t.geq(i,t.zero)?i:t.neg(i)}}(t);else{const a=_o(ro(t.p,t.m/2),4);1==a?function(t){t.sqrt=function(){throw new Error("Sqrt alg 10 not implemented")}}(t):3==a?function(t){t.sqrt_q=ro(t.p,t.m/2),t.sqrt_e34=uo(lo(t.sqrt_q,3),4),t.sqrt_e12=uo(lo(t.sqrt_q,1),2),t.frobenius=function(a,e){return a%2==1?t.conjugate(e):e},t.sqrt=function(t){const a=this,e=a.pow(t,a.sqrt_e34),o=a.mul(a.square(e),t),i=a.mul(a.frobenius(1,o),o);if(a.eq(i,a.negone))return null;const n=a.mul(e,t);let l;if(a.eq(o,a.negone))l=a.mul(n,[a.F.zero,a.F.one]);else{const t=a.pow(a.add(a.one,o),a.sqrt_e12);l=a.mul(t,n)}return a.geq(l,a.zero)?l:a.neg(l)}}(t):function(t){t.sqrt=function(){throw new Error("Sqrt alg 8 not implemented")}}(t)}}function Eo(t,a,e,o,i){t[a]=t[a]+t[e]>>>0,t[i]=(t[i]^t[a])>>>0,t[i]=(t[i]<<16|t[i]>>>16&65535)>>>0,t[o]=t[o]+t[i]>>>0,t[e]=(t[e]^t[o])>>>0,t[e]=(t[e]<<12|t[e]>>>20&4095)>>>0,t[a]=t[a]+t[e]>>>0,t[i]=(t[i]^t[a])>>>0,t[i]=(t[i]<<8|t[i]>>>24&255)>>>0,t[o]=t[o]+t[i]>>>0,t[e]=(t[e]^t[o])>>>0,t[e]=(t[e]<<7|t[e]>>>25&127)>>>0}class vo{constructor(t){t=t||[0,0,0,0,0,0,0,0],this.state=[1634760805,857760878,2036477234,1797285236,t[0],t[1],t[2],t[3],t[4],t[5],t[6],t[7],0,0,0,0],this.idx=16,this.buff=new Array(16)}nextU32(){return 16==this.idx&&this.update(),this.buff[this.idx++]}nextU64(){return no(so(this.nextU32(),4294967296),this.nextU32())}nextBool(){return 1==(1&this.nextU32())}update(){for(let t=0;t<16;t++)this.buff[t]=this.state[t];for(let a=0;a<10;a++)Eo(t=this.buff,0,4,8,12),Eo(t,1,5,9,13),Eo(t,2,6,10,14),Eo(t,3,7,11,15),Eo(t,0,5,10,15),Eo(t,1,6,11,12),Eo(t,2,7,8,13),Eo(t,3,4,9,14);var t;for(let t=0;t<16;t++)this.buff[t]=this.buff[t]+this.state[t]>>>0;this.idx=0,this.state[12]=this.state[12]+1>>>0,0==this.state[12]&&(this.state[13]=this.state[13]+1>>>0,0==this.state[13]&&(this.state[14]=this.state[14]+1>>>0,0==this.state[14]&&(this.state[15]=this.state[15]+1>>>0)))}}function So(t){let a=new Uint8Array(t);if(void 0!==globalThis.crypto)globalThis.crypto.getRandomValues(a);else for(let e=0;e<t;e++)a[e]=4294967296*Math.random()>>>0;return a}let Po=null;function Oo(){return Po||(Po=new vo(function(){const t=So(32),a=new Uint32Array(t.buffer),e=[];for(let t=0;t<8;t++)e.push(a[t]);return e}()),Po)}class qo{constructor(t,a,e){this.F=a,this.G=t,this.opMulGF=e;let o=a.sqrt_t||a.t,i=a.sqrt_s||a.s,n=a.one;for(;a.eq(a.pow(n,a.half),a.one);)n=a.add(n,a.one);this.w=new Array(i+1),this.wi=new Array(i+1),this.w[i]=this.F.pow(n,o),this.wi[i]=this.F.inv(this.w[i]);let l=i-1;for(;l>=0;)this.w[l]=this.F.square(this.w[l+1]),this.wi[l]=this.F.square(this.wi[l+1]),l--;this.roots=[],this._setRoots(Math.min(i,15))}_setRoots(t){for(let a=t;a>=0&&!this.roots[a];a--){let t=this.F.one;const e=1<<a,o=new Array(e);for(let i=0;i<e;i++)o[i]=t,t=this.F.mul(t,this.w[a]);this.roots[a]=o}}fft(t){if(t.length<=1)return t;const a=Go(t.length-1)+1;this._setRoots(a);const e=1<<a;if(t.length!=e)throw new Error("Size must be multiple of 2");return zo(this,t,a,0,1)}ifft(t){if(t.length<=1)return t;const a=Go(t.length-1)+1;this._setRoots(a);const e=1<<a;if(t.length!=e)throw new Error("Size must be multiple of 2");const o=zo(this,t,a,0,1),i=this.F.inv(this.F.mulScalar(this.F.one,e)),n=new Array(e);for(let t=0;t<e;t++)n[t]=this.opMulGF(o[(e-t)%e],i);return n}}function Go(t){return(0!=(4294901760&t)?(t&=4294901760,16):0)|(0!=(4278255360&t)?(t&=4278255360,8):0)|(0!=(4042322160&t)?(t&=4042322160,4):0)|(0!=(3435973836&t)?(t&=3435973836,2):0)|0!=(2863311530&t)}function zo(t,a,e,o,i){const n=1<<e;if(1==n)return[a[o]];if(2==n)return[t.G.add(a[o],a[o+i]),t.G.sub(a[o],a[o+i])];const l=n>>1,c=zo(t,a,e-1,o,2*i),s=zo(t,a,e-1,o+i,2*i),r=new Array(n);for(let a=0;a<l;a++)r[a]=t.G.add(c[a],t.opMulGF(s[a],t.roots[e][a])),r[a+l]=t.G.sub(c[a],t.opMulGF(s[a],t.roots[e][a]));return r}class To{constructor(t){this.type="F1",this.one=BigInt(1),this.zero=BigInt(0),this.p=BigInt(t),this.m=1,this.negone=this.p-this.one,this.two=BigInt(2),this.half=this.p>>this.one,this.bitLength=Ze(this.p),this.mask=(this.one<<BigInt(this.bitLength))-this.one,this.n64=Math.floor((this.bitLength-1)/64)+1,this.n32=2*this.n64,this.n8=8*this.n64,this.R=this.e(this.one<<BigInt(64*this.n64)),this.Ri=this.inv(this.R);const a=this.negone>>this.one;this.nqr=this.two;let e=this.pow(this.nqr,a);for(;!this.eq(e,this.negone);)this.nqr=this.nqr+this.one,e=this.pow(this.nqr,a);for(this.s=0,this.t=this.negone;(this.t&this.one)==this.zero;)this.s=this.s+1,this.t=this.t>>this.one;this.nqr_to_t=this.pow(this.nqr,this.t),Bo(this),this.FFT=new qo(this,this,this.mul.bind(this)),this.fft=this.FFT.fft.bind(this.FFT),this.ifft=this.FFT.ifft.bind(this.FFT),this.w=this.FFT.w,this.wi=this.FFT.wi,this.shift=this.square(this.nqr),this.k=this.exp(this.nqr,2**this.s)}e(t,a){let e;if(a?16==a&&(e=BigInt("0x"+t)):e=BigInt(t),e<0){let t=-e;return t>=this.p&&(t%=this.p),this.p-t}return e>=this.p?e%this.p:e}add(t,a){const e=t+a;return e>=this.p?e-this.p:e}sub(t,a){return t>=a?t-a:this.p-a+t}neg(t){return t?this.p-t:t}mul(t,a){return t*a%this.p}mulScalar(t,a){return t*this.e(a)%this.p}square(t){return t*t%this.p}eq(t,a){return t==a}neq(t,a){return t!=a}lt(t,a){return(t>this.half?t-this.p:t)<(a>this.half?a-this.p:a)}gt(t,a){return(t>this.half?t-this.p:t)>(a>this.half?a-this.p:a)}leq(t,a){return(t>this.half?t-this.p:t)<=(a>this.half?a-this.p:a)}geq(t,a){return(t>this.half?t-this.p:t)>=(a>this.half?a-this.p:a)}div(t,a){return this.mul(t,this.inv(a))}idiv(t,a){if(!a)throw new Error("Division by zero");return t/a}inv(t){if(!t)throw new Error("Division by zero");let a=this.zero,e=this.p,o=this.one,i=t%this.p;for(;i;){let t=e/i;[a,o]=[o,a-t*o],[e,i]=[i,e-t*i]}return a<this.zero&&(a+=this.p),a}mod(t,a){return t%a}pow(t,a){return Io(this,t,a)}exp(t,a){return Io(this,t,a)}band(t,a){const e=t&a&this.mask;return e>=this.p?e-this.p:e}bor(t,a){const e=(t|a)&this.mask;return e>=this.p?e-this.p:e}bxor(t,a){const e=(t^a)&this.mask;return e>=this.p?e-this.p:e}bnot(t){const a=t^this.mask;return a>=this.p?a-this.p:a}shl(t,a){if(Number(a)<this.bitLength){const e=t<<a&this.mask;return e>=this.p?e-this.p:e}{const e=this.p-a;return Number(e)<this.bitLength?t>>e:this.zero}}shr(t,a){if(Number(a)<this.bitLength)return t>>a;{const e=this.p-a;if(Number(e)<this.bitLength){const a=t<<e&this.mask;return a>=this.p?a-this.p:a}return 0}}land(t,a){return t&&a?this.one:this.zero}lor(t,a){return t||a?this.one:this.zero}lnot(t){return t?this.zero:this.one}sqrt_old(t){if(t==this.zero)return this.zero;if(this.pow(t,this.negone>>this.one)!=this.one)return null;let a=this.s,e=this.nqr_to_t,o=this.pow(t,this.t),i=this.pow(t,this.add(this.t,this.one)>>this.one);for(;o!=this.one;){let t=this.square(o),n=1;for(;t!=this.one;)n++,t=this.square(t);let l=e;for(let t=0;t<a-n-1;t++)l=this.square(l);a=n,e=this.square(l),o=this.mul(o,e),i=this.mul(i,l)}return i>this.p>>this.one&&(i=this.neg(i)),i}normalize(t,a){if((t=BigInt(t,a))<0){let a=-t;return a>=this.p&&(a%=this.p),this.p-a}return t>=this.p?t%this.p:t}random(){const t=2*this.bitLength/8;let a=this.zero;for(let e=0;e<t;e++)a=(a<<BigInt(8))+BigInt(So(1)[0]);return a%this.p}toString(t,a){let e;if(a=a||10,t>this.half&&10==a){e="-"+(this.p-t).toString(a)}else e=t.toString(a);return e}isZero(t){return t==this.zero}fromRng(t){let a;do{a=this.zero;for(let e=0;e<this.n64;e++)a+=t.nextU64()<<BigInt(64*e);a&=this.mask}while(a>=this.p);return a=a*this.Ri%this.p,a}fft(t){return this.FFT.fft(t)}ifft(t){return this.FFT.ifft(t)}toRprLE(t,a,e){mo(t,a,e,8*this.n64)}toRprBE(t,a,e){Lo(t,a,e,8*this.n64)}toRprBEM(t,a,e){return this.toRprBE(t,a,this.mul(this.R,e))}toRprLEM(t,a,e){return this.toRprLE(t,a,this.mul(this.R,e))}fromRprLE(t,a){return bo(t,a,this.n8)}fromRprBE(t,a){return wo(t,a,this.n8)}fromRprLEM(t,a){return this.mul(this.fromRprLE(t,a),this.Ri)}fromRprBEM(t,a){return this.mul(this.fromRprBE(t,a),this.Ri)}toObject(t){return t}}var Mo={bigInt2BytesLE:function(t,a){const e=Array(a);let o=BigInt(t);for(let t=0;t<a;t++)e[t]=Number(0xFFn&o),o>>=8n;return e},bigInt2U32LE:function(t,a){const e=Array(a);let o=BigInt(t);for(let t=0;t<a;t++)e[t]=Number(0xFFFFFFFFn&o),o>>=32n;return e},isOcamNum:function(t){return!!Array.isArray(t)&&(3==t.length&&("number"==typeof t[0]&&("number"==typeof t[1]&&!!Array.isArray(t[2]))))}},Uo=function(t,a,e,o,i,n,l){const c=t.addFunction(a);c.addParam("base","i32"),c.addParam("scalar","i32"),c.addParam("scalarLength","i32"),c.addParam("r","i32"),c.addLocal("i","i32"),c.addLocal("b","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(e));c.addCode(s.if(s.i32_eqz(s.getLocal("scalarLength")),[...s.call(l,s.getLocal("r")),...s.ret([])])),c.addCode(s.call(n,s.getLocal("base"),r)),c.addCode(s.call(l,s.getLocal("r"))),c.addCode(s.setLocal("i",s.getLocal("scalarLength"))),c.addCode(s.block(s.loop(s.setLocal("i",s.i32_sub(s.getLocal("i"),s.i32_const(1))),s.setLocal("b",s.i32_load8_u(s.i32_add(s.getLocal("scalar"),s.getLocal("i")))),...function(){const t=[];for(let a=0;a<8;a++)t.push(...s.call(i,s.getLocal("r"),s.getLocal("r")),...s.if(s.i32_ge_u(s.getLocal("b"),s.i32_const(128>>a)),[...s.setLocal("b",s.i32_sub(s.getLocal("b"),s.i32_const(128>>a))),...s.call(o,s.getLocal("r"),r,s.getLocal("r"))]));return t}(),s.br_if(1,s.i32_eqz(s.getLocal("i"))),s.br(0))))},Qo=function(t,a){const e=8*t.modules[a].n64,o=t.addFunction(a+"_batchInverse");o.addParam("pIn","i32"),o.addParam("inStep","i32"),o.addParam("n","i32"),o.addParam("pOut","i32"),o.addParam("outStep","i32"),o.addLocal("itAux","i32"),o.addLocal("itIn","i32"),o.addLocal("itOut","i32"),o.addLocal("i","i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(e));o.addCode(i.setLocal("itAux",i.i32_load(i.i32_const(0))),i.i32_store(i.i32_const(0),i.i32_add(i.getLocal("itAux"),i.i32_mul(i.i32_add(i.getLocal("n"),i.i32_const(1)),i.i32_const(e))))),o.addCode(i.call(a+"_one",i.getLocal("itAux")),i.setLocal("itIn",i.getLocal("pIn")),i.setLocal("itAux",i.i32_add(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("i",i.i32_const(0)),i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("i"),i.getLocal("n"))),i.if(i.call(a+"_isZero",i.getLocal("itIn")),i.call(a+"_copy",i.i32_sub(i.getLocal("itAux"),i.i32_const(e)),i.getLocal("itAux")),i.call(a+"_mul",i.getLocal("itIn"),i.i32_sub(i.getLocal("itAux"),i.i32_const(e)),i.getLocal("itAux"))),i.setLocal("itIn",i.i32_add(i.getLocal("itIn"),i.getLocal("inStep"))),i.setLocal("itAux",i.i32_add(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("i",i.i32_add(i.getLocal("i"),i.i32_const(1))),i.br(0))),i.setLocal("itIn",i.i32_sub(i.getLocal("itIn"),i.getLocal("inStep"))),i.setLocal("itAux",i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("itOut",i.i32_add(i.getLocal("pOut"),i.i32_mul(i.i32_sub(i.getLocal("n"),i.i32_const(1)),i.getLocal("outStep")))),i.call(a+"_inverse",i.getLocal("itAux"),i.getLocal("itAux")),i.block(i.loop(i.br_if(1,i.i32_eqz(i.getLocal("i"))),i.if(i.call(a+"_isZero",i.getLocal("itIn")),[...i.call(a+"_copy",i.getLocal("itAux"),i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),...i.call(a+"_zero",i.getLocal("itOut"))],[...i.call(a+"_copy",i.i32_sub(i.getLocal("itAux"),i.i32_const(e)),n),...i.call(a+"_mul",i.getLocal("itAux"),i.getLocal("itIn"),i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),...i.call(a+"_mul",i.getLocal("itAux"),n,i.getLocal("itOut"))]),i.setLocal("itIn",i.i32_sub(i.getLocal("itIn"),i.getLocal("inStep"))),i.setLocal("itOut",i.i32_sub(i.getLocal("itOut"),i.getLocal("outStep"))),i.setLocal("itAux",i.i32_sub(i.getLocal("itAux"),i.i32_const(e))),i.setLocal("i",i.i32_sub(i.getLocal("i"),i.i32_const(1))),i.br(0)))),o.addCode(i.i32_store(i.i32_const(0),i.getLocal("itAux")))};var ko=function(t,a,e,o,i,n){void 0===n&&(n=o<i);const l=t.addFunction(a);l.addParam("pIn","i32"),l.addParam("n","i32"),l.addParam("pOut","i32"),l.addLocal("i","i32"),l.addLocal("itIn","i32"),l.addLocal("itOut","i32");const c=l.getCodeBuilder();n?l.addCode(c.setLocal("itIn",c.i32_add(c.getLocal("pIn"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.i32_const(1)),c.i32_const(o)))),c.setLocal("itOut",c.i32_add(c.getLocal("pOut"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.i32_const(1)),c.i32_const(i)))),c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(e,c.getLocal("itIn"),c.getLocal("itOut")),c.setLocal("itIn",c.i32_sub(c.getLocal("itIn"),c.i32_const(o))),c.setLocal("itOut",c.i32_sub(c.getLocal("itOut"),c.i32_const(i))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0)))):l.addCode(c.setLocal("itIn",c.getLocal("pIn")),c.setLocal("itOut",c.getLocal("pOut")),c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(e,c.getLocal("itIn"),c.getLocal("itOut")),c.setLocal("itIn",c.i32_add(c.getLocal("itIn"),c.i32_const(o))),c.setLocal("itOut",c.i32_add(c.getLocal("itOut"),c.i32_const(i))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0))))};var Ro=function(t,a,e,o,i,n){void 0===n&&(n=o<i);const l=t.addFunction(a);l.addParam("pIn1","i32"),l.addParam("pIn2","i32"),l.addParam("n","i32"),l.addParam("pOut","i32"),l.addLocal("i","i32"),l.addLocal("itIn1","i32"),l.addLocal("itIn2","i32"),l.addLocal("itOut","i32");const c=l.getCodeBuilder();n?l.addCode(c.setLocal("itIn1",c.i32_add(c.getLocal("pIn1"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.i32_const(1)),c.i32_const(o)))),c.setLocal("itIn2",c.i32_add(c.getLocal("pIn2"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.i32_const(1)),c.i32_const(o)))),c.setLocal("itOut",c.i32_add(c.getLocal("pOut"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.i32_const(1)),c.i32_const(i)))),c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(e,c.getLocal("itIn1"),c.getLocal("itIn2"),c.getLocal("itOut")),c.setLocal("itIn1",c.i32_sub(c.getLocal("itIn1"),c.i32_const(o))),c.setLocal("itIn2",c.i32_sub(c.getLocal("itIn2"),c.i32_const(o))),c.setLocal("itOut",c.i32_sub(c.getLocal("itOut"),c.i32_const(i))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0)))):l.addCode(c.setLocal("itIn1",c.getLocal("pIn1")),c.setLocal("itIn2",c.getLocal("pIn2")),c.setLocal("itOut",c.getLocal("pOut")),c.setLocal("i",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("i"),c.getLocal("n"))),c.call(e,c.getLocal("itIn1"),c.getLocal("itIn2"),c.getLocal("itOut")),c.setLocal("itIn1",c.i32_add(c.getLocal("itIn1"),c.i32_const(o))),c.setLocal("itIn2",c.i32_add(c.getLocal("itIn2"),c.i32_const(o))),c.setLocal("itOut",c.i32_add(c.getLocal("itOut"),c.i32_const(i))),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0))))};var No={};function Do(t,a){return t===a?0:t>a?1:-1}function $o(t){return t*t}function jo(t){return t%2n!==0n}function Vo(t){return t%2n===0n}function Ko(t){return t<0n}function Ho(t){return t>0n}function Zo(t){return Ko(t)?t.toString(2).length-1:t.toString(2).length}function Wo(t){return t<0n?-t:t}function Yo(t){return 1n===Wo(t)}function Jo(t,a){for(var e,o,i,n=0n,l=1n,c=a,s=Wo(t);0n!==s;)e=c/s,o=n,i=c,n=l,c=s,l=o-e*l,s=i-e*s;if(!Yo(c))throw new Error(t.toString()+" and "+a.toString()+" are not co-prime");return-1===Do(n,0n)&&(n+=a),Ko(t)?-n:n}function Xo(t,a,e){if(0n===e)throw new Error("Cannot take modPow with modulus 0");var o=1n,i=t%e;for(Ko(a)&&(a*=-1n,i=Jo(i,e));Ho(a);){if(0n===i)return 0n;jo(a)&&(o=o*i%e),a/=2n,i=$o(i)%e}return o}function ti(t,a){return 0n!==a&&(!!Yo(a)||(0===function(t,a){return(t=t>=0n?t:-t)===(a=a>=0n?a:-a)?0:t>a?1:-1}(a,2n)?Vo(t):t%a===0n))}function ai(t,a){for(var e,o,i,n=function(t){return t-1n}(t),l=n,c=0;Vo(l);)l/=2n,c++;t:for(o=0;o<a.length;o++)if(!(t<a[o]||Yo(i=Xo(BigInt(a[o]),l,t))||i===n)){for(e=c-1;0!=e;e--){if(Yo(i=$o(i)%t))return!1;if(i===n)continue t}return!1}return!0}No.bitLength=Zo,No.isOdd=jo,No.isNegative=Ko,No.abs=Wo,No.isUnit=Yo,No.compare=Do,No.modInv=Jo,No.modPow=Xo,No.isPrime=function(t){var a=function(t){var a=Wo(t);return!Yo(a)&&(2n===a||3n===a||5n===a||!(Vo(a)||ti(a,3n)||ti(a,5n))&&(a<49n||void 0))}(t);if(void 0!==a)return a;var e=Wo(t),o=Zo(e);if(o<=64)return ai(e,[2,3,5,7,11,13,17,19,23,29,31,37]);for(var i=Math.log(2)*Number(o),n=Math.ceil(i),l=[],c=0;c<n;c++)l.push(BigInt(c+2));return ai(e,l)},No.square=$o;const ei=function(t,a,e){const o=e||"int";if(t.modules[o])return o;t.modules[o]={};const i=2*a,n=8*a;return function(){const e=t.addFunction(o+"_copy");e.addParam("px","i32"),e.addParam("pr","i32");const i=e.getCodeBuilder();for(let t=0;t<a;t++)e.addCode(i.i64_store(i.getLocal("pr"),8*t,i.i64_load(i.getLocal("px"),8*t)))}(),function(){const e=t.addFunction(o+"_zero");e.addParam("pr","i32");const i=e.getCodeBuilder();for(let t=0;t<a;t++)e.addCode(i.i64_store(i.getLocal("pr"),8*t,i.i64_const(0)))}(),function(){const e=t.addFunction(o+"_isZero");e.addParam("px","i32"),e.setReturnType("i32");const i=e.getCodeBuilder();e.addCode(function t(a){return 0==a?i.ret(i.i64_eqz(i.i64_load(i.getLocal("px")))):i.if(i.i64_eqz(i.i64_load(i.getLocal("px"),8*a)),t(a-1),i.ret(i.i32_const(0)))}(a-1)),e.addCode(i.ret(i.i32_const(0)))}(),function(){const e=t.addFunction(o+"_one");e.addParam("pr","i32");const i=e.getCodeBuilder();e.addCode(i.i64_store(i.getLocal("pr"),0,i.i64_const(1)));for(let t=1;t<a;t++)e.addCode(i.i64_store(i.getLocal("pr"),8*t,i.i64_const(0)))}(),function(){const e=t.addFunction(o+"_eq");e.addParam("px","i32"),e.addParam("py","i32"),e.setReturnType("i32");const i=e.getCodeBuilder();e.addCode(function t(a){return 0==a?i.ret(i.i64_eq(i.i64_load(i.getLocal("px")),i.i64_load(i.getLocal("py")))):i.if(i.i64_eq(i.i64_load(i.getLocal("px"),8*a),i.i64_load(i.getLocal("py"),8*a)),t(a-1),i.ret(i.i32_const(0)))}(a-1)),e.addCode(i.ret(i.i32_const(0)))}(),function(){const e=t.addFunction(o+"_gte");e.addParam("px","i32"),e.addParam("py","i32"),e.setReturnType("i32");const i=e.getCodeBuilder();e.addCode(function t(a){return 0==a?i.ret(i.i64_ge_u(i.i64_load(i.getLocal("px")),i.i64_load(i.getLocal("py")))):i.if(i.i64_lt_u(i.i64_load(i.getLocal("px"),8*a),i.i64_load(i.getLocal("py"),8*a)),i.ret(i.i32_const(0)),i.if(i.i64_gt_u(i.i64_load(i.getLocal("px"),8*a),i.i64_load(i.getLocal("py"),8*a)),i.ret(i.i32_const(1)),t(a-1)))}(a-1)),e.addCode(i.ret(i.i32_const(0)))}(),function(){const a=t.addFunction(o+"_add");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32"),a.setReturnType("i32"),a.addLocal("c","i64");const e=a.getCodeBuilder();a.addCode(e.setLocal("c",e.i64_add(e.i64_load32_u(e.getLocal("x")),e.i64_load32_u(e.getLocal("y"))))),a.addCode(e.i64_store32(e.getLocal("r"),e.getLocal("c")));for(let t=1;t<i;t++)a.addCode(e.setLocal("c",e.i64_add(e.i64_add(e.i64_load32_u(e.getLocal("x"),4*t),e.i64_load32_u(e.getLocal("y"),4*t)),e.i64_shr_u(e.getLocal("c"),e.i64_const(32))))),a.addCode(e.i64_store32(e.getLocal("r"),4*t,e.getLocal("c")));a.addCode(e.i32_wrap_i64(e.i64_shr_u(e.getLocal("c"),e.i64_const(32))))}(),function(){const a=t.addFunction(o+"_sub");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32"),a.setReturnType("i32"),a.addLocal("c","i64");const e=a.getCodeBuilder();a.addCode(e.setLocal("c",e.i64_sub(e.i64_load32_u(e.getLocal("x")),e.i64_load32_u(e.getLocal("y"))))),a.addCode(e.i64_store32(e.getLocal("r"),e.i64_and(e.getLocal("c"),e.i64_const("0xFFFFFFFF"))));for(let t=1;t<i;t++)a.addCode(e.setLocal("c",e.i64_add(e.i64_sub(e.i64_load32_u(e.getLocal("x"),4*t),e.i64_load32_u(e.getLocal("y"),4*t)),e.i64_shr_s(e.getLocal("c"),e.i64_const(32))))),a.addCode(e.i64_store32(e.getLocal("r"),4*t,e.i64_and(e.getLocal("c"),e.i64_const("0xFFFFFFFF"))));a.addCode(e.i32_wrap_i64(e.i64_shr_s(e.getLocal("c"),e.i64_const(32))))}(),function(){const a=t.addFunction(o+"_mul");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32"),a.addLocal("c0","i64"),a.addLocal("c1","i64");for(let t=0;t<i;t++)a.addLocal("x"+t,"i64"),a.addLocal("y"+t,"i64");const e=a.getCodeBuilder(),n=[],l=[];function c(t,a){let o,i;return n[t]?o=e.getLocal("x"+t):(o=e.teeLocal("x"+t,e.i64_load32_u(e.getLocal("x"),4*t)),n[t]=!0),l[a]?i=e.getLocal("y"+a):(i=e.teeLocal("y"+a,e.i64_load32_u(e.getLocal("y"),4*a)),l[a]=!0),e.i64_mul(o,i)}let s="c0",r="c1";for(let t=0;t<2*i-1;t++){for(let o=Math.max(0,t-i+1);o<=t&&o<i;o++){const i=t-o;a.addCode(e.setLocal(s,e.i64_add(e.i64_and(e.getLocal(s),e.i64_const(4294967295)),c(o,i)))),a.addCode(e.setLocal(r,e.i64_add(e.getLocal(r),e.i64_shr_u(e.getLocal(s),e.i64_const(32)))))}a.addCode(e.i64_store32(e.getLocal("r"),4*t,e.getLocal(s))),[s,r]=[r,s],a.addCode(e.setLocal(r,e.i64_shr_u(e.getLocal(s),e.i64_const(32))))}a.addCode(e.i64_store32(e.getLocal("r"),4*i*2-4,e.getLocal(s)))}(),function(){const a=t.addFunction(o+"_square");a.addParam("x","i32"),a.addParam("r","i32"),a.addLocal("c0","i64"),a.addLocal("c1","i64"),a.addLocal("c0_old","i64"),a.addLocal("c1_old","i64");for(let t=0;t<i;t++)a.addLocal("x"+t,"i64");const e=a.getCodeBuilder(),n=[];function l(t,a){let o,i;return n[t]?o=e.getLocal("x"+t):(o=e.teeLocal("x"+t,e.i64_load32_u(e.getLocal("x"),4*t)),n[t]=!0),n[a]?i=e.getLocal("x"+a):(i=e.teeLocal("x"+a,e.i64_load32_u(e.getLocal("x"),4*a)),n[a]=!0),e.i64_mul(o,i)}let c="c0",s="c1",r="c0_old",d="c1_old";for(let t=0;t<2*i-1;t++){a.addCode(e.setLocal(c,e.i64_const(0)),e.setLocal(s,e.i64_const(0)));for(let o=Math.max(0,t-i+1);o<t+1>>1&&o<i;o++){const i=t-o;a.addCode(e.setLocal(c,e.i64_add(e.i64_and(e.getLocal(c),e.i64_const(4294967295)),l(o,i)))),a.addCode(e.setLocal(s,e.i64_add(e.getLocal(s),e.i64_shr_u(e.getLocal(c),e.i64_const(32)))))}a.addCode(e.setLocal(c,e.i64_shl(e.i64_and(e.getLocal(c),e.i64_const(4294967295)),e.i64_const(1)))),a.addCode(e.setLocal(s,e.i64_add(e.i64_shl(e.getLocal(s),e.i64_const(1)),e.i64_shr_u(e.getLocal(c),e.i64_const(32))))),t%2==0&&(a.addCode(e.setLocal(c,e.i64_add(e.i64_and(e.getLocal(c),e.i64_const(4294967295)),l(t>>1,t>>1)))),a.addCode(e.setLocal(s,e.i64_add(e.getLocal(s),e.i64_shr_u(e.getLocal(c),e.i64_const(32)))))),t>0&&(a.addCode(e.setLocal(c,e.i64_add(e.i64_and(e.getLocal(c),e.i64_const(4294967295)),e.i64_and(e.getLocal(r),e.i64_const(4294967295))))),a.addCode(e.setLocal(s,e.i64_add(e.i64_add(e.getLocal(s),e.i64_shr_u(e.getLocal(c),e.i64_const(32))),e.getLocal(d))))),a.addCode(e.i64_store32(e.getLocal("r"),4*t,e.getLocal(c))),a.addCode(e.setLocal(r,e.getLocal(s)),e.setLocal(d,e.i64_shr_u(e.getLocal(r),e.i64_const(32))))}a.addCode(e.i64_store32(e.getLocal("r"),4*i*2-4,e.getLocal(r)))}(),function(){const a=t.addFunction(o+"_squareOld");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(o+"_mul",e.getLocal("x"),e.getLocal("x"),e.getLocal("r")))}(),function(){!function(){const a=t.addFunction(o+"__mul1");a.addParam("px","i32"),a.addParam("y","i64"),a.addParam("pr","i32"),a.addLocal("c","i64");const e=a.getCodeBuilder();a.addCode(e.setLocal("c",e.i64_mul(e.i64_load32_u(e.getLocal("px"),0,0),e.getLocal("y")))),a.addCode(e.i64_store32(e.getLocal("pr"),0,0,e.getLocal("c")));for(let t=1;t<i;t++)a.addCode(e.setLocal("c",e.i64_add(e.i64_mul(e.i64_load32_u(e.getLocal("px"),4*t,0),e.getLocal("y")),e.i64_shr_u(e.getLocal("c"),e.i64_const(32))))),a.addCode(e.i64_store32(e.getLocal("pr"),4*t,0,e.getLocal("c")))}(),function(){const a=t.addFunction(o+"__add1");a.addParam("x","i32"),a.addParam("y","i64"),a.addLocal("c","i64"),a.addLocal("px","i32");const e=a.getCodeBuilder();a.addCode(e.setLocal("px",e.getLocal("x"))),a.addCode(e.setLocal("c",e.i64_add(e.i64_load32_u(e.getLocal("px"),0,0),e.getLocal("y")))),a.addCode(e.i64_store32(e.getLocal("px"),0,0,e.getLocal("c"))),a.addCode(e.setLocal("c",e.i64_shr_u(e.getLocal("c"),e.i64_const(32)))),a.addCode(e.block(e.loop(e.br_if(1,e.i64_eqz(e.getLocal("c"))),e.setLocal("px",e.i32_add(e.getLocal("px"),e.i32_const(4))),e.setLocal("c",e.i64_add(e.i64_load32_u(e.getLocal("px"),0,0),e.getLocal("c"))),e.i64_store32(e.getLocal("px"),0,0,e.getLocal("c")),e.setLocal("c",e.i64_shr_u(e.getLocal("c"),e.i64_const(32))),e.br(0))))}();const a=t.addFunction(o+"_div");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("c","i32"),a.addParam("r","i32"),a.addLocal("rr","i32"),a.addLocal("cc","i32"),a.addLocal("eX","i32"),a.addLocal("eY","i32"),a.addLocal("sy","i64"),a.addLocal("sx","i64"),a.addLocal("ec","i32");const e=a.getCodeBuilder(),l=e.i32_const(t.alloc(n)),c=e.i32_const(t.alloc(n)),s=e.i32_const(t.alloc(n)),r=e.getLocal("cc"),d=e.getLocal("rr"),u=t.alloc(2*n),_=e.i32_const(u),g=e.i32_const(u+n);a.addCode(e.if(e.getLocal("c"),e.setLocal("cc",e.getLocal("c")),e.setLocal("cc",c))),a.addCode(e.if(e.getLocal("r"),e.setLocal("rr",e.getLocal("r")),e.setLocal("rr",s))),a.addCode(e.call(o+"_copy",e.getLocal("x"),d)),a.addCode(e.call(o+"_copy",e.getLocal("y"),l)),a.addCode(e.call(o+"_zero",r)),a.addCode(e.call(o+"_zero",_)),a.addCode(e.setLocal("eX",e.i32_const(n-1))),a.addCode(e.setLocal("eY",e.i32_const(n-1))),a.addCode(e.block(e.loop(e.br_if(1,e.i32_or(e.i32_load8_u(e.i32_add(l,e.getLocal("eY")),0,0),e.i32_eq(e.getLocal("eY"),e.i32_const(3)))),e.setLocal("eY",e.i32_sub(e.getLocal("eY"),e.i32_const(1))),e.br(0)))),a.addCode(e.setLocal("sy",e.i64_add(e.i64_load32_u(e.i32_sub(e.i32_add(l,e.getLocal("eY")),e.i32_const(3)),0,0),e.i64_const(1)))),a.addCode(e.if(e.i64_eq(e.getLocal("sy"),e.i64_const(1)),e.drop(e.i64_div_u(e.i64_const(0),e.i64_const(0))))),a.addCode(e.block(e.loop(e.block(e.loop(e.br_if(1,e.i32_or(e.i32_load8_u(e.i32_add(d,e.getLocal("eX")),0,0),e.i32_eq(e.getLocal("eX"),e.i32_const(7)))),e.setLocal("eX",e.i32_sub(e.getLocal("eX"),e.i32_const(1))),e.br(0))),e.setLocal("sx",e.i64_load(e.i32_sub(e.i32_add(d,e.getLocal("eX")),e.i32_const(7)),0,0)),e.setLocal("sx",e.i64_div_u(e.getLocal("sx"),e.getLocal("sy"))),e.setLocal("ec",e.i32_sub(e.i32_sub(e.getLocal("eX"),e.getLocal("eY")),e.i32_const(4))),e.block(e.loop(e.br_if(1,e.i32_and(e.i64_eqz(e.i64_and(e.getLocal("sx"),e.i64_const("0xFFFFFFFF00000000"))),e.i32_ge_s(e.getLocal("ec"),e.i32_const(0)))),e.setLocal("sx",e.i64_shr_u(e.getLocal("sx"),e.i64_const(8))),e.setLocal("ec",e.i32_add(e.getLocal("ec"),e.i32_const(1))),e.br(0))),e.if(e.i64_eqz(e.getLocal("sx")),[...e.br_if(2,e.i32_eqz(e.call(o+"_gte",d,l))),...e.setLocal("sx",e.i64_const(1)),...e.setLocal("ec",e.i32_const(0))]),e.call(o+"__mul1",l,e.getLocal("sx"),g),e.drop(e.call(o+"_sub",d,e.i32_sub(g,e.getLocal("ec")),d)),e.call(o+"__add1",e.i32_add(r,e.getLocal("ec")),e.getLocal("sx")),e.br(0))))}(),function(){const a=t.addFunction(o+"_inverseMod");a.addParam("px","i32"),a.addParam("pm","i32"),a.addParam("pr","i32"),a.addLocal("t","i32"),a.addLocal("newt","i32"),a.addLocal("r","i32"),a.addLocal("qq","i32"),a.addLocal("qr","i32"),a.addLocal("newr","i32"),a.addLocal("swp","i32"),a.addLocal("x","i32"),a.addLocal("signt","i32"),a.addLocal("signnewt","i32"),a.addLocal("signx","i32");const e=a.getCodeBuilder(),i=e.i32_const(t.alloc(n)),l=e.i32_const(t.alloc(n)),c=e.i32_const(t.alloc(n)),s=e.i32_const(t.alloc(n)),r=e.i32_const(t.alloc(n)),d=e.i32_const(t.alloc(n)),u=e.i32_const(t.alloc(2*n)),_=e.i32_const(t.alloc(n));a.addCode(e.setLocal("t",i),e.call(o+"_zero",i),e.setLocal("signt",e.i32_const(0))),a.addCode(e.setLocal("r",l),e.call(o+"_copy",e.getLocal("pm"),l)),a.addCode(e.setLocal("newt",c),e.call(o+"_one",c),e.setLocal("signnewt",e.i32_const(0))),a.addCode(e.setLocal("newr",s),e.call(o+"_copy",e.getLocal("px"),s)),a.addCode(e.setLocal("qq",r)),a.addCode(e.setLocal("qr",d)),a.addCode(e.setLocal("x",_)),a.addCode(e.block(e.loop(e.br_if(1,e.call(o+"_isZero",e.getLocal("newr"))),e.call(o+"_div",e.getLocal("r"),e.getLocal("newr"),e.getLocal("qq"),e.getLocal("qr")),e.call(o+"_mul",e.getLocal("qq"),e.getLocal("newt"),u),e.if(e.getLocal("signt"),e.if(e.getLocal("signnewt"),e.if(e.call(o+"_gte",u,e.getLocal("t")),[...e.drop(e.call(o+"_sub",u,e.getLocal("t"),e.getLocal("x"))),...e.setLocal("signx",e.i32_const(0))],[...e.drop(e.call(o+"_sub",e.getLocal("t"),u,e.getLocal("x"))),...e.setLocal("signx",e.i32_const(1))]),[...e.drop(e.call(o+"_add",u,e.getLocal("t"),e.getLocal("x"))),...e.setLocal("signx",e.i32_const(1))]),e.if(e.getLocal("signnewt"),[...e.drop(e.call(o+"_add",u,e.getLocal("t"),e.getLocal("x"))),...e.setLocal("signx",e.i32_const(0))],e.if(e.call(o+"_gte",e.getLocal("t"),u),[...e.drop(e.call(o+"_sub",e.getLocal("t"),u,e.getLocal("x"))),...e.setLocal("signx",e.i32_const(0))],[...e.drop(e.call(o+"_sub",u,e.getLocal("t"),e.getLocal("x"))),...e.setLocal("signx",e.i32_const(1))]))),e.setLocal("swp",e.getLocal("t")),e.setLocal("t",e.getLocal("newt")),e.setLocal("newt",e.getLocal("x")),e.setLocal("x",e.getLocal("swp")),e.setLocal("signt",e.getLocal("signnewt")),e.setLocal("signnewt",e.getLocal("signx")),e.setLocal("swp",e.getLocal("r")),e.setLocal("r",e.getLocal("newr")),e.setLocal("newr",e.getLocal("qr")),e.setLocal("qr",e.getLocal("swp")),e.br(0)))),a.addCode(e.if(e.getLocal("signt"),e.drop(e.call(o+"_sub",e.getLocal("pm"),e.getLocal("t"),e.getLocal("pr"))),e.call(o+"_copy",e.getLocal("t"),e.getLocal("pr"))))}(),t.exportFunction(o+"_copy"),t.exportFunction(o+"_zero"),t.exportFunction(o+"_one"),t.exportFunction(o+"_isZero"),t.exportFunction(o+"_eq"),t.exportFunction(o+"_gte"),t.exportFunction(o+"_add"),t.exportFunction(o+"_sub"),t.exportFunction(o+"_mul"),t.exportFunction(o+"_square"),t.exportFunction(o+"_squareOld"),t.exportFunction(o+"_div"),t.exportFunction(o+"_inverseMod"),o},oi=Mo,ii=Uo,ni=Qo,li=ko,ci=Ro,{bitLength:si,modInv:ri,modPow:di,isPrime:ui,isOdd:_i,square:gi}=No;var fi=function(t,a,e,o){const i=BigInt(a),n=Math.floor((si(i-1n)-1)/64)+1,l=2*n,c=8*n,s=e||"f1m";if(t.modules[s])return s;const r=ei(t,n,o),d=t.alloc(c,oi.bigInt2BytesLE(i,c)),u=t.alloc(oi.bigInt2BytesLE(gi(1n<<BigInt(64*n))%i,c)),_=t.alloc(oi.bigInt2BytesLE((1n<<BigInt(64*n))%i,c)),g=t.alloc(oi.bigInt2BytesLE(0n,c)),f=i-1n,p=f>>1n,h=t.alloc(c,oi.bigInt2BytesLE(p,c)),m=p+1n,L=t.alloc(c,oi.bigInt2BytesLE(m,c));t.modules[s]={pq:d,pR2:u,n64:n,q:i,pOne:_,pZero:g,pePlusOne:L};let b=2n;if(ui(i))for(;di(b,p,i)!==f;)b+=1n;let w=0,y=f;for(;!_i(y)&&0n!==y;)w++,y>>=1n;const A=t.alloc(c,oi.bigInt2BytesLE(y,c)),C=di(b,y,i),x=t.alloc(oi.bigInt2BytesLE((C<<BigInt(64*n))%i,c)),F=y+1n>>1n,I=t.alloc(c,oi.bigInt2BytesLE(F,c));return t.exportFunction(r+"_copy",s+"_copy"),t.exportFunction(r+"_zero",s+"_zero"),t.exportFunction(r+"_isZero",s+"_isZero"),t.exportFunction(r+"_eq",s+"_eq"),function(){const a=t.addFunction(s+"_isOne");a.addParam("x","i32"),a.setReturnType("i32");const e=a.getCodeBuilder();a.addCode(e.ret(e.call(r+"_eq",e.getLocal("x"),e.i32_const(_))))}(),function(){const a=t.addFunction(s+"_add");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.if(e.call(r+"_add",e.getLocal("x"),e.getLocal("y"),e.getLocal("r")),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))),e.if(e.call(r+"_gte",e.getLocal("r"),e.i32_const(d)),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))))))}(),function(){const a=t.addFunction(s+"_sub");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.if(e.call(r+"_sub",e.getLocal("x"),e.getLocal("y"),e.getLocal("r")),e.drop(e.call(r+"_add",e.getLocal("r"),e.i32_const(d),e.getLocal("r")))))}(),function(){const a=t.addFunction(s+"_neg");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(s+"_sub",e.i32_const(g),e.getLocal("x"),e.getLocal("r")))}(),function(){const a=t.alloc(l*l*8),e=t.addFunction(s+"_mReduct");e.addParam("t","i32"),e.addParam("r","i32"),e.addLocal("np32","i64"),e.addLocal("c","i64"),e.addLocal("m","i64");const o=e.getCodeBuilder(),n=Number(0x100000000n-ri(i,0x100000000n));e.addCode(o.setLocal("np32",o.i64_const(n)));for(let t=0;t<l;t++){e.addCode(o.setLocal("c",o.i64_const(0))),e.addCode(o.setLocal("m",o.i64_and(o.i64_mul(o.i64_load32_u(o.getLocal("t"),4*t),o.getLocal("np32")),o.i64_const("0xFFFFFFFF"))));for(let a=0;a<l;a++)e.addCode(o.setLocal("c",o.i64_add(o.i64_add(o.i64_load32_u(o.getLocal("t"),4*(t+a)),o.i64_shr_u(o.getLocal("c"),o.i64_const(32))),o.i64_mul(o.i64_load32_u(o.i32_const(d),4*a),o.getLocal("m"))))),e.addCode(o.i64_store32(o.getLocal("t"),4*(t+a),o.getLocal("c")));e.addCode(o.i64_store32(o.i32_const(a),4*t,o.i64_shr_u(o.getLocal("c"),o.i64_const(32))))}e.addCode(o.call(s+"_add",o.i32_const(a),o.i32_add(o.getLocal("t"),o.i32_const(4*l)),o.getLocal("r")))}(),function(){const a=t.addFunction(s+"_mul");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32"),a.addLocal("c0","i64"),a.addLocal("c1","i64"),a.addLocal("np32","i64");for(let t=0;t<l;t++)a.addLocal("x"+t,"i64"),a.addLocal("y"+t,"i64"),a.addLocal("m"+t,"i64"),a.addLocal("q"+t,"i64");const e=a.getCodeBuilder(),o=Number(0x100000000n-ri(i,0x100000000n));a.addCode(e.setLocal("np32",e.i64_const(o)));const n=[],c=[],u=[];function _(t,a){let o,i;return n[t]?o=e.getLocal("x"+t):(o=e.teeLocal("x"+t,e.i64_load32_u(e.getLocal("x"),4*t)),n[t]=!0),c[a]?i=e.getLocal("y"+a):(i=e.teeLocal("y"+a,e.i64_load32_u(e.getLocal("y"),4*a)),c[a]=!0),e.i64_mul(o,i)}function g(t,a){let o,i;return u[t]?o=e.getLocal("q"+t):(o=e.teeLocal("q"+t,e.i64_load32_u(e.i32_const(0),d+4*t)),u[t]=!0),i=e.getLocal("m"+a),e.i64_mul(o,i)}let f="c0",p="c1";for(let t=0;t<2*l-1;t++){for(let o=Math.max(0,t-l+1);o<=t&&o<l;o++){const i=t-o;a.addCode(e.setLocal(f,e.i64_add(e.i64_and(e.getLocal(f),e.i64_const(4294967295)),_(o,i)))),a.addCode(e.setLocal(p,e.i64_add(e.getLocal(p),e.i64_shr_u(e.getLocal(f),e.i64_const(32)))))}for(let o=Math.max(1,t-l+1);o<=t&&o<l;o++){const i=t-o;a.addCode(e.setLocal(f,e.i64_add(e.i64_and(e.getLocal(f),e.i64_const(4294967295)),g(o,i)))),a.addCode(e.setLocal(p,e.i64_add(e.getLocal(p),e.i64_shr_u(e.getLocal(f),e.i64_const(32)))))}t<l&&(a.addCode(e.setLocal("m"+t,e.i64_and(e.i64_mul(e.i64_and(e.getLocal(f),e.i64_const(4294967295)),e.getLocal("np32")),e.i64_const("0xFFFFFFFF")))),a.addCode(e.setLocal(f,e.i64_add(e.i64_and(e.getLocal(f),e.i64_const(4294967295)),g(0,t)))),a.addCode(e.setLocal(p,e.i64_add(e.getLocal(p),e.i64_shr_u(e.getLocal(f),e.i64_const(32)))))),t>=l&&a.addCode(e.i64_store32(e.getLocal("r"),4*(t-l),e.getLocal(f))),[f,p]=[p,f],a.addCode(e.setLocal(p,e.i64_shr_u(e.getLocal(f),e.i64_const(32))))}a.addCode(e.i64_store32(e.getLocal("r"),4*l-4,e.getLocal(f))),a.addCode(e.if(e.i32_wrap_i64(e.getLocal(p)),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))),e.if(e.call(r+"_gte",e.getLocal("r"),e.i32_const(d)),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))))))}(),function(){const a=t.addFunction(s+"_square");a.addParam("x","i32"),a.addParam("r","i32"),a.addLocal("c0","i64"),a.addLocal("c1","i64"),a.addLocal("c0_old","i64"),a.addLocal("c1_old","i64"),a.addLocal("np32","i64");for(let t=0;t<l;t++)a.addLocal("x"+t,"i64"),a.addLocal("m"+t,"i64"),a.addLocal("q"+t,"i64");const e=a.getCodeBuilder(),o=Number(0x100000000n-ri(i,0x100000000n));a.addCode(e.setLocal("np32",e.i64_const(o)));const n=[],c=[];function u(t,a){let o,i;return n[t]?o=e.getLocal("x"+t):(o=e.teeLocal("x"+t,e.i64_load32_u(e.getLocal("x"),4*t)),n[t]=!0),n[a]?i=e.getLocal("x"+a):(i=e.teeLocal("x"+a,e.i64_load32_u(e.getLocal("x"),4*a)),n[a]=!0),e.i64_mul(o,i)}function _(t,a){let o,i;return c[t]?o=e.getLocal("q"+t):(o=e.teeLocal("q"+t,e.i64_load32_u(e.i32_const(0),d+4*t)),c[t]=!0),i=e.getLocal("m"+a),e.i64_mul(o,i)}let g="c0",f="c1",p="c0_old",h="c1_old";for(let t=0;t<2*l-1;t++){a.addCode(e.setLocal(g,e.i64_const(0)),e.setLocal(f,e.i64_const(0)));for(let o=Math.max(0,t-l+1);o<t+1>>1&&o<l;o++){const i=t-o;a.addCode(e.setLocal(g,e.i64_add(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),u(o,i)))),a.addCode(e.setLocal(f,e.i64_add(e.getLocal(f),e.i64_shr_u(e.getLocal(g),e.i64_const(32)))))}a.addCode(e.setLocal(g,e.i64_shl(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),e.i64_const(1)))),a.addCode(e.setLocal(f,e.i64_add(e.i64_shl(e.getLocal(f),e.i64_const(1)),e.i64_shr_u(e.getLocal(g),e.i64_const(32))))),t%2==0&&(a.addCode(e.setLocal(g,e.i64_add(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),u(t>>1,t>>1)))),a.addCode(e.setLocal(f,e.i64_add(e.getLocal(f),e.i64_shr_u(e.getLocal(g),e.i64_const(32)))))),t>0&&(a.addCode(e.setLocal(g,e.i64_add(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),e.i64_and(e.getLocal(p),e.i64_const(4294967295))))),a.addCode(e.setLocal(f,e.i64_add(e.i64_add(e.getLocal(f),e.i64_shr_u(e.getLocal(g),e.i64_const(32))),e.getLocal(h)))));for(let o=Math.max(1,t-l+1);o<=t&&o<l;o++){const i=t-o;a.addCode(e.setLocal(g,e.i64_add(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),_(o,i)))),a.addCode(e.setLocal(f,e.i64_add(e.getLocal(f),e.i64_shr_u(e.getLocal(g),e.i64_const(32)))))}t<l&&(a.addCode(e.setLocal("m"+t,e.i64_and(e.i64_mul(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),e.getLocal("np32")),e.i64_const("0xFFFFFFFF")))),a.addCode(e.setLocal(g,e.i64_add(e.i64_and(e.getLocal(g),e.i64_const(4294967295)),_(0,t)))),a.addCode(e.setLocal(f,e.i64_add(e.getLocal(f),e.i64_shr_u(e.getLocal(g),e.i64_const(32)))))),t>=l&&a.addCode(e.i64_store32(e.getLocal("r"),4*(t-l),e.getLocal(g))),a.addCode(e.setLocal(p,e.getLocal(f)),e.setLocal(h,e.i64_shr_u(e.getLocal(p),e.i64_const(32))))}a.addCode(e.i64_store32(e.getLocal("r"),4*l-4,e.getLocal(p))),a.addCode(e.if(e.i32_wrap_i64(e.getLocal(h)),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))),e.if(e.call(r+"_gte",e.getLocal("r"),e.i32_const(d)),e.drop(e.call(r+"_sub",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))))))}(),function(){const a=t.addFunction(s+"_squareOld");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(s+"_mul",e.getLocal("x"),e.getLocal("x"),e.getLocal("r")))}(),function(){const a=t.addFunction(s+"_toMontgomery");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(s+"_mul",e.getLocal("x"),e.i32_const(u),e.getLocal("r")))}(),function(){const a=t.alloc(2*c),e=t.addFunction(s+"_fromMontgomery");e.addParam("x","i32"),e.addParam("r","i32");const o=e.getCodeBuilder();e.addCode(o.call(r+"_copy",o.getLocal("x"),o.i32_const(a))),e.addCode(o.call(r+"_zero",o.i32_const(a+c))),e.addCode(o.call(s+"_mReduct",o.i32_const(a),o.getLocal("r")))}(),function(){const a=t.addFunction(s+"_isNegative");a.addParam("x","i32"),a.setReturnType("i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(c));a.addCode(e.call(s+"_fromMontgomery",e.getLocal("x"),o),e.call(r+"_gte",o,e.i32_const(L)))}(),function(){const a=t.addFunction(s+"_sign");a.addParam("x","i32"),a.setReturnType("i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(c));a.addCode(e.if(e.call(r+"_isZero",e.getLocal("x")),e.ret(e.i32_const(0))),e.call(s+"_fromMontgomery",e.getLocal("x"),o),e.if(e.call(r+"_gte",o,e.i32_const(L)),e.ret(e.i32_const(-1))),e.ret(e.i32_const(1)))}(),function(){const a=t.addFunction(s+"_inverse");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(s+"_fromMontgomery",e.getLocal("x"),e.getLocal("r"))),a.addCode(e.call(r+"_inverseMod",e.getLocal("r"),e.i32_const(d),e.getLocal("r"))),a.addCode(e.call(s+"_toMontgomery",e.getLocal("r"),e.getLocal("r")))}(),function(){const a=t.addFunction(s+"_one");a.addParam("pr","i32");const e=a.getCodeBuilder();a.addCode(e.call(r+"_copy",e.i32_const(_),e.getLocal("pr")))}(),function(){const a=t.addFunction(s+"_load");a.addParam("scalar","i32"),a.addParam("scalarLen","i32"),a.addParam("r","i32"),a.addLocal("p","i32"),a.addLocal("l","i32"),a.addLocal("i","i32"),a.addLocal("j","i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(c)),i=t.alloc(c),n=e.i32_const(i);a.addCode(e.call(r+"_zero",e.getLocal("r")),e.setLocal("i",e.i32_const(c)),e.setLocal("p",e.getLocal("scalar")),e.block(e.loop(e.br_if(1,e.i32_gt_u(e.getLocal("i"),e.getLocal("scalarLen"))),e.if(e.i32_eq(e.getLocal("i"),e.i32_const(c)),e.call(s+"_one",o),e.call(s+"_mul",o,e.i32_const(u),o)),e.call(s+"_mul",e.getLocal("p"),o,n),e.call(s+"_add",e.getLocal("r"),n,e.getLocal("r")),e.setLocal("p",e.i32_add(e.getLocal("p"),e.i32_const(c))),e.setLocal("i",e.i32_add(e.getLocal("i"),e.i32_const(c))),e.br(0))),e.setLocal("l",e.i32_rem_u(e.getLocal("scalarLen"),e.i32_const(c))),e.if(e.i32_eqz(e.getLocal("l")),e.ret([])),e.call(r+"_zero",n),e.setLocal("j",e.i32_const(0)),e.block(e.loop(e.br_if(1,e.i32_eq(e.getLocal("j"),e.getLocal("l"))),e.i32_store8(e.getLocal("j"),i,e.i32_load8_u(e.getLocal("p"))),e.setLocal("p",e.i32_add(e.getLocal("p"),e.i32_const(1))),e.setLocal("j",e.i32_add(e.getLocal("j"),e.i32_const(1))),e.br(0))),e.if(e.i32_eq(e.getLocal("i"),e.i32_const(c)),e.call(s+"_one",o),e.call(s+"_mul",o,e.i32_const(u),o)),e.call(s+"_mul",n,o,n),e.call(s+"_add",e.getLocal("r"),n,e.getLocal("r")))}(),function(){const a=t.addFunction(s+"_timesScalar");a.addParam("x","i32"),a.addParam("scalar","i32"),a.addParam("scalarLen","i32"),a.addParam("r","i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(c));a.addCode(e.call(s+"_load",e.getLocal("scalar"),e.getLocal("scalarLen"),o),e.call(s+"_toMontgomery",o,o),e.call(s+"_mul",e.getLocal("x"),o,e.getLocal("r")))}(),ni(t,s),li(t,s+"_batchToMontgomery",s+"_toMontgomery",c,c),li(t,s+"_batchFromMontgomery",s+"_fromMontgomery",c,c),li(t,s+"_batchNeg",s+"_neg",c,c),ci(t,s+"_batchAdd",s+"_add",c,c),ci(t,s+"_batchSub",s+"_sub",c,c),ci(t,s+"_batchMul",s+"_mul",c,c),t.exportFunction(s+"_add"),t.exportFunction(s+"_sub"),t.exportFunction(s+"_neg"),t.exportFunction(s+"_isNegative"),t.exportFunction(s+"_isOne"),t.exportFunction(s+"_sign"),t.exportFunction(s+"_mReduct"),t.exportFunction(s+"_mul"),t.exportFunction(s+"_square"),t.exportFunction(s+"_squareOld"),t.exportFunction(s+"_fromMontgomery"),t.exportFunction(s+"_toMontgomery"),t.exportFunction(s+"_inverse"),t.exportFunction(s+"_one"),t.exportFunction(s+"_load"),t.exportFunction(s+"_timesScalar"),ii(t,s+"_exp",c,s+"_mul",s+"_square",r+"_copy",s+"_one"),t.exportFunction(s+"_exp"),t.exportFunction(s+"_batchInverse"),ui(i)&&(!function(){const a=t.addFunction(s+"_sqrt");a.addParam("n","i32"),a.addParam("r","i32"),a.addLocal("m","i32"),a.addLocal("i","i32"),a.addLocal("j","i32");const e=a.getCodeBuilder(),o=e.i32_const(_),i=e.i32_const(t.alloc(c)),n=e.i32_const(t.alloc(c)),l=e.i32_const(t.alloc(c)),r=e.i32_const(t.alloc(c)),d=e.i32_const(t.alloc(c));a.addCode(e.if(e.call(s+"_isZero",e.getLocal("n")),e.ret(e.call(s+"_zero",e.getLocal("r")))),e.setLocal("m",e.i32_const(w)),e.call(s+"_copy",e.i32_const(x),i),e.call(s+"_exp",e.getLocal("n"),e.i32_const(A),e.i32_const(c),n),e.call(s+"_exp",e.getLocal("n"),e.i32_const(I),e.i32_const(c),l),e.block(e.loop(e.br_if(1,e.call(s+"_eq",n,o)),e.call(s+"_square",n,r),e.setLocal("i",e.i32_const(1)),e.block(e.loop(e.br_if(1,e.call(s+"_eq",r,o)),e.call(s+"_square",r,r),e.setLocal("i",e.i32_add(e.getLocal("i"),e.i32_const(1))),e.br(0))),e.call(s+"_copy",i,d),e.setLocal("j",e.i32_sub(e.i32_sub(e.getLocal("m"),e.getLocal("i")),e.i32_const(1))),e.block(e.loop(e.br_if(1,e.i32_eqz(e.getLocal("j"))),e.call(s+"_square",d,d),e.setLocal("j",e.i32_sub(e.getLocal("j"),e.i32_const(1))),e.br(0))),e.setLocal("m",e.getLocal("i")),e.call(s+"_square",d,i),e.call(s+"_mul",n,i,n),e.call(s+"_mul",l,d,l),e.br(0))),e.if(e.call(s+"_isNegative",l),e.call(s+"_neg",l,e.getLocal("r")),e.call(s+"_copy",l,e.getLocal("r"))))}(),function(){const a=t.addFunction(s+"_isSquare");a.addParam("n","i32"),a.setReturnType("i32");const e=a.getCodeBuilder(),o=e.i32_const(_),i=e.i32_const(t.alloc(c));a.addCode(e.if(e.call(s+"_isZero",e.getLocal("n")),e.ret(e.i32_const(1))),e.call(s+"_exp",e.getLocal("n"),e.i32_const(h),e.i32_const(c),i),e.call(s+"_eq",i,o))}(),t.exportFunction(s+"_sqrt"),t.exportFunction(s+"_isSquare")),t.exportFunction(s+"_batchToMontgomery"),t.exportFunction(s+"_batchFromMontgomery"),s};const pi=fi,{bitLength:hi}=No;var mi=function(t,a,e,o,i){const n=BigInt(a),l=Math.floor((hi(n-1n)-1)/64)+1,c=8*l,s=e||"f1";if(t.modules[s])return s;t.modules[s]={n64:l};const r=i||"int",d=pi(t,n,o,r),u=t.modules[d].pR2,_=t.modules[d].pq,g=t.modules[d].pePlusOne;return function(){const a=t.alloc(c),e=t.addFunction(s+"_mul");e.addParam("x","i32"),e.addParam("y","i32"),e.addParam("r","i32");const o=e.getCodeBuilder();e.addCode(o.call(d+"_mul",o.getLocal("x"),o.getLocal("y"),o.i32_const(a))),e.addCode(o.call(d+"_mul",o.i32_const(a),o.i32_const(u),o.getLocal("r")))}(),function(){const a=t.addFunction(s+"_square");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(s+"_mul",e.getLocal("x"),e.getLocal("x"),e.getLocal("r")))}(),function(){const a=t.addFunction(s+"_inverse");a.addParam("x","i32"),a.addParam("r","i32");const e=a.getCodeBuilder();a.addCode(e.call(r+"_inverseMod",e.getLocal("x"),e.i32_const(_),e.getLocal("r")))}(),function(){const a=t.addFunction(s+"_isNegative");a.addParam("x","i32"),a.setReturnType("i32");const e=a.getCodeBuilder();a.addCode(e.call(r+"_gte",e.getLocal("x"),e.i32_const(g)))}(),t.exportFunction(d+"_add",s+"_add"),t.exportFunction(d+"_sub",s+"_sub"),t.exportFunction(d+"_neg",s+"_neg"),t.exportFunction(s+"_mul"),t.exportFunction(s+"_square"),t.exportFunction(s+"_inverse"),t.exportFunction(s+"_isNegative"),t.exportFunction(d+"_copy",s+"_copy"),t.exportFunction(d+"_zero",s+"_zero"),t.exportFunction(d+"_one",s+"_one"),t.exportFunction(d+"_isZero",s+"_isZero"),t.exportFunction(d+"_eq",s+"_eq"),s};const Li=Uo,bi=Qo,wi=Mo;var yi=function(t,a,e,o){if(t.modules[e])return e;const i=8*t.modules[o].n64,n=t.modules[o].q;return t.modules[e]={n64:2*t.modules[o].n64},function(){const a=t.addFunction(e+"_isZero");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.i32_and(n.call(o+"_isZero",l),n.call(o+"_isZero",c)))}(),function(){const a=t.addFunction(e+"_isOne");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.ret(n.i32_and(n.call(o+"_isOne",l),n.call(o+"_isZero",c))))}(),function(){const a=t.addFunction(e+"_zero");a.addParam("x","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.call(o+"_zero",l),n.call(o+"_zero",c))}(),function(){const a=t.addFunction(e+"_one");a.addParam("x","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.call(o+"_one",l),n.call(o+"_zero",c))}(),function(){const a=t.addFunction(e+"_copy");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_copy",l,s),n.call(o+"_copy",c,r))}(),function(){const n=t.addFunction(e+"_mul");n.addParam("x","i32"),n.addParam("y","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.getLocal("y"),d=l.i32_add(l.getLocal("y"),l.i32_const(i)),u=l.getLocal("r"),_=l.i32_add(l.getLocal("r"),l.i32_const(i)),g=l.i32_const(t.alloc(i)),f=l.i32_const(t.alloc(i)),p=l.i32_const(t.alloc(i)),h=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_mul",c,r,g),l.call(o+"_mul",s,d,f),l.call(o+"_add",c,s,p),l.call(o+"_add",r,d,h),l.call(o+"_mul",p,h,p),l.call(a,f,u),l.call(o+"_add",g,u,u),l.call(o+"_add",g,f,_),l.call(o+"_sub",p,_,_))}(),function(){const a=t.addFunction(e+"_mul1");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("y"),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_mul",l,s,r),n.call(o+"_mul",c,s,d))}(),function(){const n=t.addFunction(e+"_square");n.addParam("x","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.getLocal("r"),d=l.i32_add(l.getLocal("r"),l.i32_const(i)),u=l.i32_const(t.alloc(i)),_=l.i32_const(t.alloc(i)),g=l.i32_const(t.alloc(i)),f=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_mul",c,s,u),l.call(o+"_add",c,s,_),l.call(a,s,g),l.call(o+"_add",c,g,g),l.call(a,u,f),l.call(o+"_add",f,u,f),l.call(o+"_mul",_,g,r),l.call(o+"_sub",r,f,r),l.call(o+"_add",u,u,d))}(),function(){const a=t.addFunction(e+"_add");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("y"),r=n.i32_add(n.getLocal("y"),n.i32_const(i)),d=n.getLocal("r"),u=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_add",l,s,d),n.call(o+"_add",c,r,u))}(),function(){const a=t.addFunction(e+"_sub");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("y"),r=n.i32_add(n.getLocal("y"),n.i32_const(i)),d=n.getLocal("r"),u=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_sub",l,s,d),n.call(o+"_sub",c,r,u))}(),function(){const a=t.addFunction(e+"_neg");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_neg",l,s),n.call(o+"_neg",c,r))}(),function(){const a=t.addFunction(e+"_conjugate");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_copy",l,s),n.call(o+"_neg",c,r))}(),function(){const a=t.addFunction(e+"_toMontgomery");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_toMontgomery",l,s),n.call(o+"_toMontgomery",c,r))}(),function(){const a=t.addFunction(e+"_fromMontgomery");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_fromMontgomery",l,s),n.call(o+"_fromMontgomery",c,r))}(),function(){const a=t.addFunction(e+"_eq");a.addParam("x","i32"),a.addParam("y","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("y"),r=n.i32_add(n.getLocal("y"),n.i32_const(i));a.addCode(n.i32_and(n.call(o+"_eq",l,s),n.call(o+"_eq",c,r)))}(),function(){const n=t.addFunction(e+"_inverse");n.addParam("x","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.getLocal("r"),d=l.i32_add(l.getLocal("r"),l.i32_const(i)),u=l.i32_const(t.alloc(i)),_=l.i32_const(t.alloc(i)),g=l.i32_const(t.alloc(i)),f=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_square",c,u),l.call(o+"_square",s,_),l.call(a,_,g),l.call(o+"_sub",u,g,g),l.call(o+"_inverse",g,f),l.call(o+"_mul",c,f,r),l.call(o+"_mul",s,f,d),l.call(o+"_neg",d,d))}(),function(){const a=t.addFunction(e+"_timesScalar");a.addParam("x","i32"),a.addParam("scalar","i32"),a.addParam("scalarLen","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.getLocal("r"),r=n.i32_add(n.getLocal("r"),n.i32_const(i));a.addCode(n.call(o+"_timesScalar",l,n.getLocal("scalar"),n.getLocal("scalarLen"),s),n.call(o+"_timesScalar",c,n.getLocal("scalar"),n.getLocal("scalarLen"),r))}(),function(){const a=t.addFunction(e+"_sign");a.addParam("x","i32"),a.addLocal("s","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.setLocal("s",n.call(o+"_sign",c)),n.if(n.getLocal("s"),n.ret(n.getLocal("s"))),n.ret(n.call(o+"_sign",l)))}(),function(){const a=t.addFunction(e+"_isNegative");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i));a.addCode(n.if(n.call(o+"_isZero",c),n.ret(n.call(o+"_isNegative",l))),n.ret(n.call(o+"_isNegative",c)))}(),t.exportFunction(e+"_isZero"),t.exportFunction(e+"_isOne"),t.exportFunction(e+"_zero"),t.exportFunction(e+"_one"),t.exportFunction(e+"_copy"),t.exportFunction(e+"_mul"),t.exportFunction(e+"_mul1"),t.exportFunction(e+"_square"),t.exportFunction(e+"_add"),t.exportFunction(e+"_sub"),t.exportFunction(e+"_neg"),t.exportFunction(e+"_sign"),t.exportFunction(e+"_conjugate"),t.exportFunction(e+"_fromMontgomery"),t.exportFunction(e+"_toMontgomery"),t.exportFunction(e+"_eq"),t.exportFunction(e+"_inverse"),bi(t,e),Li(t,e+"_exp",2*i,e+"_mul",e+"_square",e+"_copy",e+"_one"),function(){const a=t.addFunction(e+"_sqrt");a.addParam("a","i32"),a.addParam("pr","i32");const l=a.getCodeBuilder(),c=l.i32_const(t.alloc(wi.bigInt2BytesLE((BigInt(n||0)-3n)/4n,i))),s=l.i32_const(t.alloc(wi.bigInt2BytesLE((BigInt(n||0)-1n)/2n,i))),r=l.getLocal("a"),d=l.i32_const(t.alloc(2*i)),u=l.i32_const(t.alloc(2*i)),_=l.i32_const(t.alloc(2*i)),g=t.alloc(2*i),f=l.i32_const(g),p=l.i32_const(g),h=l.i32_const(g+i),m=l.i32_const(t.alloc(2*i)),L=l.i32_const(t.alloc(2*i));a.addCode(l.call(e+"_one",f),l.call(e+"_neg",f,f),l.call(e+"_exp",r,c,l.i32_const(i),d),l.call(e+"_square",d,u),l.call(e+"_mul",r,u,u),l.call(e+"_conjugate",u,_),l.call(e+"_mul",_,u,_),l.if(l.call(e+"_eq",_,f),l.unreachable()),l.call(e+"_mul",d,r,m),l.if(l.call(e+"_eq",u,f),[...l.call(o+"_zero",p),...l.call(o+"_one",h),...l.call(e+"_mul",f,m,l.getLocal("pr"))],[...l.call(e+"_one",L),...l.call(e+"_add",L,u,L),...l.call(e+"_exp",L,s,l.i32_const(i),L),...l.call(e+"_mul",L,m,l.getLocal("pr"))]))}(),function(){const a=t.addFunction(e+"_isSquare");a.addParam("a","i32"),a.setReturnType("i32");const o=a.getCodeBuilder(),l=o.i32_const(t.alloc(wi.bigInt2BytesLE((BigInt(n||0)-3n)/4n,i))),c=o.getLocal("a"),s=o.i32_const(t.alloc(2*i)),r=o.i32_const(t.alloc(2*i)),d=o.i32_const(t.alloc(2*i)),u=t.alloc(2*i),_=o.i32_const(u);a.addCode(o.call(e+"_one",_),o.call(e+"_neg",_,_),o.call(e+"_exp",c,l,o.i32_const(i),s),o.call(e+"_square",s,r),o.call(e+"_mul",c,r,r),o.call(e+"_conjugate",r,d),o.call(e+"_mul",d,r,d),o.if(o.call(e+"_eq",d,_),o.ret(o.i32_const(0))),o.ret(o.i32_const(1)))}(),t.exportFunction(e+"_exp"),t.exportFunction(e+"_timesScalar"),t.exportFunction(e+"_batchInverse"),t.exportFunction(e+"_sqrt"),t.exportFunction(e+"_isSquare"),t.exportFunction(e+"_isNegative"),e};const Ai=Uo,Ci=Qo;var xi=function(t,a,e,o){if(t.modules[e])return e;const i=8*t.modules[o].n64;return t.modules[e]={n64:3*t.modules[o].n64},function(){const a=t.addFunction(e+"_isZero");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.i32_and(n.i32_and(n.call(o+"_isZero",l),n.call(o+"_isZero",c)),n.call(o+"_isZero",s)))}(),function(){const a=t.addFunction(e+"_isOne");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.ret(n.i32_and(n.i32_and(n.call(o+"_isOne",l),n.call(o+"_isZero",c)),n.call(o+"_isZero",s))))}(),function(){const a=t.addFunction(e+"_zero");a.addParam("x","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.call(o+"_zero",l),n.call(o+"_zero",c),n.call(o+"_zero",s))}(),function(){const a=t.addFunction(e+"_one");a.addParam("x","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.call(o+"_one",l),n.call(o+"_zero",c),n.call(o+"_zero",s))}(),function(){const a=t.addFunction(e+"_copy");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_copy",l,r),n.call(o+"_copy",c,d),n.call(o+"_copy",s,u))}(),function(){const n=t.addFunction(e+"_mul");n.addParam("x","i32"),n.addParam("y","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.i32_add(l.getLocal("x"),l.i32_const(2*i)),d=l.getLocal("y"),u=l.i32_add(l.getLocal("y"),l.i32_const(i)),_=l.i32_add(l.getLocal("y"),l.i32_const(2*i)),g=l.getLocal("r"),f=l.i32_add(l.getLocal("r"),l.i32_const(i)),p=l.i32_add(l.getLocal("r"),l.i32_const(2*i)),h=l.i32_const(t.alloc(i)),m=l.i32_const(t.alloc(i)),L=l.i32_const(t.alloc(i)),b=l.i32_const(t.alloc(i)),w=l.i32_const(t.alloc(i)),y=l.i32_const(t.alloc(i)),A=l.i32_const(t.alloc(i)),C=l.i32_const(t.alloc(i)),x=l.i32_const(t.alloc(i)),F=l.i32_const(t.alloc(i)),I=l.i32_const(t.alloc(i)),B=l.i32_const(t.alloc(i)),E=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_mul",c,d,h),l.call(o+"_mul",s,u,m),l.call(o+"_mul",r,_,L),l.call(o+"_add",c,s,b),l.call(o+"_add",d,u,w),l.call(o+"_add",c,r,y),l.call(o+"_add",d,_,A),l.call(o+"_add",s,r,C),l.call(o+"_add",u,_,x),l.call(o+"_add",h,m,F),l.call(o+"_add",h,L,I),l.call(o+"_add",m,L,B),l.call(o+"_mul",C,x,g),l.call(o+"_sub",g,B,g),l.call(a,g,g),l.call(o+"_add",h,g,g),l.call(o+"_mul",b,w,f),l.call(o+"_sub",f,F,f),l.call(a,L,E),l.call(o+"_add",f,E,f),l.call(o+"_mul",y,A,p),l.call(o+"_sub",p,I,p),l.call(o+"_add",p,m,p))}(),function(){const n=t.addFunction(e+"_square");n.addParam("x","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.i32_add(l.getLocal("x"),l.i32_const(2*i)),d=l.getLocal("r"),u=l.i32_add(l.getLocal("r"),l.i32_const(i)),_=l.i32_add(l.getLocal("r"),l.i32_const(2*i)),g=l.i32_const(t.alloc(i)),f=l.i32_const(t.alloc(i)),p=l.i32_const(t.alloc(i)),h=l.i32_const(t.alloc(i)),m=l.i32_const(t.alloc(i)),L=l.i32_const(t.alloc(i)),b=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_square",c,g),l.call(o+"_mul",c,s,f),l.call(o+"_add",f,f,p),l.call(o+"_sub",c,s,h),l.call(o+"_add",h,r,h),l.call(o+"_square",h,h),l.call(o+"_mul",s,r,m),l.call(o+"_add",m,m,L),l.call(o+"_square",r,b),l.call(a,L,d),l.call(o+"_add",g,d,d),l.call(a,b,u),l.call(o+"_add",p,u,u),l.call(o+"_add",g,b,_),l.call(o+"_sub",L,_,_),l.call(o+"_add",h,_,_),l.call(o+"_add",p,_,_))}(),function(){const a=t.addFunction(e+"_add");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("y"),d=n.i32_add(n.getLocal("y"),n.i32_const(i)),u=n.i32_add(n.getLocal("y"),n.i32_const(2*i)),_=n.getLocal("r"),g=n.i32_add(n.getLocal("r"),n.i32_const(i)),f=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_add",l,r,_),n.call(o+"_add",c,d,g),n.call(o+"_add",s,u,f))}(),function(){const a=t.addFunction(e+"_sub");a.addParam("x","i32"),a.addParam("y","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("y"),d=n.i32_add(n.getLocal("y"),n.i32_const(i)),u=n.i32_add(n.getLocal("y"),n.i32_const(2*i)),_=n.getLocal("r"),g=n.i32_add(n.getLocal("r"),n.i32_const(i)),f=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_sub",l,r,_),n.call(o+"_sub",c,d,g),n.call(o+"_sub",s,u,f))}(),function(){const a=t.addFunction(e+"_neg");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_neg",l,r),n.call(o+"_neg",c,d),n.call(o+"_neg",s,u))}(),function(){const a=t.addFunction(e+"_sign");a.addParam("x","i32"),a.addLocal("s","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.setLocal("s",n.call(o+"_sign",s)),n.if(n.getLocal("s"),n.ret(n.getLocal("s"))),n.setLocal("s",n.call(o+"_sign",c)),n.if(n.getLocal("s"),n.ret(n.getLocal("s"))),n.ret(n.call(o+"_sign",l)))}(),function(){const a=t.addFunction(e+"_toMontgomery");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_toMontgomery",l,r),n.call(o+"_toMontgomery",c,d),n.call(o+"_toMontgomery",s,u))}(),function(){const a=t.addFunction(e+"_fromMontgomery");a.addParam("x","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_fromMontgomery",l,r),n.call(o+"_fromMontgomery",c,d),n.call(o+"_fromMontgomery",s,u))}(),function(){const a=t.addFunction(e+"_eq");a.addParam("x","i32"),a.addParam("y","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("y"),d=n.i32_add(n.getLocal("y"),n.i32_const(i)),u=n.i32_add(n.getLocal("y"),n.i32_const(2*i));a.addCode(n.i32_and(n.i32_and(n.call(o+"_eq",l,r),n.call(o+"_eq",c,d)),n.call(o+"_eq",s,u)))}(),function(){const n=t.addFunction(e+"_inverse");n.addParam("x","i32"),n.addParam("r","i32");const l=n.getCodeBuilder(),c=l.getLocal("x"),s=l.i32_add(l.getLocal("x"),l.i32_const(i)),r=l.i32_add(l.getLocal("x"),l.i32_const(2*i)),d=l.getLocal("r"),u=l.i32_add(l.getLocal("r"),l.i32_const(i)),_=l.i32_add(l.getLocal("r"),l.i32_const(2*i)),g=l.i32_const(t.alloc(i)),f=l.i32_const(t.alloc(i)),p=l.i32_const(t.alloc(i)),h=l.i32_const(t.alloc(i)),m=l.i32_const(t.alloc(i)),L=l.i32_const(t.alloc(i)),b=l.i32_const(t.alloc(i)),w=l.i32_const(t.alloc(i)),y=l.i32_const(t.alloc(i)),A=l.i32_const(t.alloc(i)),C=l.i32_const(t.alloc(i));n.addCode(l.call(o+"_square",c,g),l.call(o+"_square",s,f),l.call(o+"_square",r,p),l.call(o+"_mul",c,s,h),l.call(o+"_mul",c,r,m),l.call(o+"_mul",s,r,L),l.call(a,L,b),l.call(o+"_sub",g,b,b),l.call(a,p,w),l.call(o+"_sub",w,h,w),l.call(o+"_sub",f,m,y),l.call(o+"_mul",r,w,A),l.call(o+"_mul",s,y,C),l.call(o+"_add",A,C,A),l.call(a,A,A),l.call(o+"_mul",c,b,C),l.call(o+"_add",C,A,A),l.call(o+"_inverse",A,A),l.call(o+"_mul",A,b,d),l.call(o+"_mul",A,w,u),l.call(o+"_mul",A,y,_))}(),function(){const a=t.addFunction(e+"_timesScalar");a.addParam("x","i32"),a.addParam("scalar","i32"),a.addParam("scalarLen","i32"),a.addParam("r","i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i)),r=n.getLocal("r"),d=n.i32_add(n.getLocal("r"),n.i32_const(i)),u=n.i32_add(n.getLocal("r"),n.i32_const(2*i));a.addCode(n.call(o+"_timesScalar",l,n.getLocal("scalar"),n.getLocal("scalarLen"),r),n.call(o+"_timesScalar",c,n.getLocal("scalar"),n.getLocal("scalarLen"),d),n.call(o+"_timesScalar",s,n.getLocal("scalar"),n.getLocal("scalarLen"),u))}(),function(){const a=t.addFunction(e+"_isNegative");a.addParam("x","i32"),a.setReturnType("i32");const n=a.getCodeBuilder(),l=n.getLocal("x"),c=n.i32_add(n.getLocal("x"),n.i32_const(i)),s=n.i32_add(n.getLocal("x"),n.i32_const(2*i));a.addCode(n.if(n.call(o+"_isZero",s),n.if(n.call(o+"_isZero",c),n.ret(n.call(o+"_isNegative",l)),n.ret(n.call(o+"_isNegative",c)))),n.ret(n.call(o+"_isNegative",s)))}(),t.exportFunction(e+"_isZero"),t.exportFunction(e+"_isOne"),t.exportFunction(e+"_zero"),t.exportFunction(e+"_one"),t.exportFunction(e+"_copy"),t.exportFunction(e+"_mul"),t.exportFunction(e+"_square"),t.exportFunction(e+"_add"),t.exportFunction(e+"_sub"),t.exportFunction(e+"_neg"),t.exportFunction(e+"_sign"),t.exportFunction(e+"_fromMontgomery"),t.exportFunction(e+"_toMontgomery"),t.exportFunction(e+"_eq"),t.exportFunction(e+"_inverse"),Ci(t,e),Ai(t,e+"_exp",3*i,e+"_mul",e+"_square",e+"_copy",e+"_one"),t.exportFunction(e+"_exp"),t.exportFunction(e+"_timesScalar"),t.exportFunction(e+"_batchInverse"),t.exportFunction(e+"_isNegative"),e};const Fi=function(t,a,e,o,i,n,l,c){const s=t.addFunction(a);s.addParam("base","i32"),s.addParam("scalar","i32"),s.addParam("scalarLength","i32"),s.addParam("r","i32"),s.addLocal("old0","i32"),s.addLocal("nbits","i32"),s.addLocal("i","i32"),s.addLocal("last","i32"),s.addLocal("cur","i32"),s.addLocal("carry","i32"),s.addLocal("p","i32");const r=s.getCodeBuilder(),d=r.i32_const(t.alloc(e));function u(t){return r.i32_and(r.i32_shr_u(r.i32_load(r.i32_add(r.getLocal("scalar"),r.i32_and(r.i32_shr_u(t,r.i32_const(3)),r.i32_const(4294967292)))),r.i32_and(t,r.i32_const(31))),r.i32_const(1))}function _(t){return[...r.i32_store8(r.getLocal("p"),r.i32_const(t)),...r.setLocal("p",r.i32_add(r.getLocal("p"),r.i32_const(1)))]}s.addCode(r.if(r.i32_eqz(r.getLocal("scalarLength")),[...r.call(c,r.getLocal("r")),...r.ret([])]),r.setLocal("nbits",r.i32_shl(r.getLocal("scalarLength"),r.i32_const(3))),r.setLocal("old0",r.i32_load(r.i32_const(0))),r.setLocal("p",r.getLocal("old0")),r.i32_store(r.i32_const(0),r.i32_and(r.i32_add(r.i32_add(r.getLocal("old0"),r.i32_const(32)),r.getLocal("nbits")),r.i32_const(4294967288))),r.setLocal("i",r.i32_const(1)),r.setLocal("last",u(r.i32_const(0))),r.setLocal("carry",r.i32_const(0)),r.block(r.loop(r.br_if(1,r.i32_eq(r.getLocal("i"),r.getLocal("nbits"))),r.setLocal("cur",u(r.getLocal("i"))),r.if(r.getLocal("last"),r.if(r.getLocal("cur"),r.if(r.getLocal("carry"),[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(1)),..._(1)],[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(1)),..._(255)]),r.if(r.getLocal("carry"),[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(1)),..._(255)],[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(0)),..._(1)])),r.if(r.getLocal("cur"),r.if(r.getLocal("carry"),[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(1)),..._(0)],[...r.setLocal("last",r.i32_const(1)),...r.setLocal("carry",r.i32_const(0)),..._(0)]),r.if(r.getLocal("carry"),[...r.setLocal("last",r.i32_const(1)),...r.setLocal("carry",r.i32_const(0)),..._(0)],[...r.setLocal("last",r.i32_const(0)),...r.setLocal("carry",r.i32_const(0)),..._(0)]))),r.setLocal("i",r.i32_add(r.getLocal("i"),r.i32_const(1))),r.br(0))),r.if(r.getLocal("last"),r.if(r.getLocal("carry"),[..._(255),..._(0),..._(1)],[..._(1)]),r.if(r.getLocal("carry"),[..._(0),..._(1)])),r.setLocal("p",r.i32_sub(r.getLocal("p"),r.i32_const(1))),r.call(l,r.getLocal("base"),d),r.call(c,r.getLocal("r")),r.block(r.loop(r.call(i,r.getLocal("r"),r.getLocal("r")),r.setLocal("cur",r.i32_load8_u(r.getLocal("p"))),r.if(r.getLocal("cur"),r.if(r.i32_eq(r.getLocal("cur"),r.i32_const(1)),r.call(o,r.getLocal("r"),d,r.getLocal("r")),r.call(n,r.getLocal("r"),d,r.getLocal("r")))),r.br_if(1,r.i32_eq(r.getLocal("old0"),r.getLocal("p"))),r.setLocal("p",r.i32_sub(r.getLocal("p"),r.i32_const(1))),r.br(0))),r.i32_store(r.i32_const(0),r.getLocal("old0")))},Ii=ko,Bi=function(t,a,e,o,i){const n=8*t.modules[a].n64;function l(){const o=t.addFunction(e);o.addParam("pBases","i32"),o.addParam("pScalars","i32"),o.addParam("scalarSize","i32"),o.addParam("n","i32"),o.addParam("pr","i32"),o.addLocal("chunkSize","i32"),o.addLocal("nChunks","i32"),o.addLocal("itScalar","i32"),o.addLocal("endScalar","i32"),o.addLocal("itBase","i32"),o.addLocal("itBit","i32"),o.addLocal("i","i32"),o.addLocal("j","i32"),o.addLocal("nTable","i32"),o.addLocal("pTable","i32"),o.addLocal("idx","i32"),o.addLocal("pIdxTable","i32");const i=o.getCodeBuilder(),l=i.i32_const(t.alloc(n)),c=t.alloc([17,17,17,17,17,17,17,17,17,17,16,16,15,14,13,13,12,11,10,9,8,7,7,6,5,4,3,2,1,1,1,1]);o.addCode(i.call(a+"_zero",i.getLocal("pr")),i.if(i.i32_eqz(i.getLocal("n")),i.ret([])),i.setLocal("chunkSize",i.i32_load8_u(i.i32_clz(i.getLocal("n")),c)),i.setLocal("nChunks",i.i32_add(i.i32_div_u(i.i32_sub(i.i32_shl(i.getLocal("scalarSize"),i.i32_const(3)),i.i32_const(1)),i.getLocal("chunkSize")),i.i32_const(1))),i.setLocal("itBit",i.i32_mul(i.i32_sub(i.getLocal("nChunks"),i.i32_const(1)),i.getLocal("chunkSize"))),i.block(i.loop(i.br_if(1,i.i32_lt_s(i.getLocal("itBit"),i.i32_const(0))),i.if(i.i32_eqz(i.call(a+"_isZero",i.getLocal("pr"))),[...i.setLocal("j",i.i32_const(0)),...i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("j"),i.getLocal("chunkSize"))),i.call(a+"_double",i.getLocal("pr"),i.getLocal("pr")),i.setLocal("j",i.i32_add(i.getLocal("j"),i.i32_const(1))),i.br(0)))]),i.call(e+"_chunk",i.getLocal("pBases"),i.getLocal("pScalars"),i.getLocal("scalarSize"),i.getLocal("n"),i.getLocal("itBit"),i.getLocal("chunkSize"),l),i.call(a+"_add",i.getLocal("pr"),l,i.getLocal("pr")),i.setLocal("itBit",i.i32_sub(i.getLocal("itBit"),i.getLocal("chunkSize"))),i.br(0))))}!function(){const a=t.addFunction(e+"_getChunk");a.addParam("pScalar","i32"),a.addParam("scalarSize","i32"),a.addParam("startBit","i32"),a.addParam("chunkSize","i32"),a.addLocal("bitsToEnd","i32"),a.addLocal("mask","i32"),a.setReturnType("i32");const o=a.getCodeBuilder();a.addCode(o.setLocal("bitsToEnd",o.i32_sub(o.i32_mul(o.getLocal("scalarSize"),o.i32_const(8)),o.getLocal("startBit"))),o.if(o.i32_gt_s(o.getLocal("chunkSize"),o.getLocal("bitsToEnd")),o.setLocal("mask",o.i32_sub(o.i32_shl(o.i32_const(1),o.getLocal("bitsToEnd")),o.i32_const(1))),o.setLocal("mask",o.i32_sub(o.i32_shl(o.i32_const(1),o.getLocal("chunkSize")),o.i32_const(1)))),o.i32_and(o.i32_shr_u(o.i32_load(o.i32_add(o.getLocal("pScalar"),o.i32_shr_u(o.getLocal("startBit"),o.i32_const(3))),0,0),o.i32_and(o.getLocal("startBit"),o.i32_const(7))),o.getLocal("mask")))}(),function(){const o=t.addFunction(e+"_reduceTable");o.addParam("pTable","i32"),o.addParam("p","i32"),o.addLocal("half","i32"),o.addLocal("it1","i32"),o.addLocal("it2","i32"),o.addLocal("pAcc","i32");const i=o.getCodeBuilder();o.addCode(i.if(i.i32_eq(i.getLocal("p"),i.i32_const(1)),i.ret([])),i.setLocal("half",i.i32_shl(i.i32_const(1),i.i32_sub(i.getLocal("p"),i.i32_const(1)))),i.setLocal("it1",i.getLocal("pTable")),i.setLocal("it2",i.i32_add(i.getLocal("pTable"),i.i32_mul(i.getLocal("half"),i.i32_const(n)))),i.setLocal("pAcc",i.i32_sub(i.getLocal("it2"),i.i32_const(n))),i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("it1"),i.getLocal("pAcc"))),i.call(a+"_add",i.getLocal("it1"),i.getLocal("it2"),i.getLocal("it1")),i.call(a+"_add",i.getLocal("pAcc"),i.getLocal("it2"),i.getLocal("pAcc")),i.setLocal("it1",i.i32_add(i.getLocal("it1"),i.i32_const(n))),i.setLocal("it2",i.i32_add(i.getLocal("it2"),i.i32_const(n))),i.br(0))),i.call(e+"_reduceTable",i.getLocal("pTable"),i.i32_sub(i.getLocal("p"),i.i32_const(1))),i.setLocal("p",i.i32_sub(i.getLocal("p"),i.i32_const(1))),i.block(i.loop(i.br_if(1,i.i32_eqz(i.getLocal("p"))),i.call(a+"_double",i.getLocal("pAcc"),i.getLocal("pAcc")),i.setLocal("p",i.i32_sub(i.getLocal("p"),i.i32_const(1))),i.br(0))),i.call(a+"_add",i.getLocal("pTable"),i.getLocal("pAcc"),i.getLocal("pTable")))}(),function(){const l=t.addFunction(e+"_chunk");l.addParam("pBases","i32"),l.addParam("pScalars","i32"),l.addParam("scalarSize","i32"),l.addParam("n","i32"),l.addParam("startBit","i32"),l.addParam("chunkSize","i32"),l.addParam("pr","i32"),l.addLocal("nChunks","i32"),l.addLocal("itScalar","i32"),l.addLocal("endScalar","i32"),l.addLocal("itBase","i32"),l.addLocal("i","i32"),l.addLocal("j","i32"),l.addLocal("nTable","i32"),l.addLocal("pTable","i32"),l.addLocal("idx","i32"),l.addLocal("pIdxTable","i32");const c=l.getCodeBuilder();l.addCode(c.if(c.i32_eqz(c.getLocal("n")),[...c.call(a+"_zero",c.getLocal("pr")),...c.ret([])]),c.setLocal("nTable",c.i32_shl(c.i32_const(1),c.getLocal("chunkSize"))),c.setLocal("pTable",c.i32_load(c.i32_const(0))),c.i32_store(c.i32_const(0),c.i32_add(c.getLocal("pTable"),c.i32_mul(c.getLocal("nTable"),c.i32_const(n)))),c.setLocal("j",c.i32_const(0)),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("j"),c.getLocal("nTable"))),c.call(a+"_zero",c.i32_add(c.getLocal("pTable"),c.i32_mul(c.getLocal("j"),c.i32_const(n)))),c.setLocal("j",c.i32_add(c.getLocal("j"),c.i32_const(1))),c.br(0))),c.setLocal("itBase",c.getLocal("pBases")),c.setLocal("itScalar",c.getLocal("pScalars")),c.setLocal("endScalar",c.i32_add(c.getLocal("pScalars"),c.i32_mul(c.getLocal("n"),c.getLocal("scalarSize")))),c.block(c.loop(c.br_if(1,c.i32_eq(c.getLocal("itScalar"),c.getLocal("endScalar"))),c.setLocal("idx",c.call(e+"_getChunk",c.getLocal("itScalar"),c.getLocal("scalarSize"),c.getLocal("startBit"),c.getLocal("chunkSize"))),c.if(c.getLocal("idx"),[...c.setLocal("pIdxTable",c.i32_add(c.getLocal("pTable"),c.i32_mul(c.i32_sub(c.getLocal("idx"),c.i32_const(1)),c.i32_const(n)))),...c.call(o,c.getLocal("pIdxTable"),c.getLocal("itBase"),c.getLocal("pIdxTable"))]),c.setLocal("itScalar",c.i32_add(c.getLocal("itScalar"),c.getLocal("scalarSize"))),c.setLocal("itBase",c.i32_add(c.getLocal("itBase"),c.i32_const(i))),c.br(0))),c.call(e+"_reduceTable",c.getLocal("pTable"),c.getLocal("chunkSize")),c.call(a+"_copy",c.getLocal("pTable"),c.getLocal("pr")),c.i32_store(c.i32_const(0),c.getLocal("pTable")))}(),l(),t.exportFunction(e),t.exportFunction(e+"_chunk")};var Ei=function(t,a,e,o){const i=t.modules[e].n64,n=8*i;if(t.modules[a])return a;return t.modules[a]={n64:3*i},function(){const o=t.addFunction(a+"_isZeroAffine");o.addParam("p1","i32"),o.setReturnType("i32");const i=o.getCodeBuilder();o.addCode(i.i32_and(i.call(e+"_isZero",i.getLocal("p1")),i.call(e+"_isZero",i.i32_add(i.getLocal("p1"),i.i32_const(n)))))}(),function(){const o=t.addFunction(a+"_isZero");o.addParam("p1","i32"),o.setReturnType("i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_isZero",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))))}(),function(){const o=t.addFunction(a+"_zeroAffine");o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_zero",i.getLocal("pr"))),o.addCode(i.call(e+"_zero",i.i32_add(i.getLocal("pr"),i.i32_const(n))))}(),function(){const o=t.addFunction(a+"_zero");o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_zero",i.getLocal("pr"))),o.addCode(i.call(e+"_one",i.i32_add(i.getLocal("pr"),i.i32_const(n)))),o.addCode(i.call(e+"_zero",i.i32_add(i.getLocal("pr"),i.i32_const(2*n))))}(),function(){const e=t.addFunction(a+"_copyAffine");e.addParam("ps","i32"),e.addParam("pd","i32");const o=e.getCodeBuilder();for(let t=0;t<2*i;t++)e.addCode(o.i64_store(o.getLocal("pd"),8*t,o.i64_load(o.getLocal("ps"),8*t)))}(),function(){const e=t.addFunction(a+"_copy");e.addParam("ps","i32"),e.addParam("pd","i32");const o=e.getCodeBuilder();for(let t=0;t<3*i;t++)e.addCode(o.i64_store(o.getLocal("pd"),8*t,o.i64_load(o.getLocal("ps"),8*t)))}(),function(){const o=t.addFunction(a+"_toJacobian");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.getLocal("pr"),r=i.i32_add(i.getLocal("pr"),i.i32_const(n)),d=i.i32_add(i.getLocal("pr"),i.i32_const(2*n));o.addCode(i.if(i.call(a+"_isZeroAffine",i.getLocal("p1")),i.call(a+"_zero",i.getLocal("pr")),[...i.call(e+"_one",d),...i.call(e+"_copy",c,r),...i.call(e+"_copy",l,s)]))}(),function(){const o=t.addFunction(a+"_eqAffine");o.addParam("p1","i32"),o.addParam("p2","i32"),o.setReturnType("i32"),o.addLocal("z1","i32");const i=o.getCodeBuilder();o.addCode(i.ret(i.i32_and(i.call(e+"_eq",i.getLocal("p1"),i.getLocal("p2")),i.call(e+"_eq",i.i32_add(i.getLocal("p1"),i.i32_const(n)),i.i32_add(i.getLocal("p2"),i.i32_const(n))))))}(),function(){const o=t.addFunction(a+"_eqMixed");o.addParam("p1","i32"),o.addParam("p2","i32"),o.setReturnType("i32"),o.addLocal("z1","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n));o.addCode(i.setLocal("z1",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))));const s=i.getLocal("z1"),r=i.getLocal("p2"),d=i.i32_add(i.getLocal("p2"),i.i32_const(n)),u=i.i32_const(t.alloc(n)),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),i.ret(i.call(a+"_isZeroAffine",i.getLocal("p2")))),i.if(i.call(a+"_isZeroAffine",i.getLocal("p2")),i.ret(i.i32_const(0))),i.if(i.call(e+"_isOne",s),i.ret(i.call(a+"_eqAffine",i.getLocal("p1"),i.getLocal("p2")))),i.call(e+"_square",s,u),i.call(e+"_mul",r,u,_),i.call(e+"_mul",s,u,g),i.call(e+"_mul",d,g,f),i.if(i.call(e+"_eq",l,_),i.if(i.call(e+"_eq",c,f),i.ret(i.i32_const(1)))),i.ret(i.i32_const(0)))}(),function(){const o=t.addFunction(a+"_eq");o.addParam("p1","i32"),o.addParam("p2","i32"),o.setReturnType("i32"),o.addLocal("z1","i32"),o.addLocal("z2","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n));o.addCode(i.setLocal("z1",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))));const s=i.getLocal("z1"),r=i.getLocal("p2"),d=i.i32_add(i.getLocal("p2"),i.i32_const(n));o.addCode(i.setLocal("z2",i.i32_add(i.getLocal("p2"),i.i32_const(2*n))));const u=i.getLocal("z2"),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n)),m=i.i32_const(t.alloc(n)),L=i.i32_const(t.alloc(n)),b=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),i.ret(i.call(a+"_isZero",i.getLocal("p2")))),i.if(i.call(a+"_isZero",i.getLocal("p2")),i.ret(i.i32_const(0))),i.if(i.call(e+"_isOne",s),i.ret(i.call(a+"_eqMixed",i.getLocal("p2"),i.getLocal("p1")))),i.if(i.call(e+"_isOne",u),i.ret(i.call(a+"_eqMixed",i.getLocal("p1"),i.getLocal("p2")))),i.call(e+"_square",s,_),i.call(e+"_square",u,g),i.call(e+"_mul",l,g,f),i.call(e+"_mul",r,_,p),i.call(e+"_mul",s,_,h),i.call(e+"_mul",u,g,m),i.call(e+"_mul",c,m,L),i.call(e+"_mul",d,h,b),i.if(i.call(e+"_eq",f,p),i.if(i.call(e+"_eq",L,b),i.ret(i.i32_const(1)))),i.ret(i.i32_const(0)))}(),function(){const o=t.addFunction(a+"_doubleAffine");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.getLocal("pr"),r=i.i32_add(i.getLocal("pr"),i.i32_const(n)),d=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),u=i.i32_const(t.alloc(n)),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZeroAffine",i.getLocal("p1")),[...i.call(a+"_toJacobian",i.getLocal("p1"),i.getLocal("pr")),...i.ret([])]),i.call(e+"_square",l,u),i.call(e+"_square",c,_),i.call(e+"_square",_,g),i.call(e+"_add",l,_,f),i.call(e+"_square",f,f),i.call(e+"_sub",f,u,f),i.call(e+"_sub",f,g,f),i.call(e+"_add",f,f,f),i.call(e+"_add",u,u,p),i.call(e+"_add",p,u,p),i.call(e+"_add",c,c,d),i.call(e+"_square",p,s),i.call(e+"_sub",s,f,s),i.call(e+"_sub",s,f,s),i.call(e+"_add",g,g,h),i.call(e+"_add",h,h,h),i.call(e+"_add",h,h,h),i.call(e+"_sub",f,s,r),i.call(e+"_mul",r,p,r),i.call(e+"_sub",r,h,r))}(),function(){const o=t.addFunction(a+"_double");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.i32_add(i.getLocal("p1"),i.i32_const(2*n)),r=i.getLocal("pr"),d=i.i32_add(i.getLocal("pr"),i.i32_const(n)),u=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n)),m=i.i32_const(t.alloc(n)),L=i.i32_const(t.alloc(n)),b=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),[...i.call(a+"_copy",i.getLocal("p1"),i.getLocal("pr")),...i.ret([])]),i.if(i.call(e+"_isOne",s),[...i.ret(i.call(a+"_doubleAffine",i.getLocal("p1"),i.getLocal("pr"))),...i.ret([])]),i.call(e+"_square",l,_),i.call(e+"_square",c,g),i.call(e+"_square",g,f),i.call(e+"_add",l,g,p),i.call(e+"_square",p,p),i.call(e+"_sub",p,_,p),i.call(e+"_sub",p,f,p),i.call(e+"_add",p,p,p),i.call(e+"_add",_,_,h),i.call(e+"_add",h,_,h),i.call(e+"_square",h,m),i.call(e+"_mul",c,s,L),i.call(e+"_add",p,p,r),i.call(e+"_sub",m,r,r),i.call(e+"_add",f,f,b),i.call(e+"_add",b,b,b),i.call(e+"_add",b,b,b),i.call(e+"_sub",p,r,d),i.call(e+"_mul",d,h,d),i.call(e+"_sub",d,b,d),i.call(e+"_add",L,L,u))}(),function(){const o=t.addFunction(a+"_addAffine");o.addParam("p1","i32"),o.addParam("p2","i32"),o.addParam("pr","i32"),o.addLocal("z1","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n));o.addCode(i.setLocal("z1",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))));const s=i.getLocal("p2"),r=i.i32_add(i.getLocal("p2"),i.i32_const(n)),d=i.getLocal("pr"),u=i.i32_add(i.getLocal("pr"),i.i32_const(n)),_=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n)),m=i.i32_const(t.alloc(n)),L=i.i32_const(t.alloc(n)),b=i.i32_const(t.alloc(n)),w=i.i32_const(t.alloc(n)),y=i.i32_const(t.alloc(n)),A=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZeroAffine",i.getLocal("p1")),[...i.call(a+"_copyAffine",i.getLocal("p2"),i.getLocal("pr")),...i.call(e+"_one",i.i32_add(i.getLocal("pr"),i.i32_const(2*n))),...i.ret([])]),i.if(i.call(a+"_isZeroAffine",i.getLocal("p2")),[...i.call(a+"_copyAffine",i.getLocal("p1"),i.getLocal("pr")),...i.call(e+"_one",i.i32_add(i.getLocal("pr"),i.i32_const(2*n))),...i.ret([])]),i.if(i.call(e+"_eq",l,s),i.if(i.call(e+"_eq",c,r),[...i.call(a+"_doubleAffine",i.getLocal("p2"),i.getLocal("pr")),...i.ret([])])),i.call(e+"_sub",s,l,g),i.call(e+"_sub",r,c,p),i.call(e+"_square",g,f),i.call(e+"_add",f,f,h),i.call(e+"_add",h,h,h),i.call(e+"_mul",g,h,m),i.call(e+"_add",p,p,L),i.call(e+"_mul",l,h,w),i.call(e+"_square",L,b),i.call(e+"_add",w,w,y),i.call(e+"_sub",b,m,d),i.call(e+"_sub",d,y,d),i.call(e+"_mul",c,m,A),i.call(e+"_add",A,A,A),i.call(e+"_sub",w,d,u),i.call(e+"_mul",u,L,u),i.call(e+"_sub",u,A,u),i.call(e+"_add",g,g,_))}(),function(){const o=t.addFunction(a+"_addMixed");o.addParam("p1","i32"),o.addParam("p2","i32"),o.addParam("pr","i32"),o.addLocal("z1","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n));o.addCode(i.setLocal("z1",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))));const s=i.getLocal("z1"),r=i.getLocal("p2"),d=i.i32_add(i.getLocal("p2"),i.i32_const(n)),u=i.getLocal("pr"),_=i.i32_add(i.getLocal("pr"),i.i32_const(n)),g=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),f=i.i32_const(t.alloc(n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n)),m=i.i32_const(t.alloc(n)),L=i.i32_const(t.alloc(n)),b=i.i32_const(t.alloc(n)),w=i.i32_const(t.alloc(n)),y=i.i32_const(t.alloc(n)),A=i.i32_const(t.alloc(n)),C=i.i32_const(t.alloc(n)),x=i.i32_const(t.alloc(n)),F=i.i32_const(t.alloc(n)),I=i.i32_const(t.alloc(n)),B=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),[...i.call(a+"_copyAffine",i.getLocal("p2"),i.getLocal("pr")),...i.call(e+"_one",i.i32_add(i.getLocal("pr"),i.i32_const(2*n))),...i.ret([])]),i.if(i.call(a+"_isZeroAffine",i.getLocal("p2")),[...i.call(a+"_copy",i.getLocal("p1"),i.getLocal("pr")),...i.ret([])]),i.if(i.call(e+"_isOne",s),[...i.call(a+"_addAffine",l,r,u),...i.ret([])]),i.call(e+"_square",s,f),i.call(e+"_mul",r,f,p),i.call(e+"_mul",s,f,h),i.call(e+"_mul",d,h,m),i.if(i.call(e+"_eq",l,p),i.if(i.call(e+"_eq",c,m),[...i.call(a+"_doubleAffine",i.getLocal("p2"),i.getLocal("pr")),...i.ret([])])),i.call(e+"_sub",p,l,L),i.call(e+"_sub",m,c,w),i.call(e+"_square",L,b),i.call(e+"_add",b,b,y),i.call(e+"_add",y,y,y),i.call(e+"_mul",L,y,A),i.call(e+"_add",w,w,C),i.call(e+"_mul",l,y,F),i.call(e+"_square",C,x),i.call(e+"_add",F,F,I),i.call(e+"_sub",x,A,u),i.call(e+"_sub",u,I,u),i.call(e+"_mul",c,A,B),i.call(e+"_add",B,B,B),i.call(e+"_sub",F,u,_),i.call(e+"_mul",_,C,_),i.call(e+"_sub",_,B,_),i.call(e+"_add",s,L,g),i.call(e+"_square",g,g),i.call(e+"_sub",g,f,g),i.call(e+"_sub",g,b,g))}(),function(){const o=t.addFunction(a+"_add");o.addParam("p1","i32"),o.addParam("p2","i32"),o.addParam("pr","i32"),o.addLocal("z1","i32"),o.addLocal("z2","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n));o.addCode(i.setLocal("z1",i.i32_add(i.getLocal("p1"),i.i32_const(2*n))));const s=i.getLocal("z1"),r=i.getLocal("p2"),d=i.i32_add(i.getLocal("p2"),i.i32_const(n));o.addCode(i.setLocal("z2",i.i32_add(i.getLocal("p2"),i.i32_const(2*n))));const u=i.getLocal("z2"),_=i.getLocal("pr"),g=i.i32_add(i.getLocal("pr"),i.i32_const(n)),f=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),p=i.i32_const(t.alloc(n)),h=i.i32_const(t.alloc(n)),m=i.i32_const(t.alloc(n)),L=i.i32_const(t.alloc(n)),b=i.i32_const(t.alloc(n)),w=i.i32_const(t.alloc(n)),y=i.i32_const(t.alloc(n)),A=i.i32_const(t.alloc(n)),C=i.i32_const(t.alloc(n)),x=i.i32_const(t.alloc(n)),F=i.i32_const(t.alloc(n)),I=i.i32_const(t.alloc(n)),B=i.i32_const(t.alloc(n)),E=i.i32_const(t.alloc(n)),v=i.i32_const(t.alloc(n)),S=i.i32_const(t.alloc(n)),P=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),[...i.call(a+"_copy",i.getLocal("p2"),i.getLocal("pr")),...i.ret([])]),i.if(i.call(a+"_isZero",i.getLocal("p2")),[...i.call(a+"_copy",i.getLocal("p1"),i.getLocal("pr")),...i.ret([])]),i.if(i.call(e+"_isOne",s),[...i.call(a+"_addMixed",r,l,_),...i.ret([])]),i.if(i.call(e+"_isOne",u),[...i.call(a+"_addMixed",l,r,_),...i.ret([])]),i.call(e+"_square",s,p),i.call(e+"_square",u,h),i.call(e+"_mul",l,h,m),i.call(e+"_mul",r,p,L),i.call(e+"_mul",s,p,b),i.call(e+"_mul",u,h,w),i.call(e+"_mul",c,w,y),i.call(e+"_mul",d,b,A),i.if(i.call(e+"_eq",m,L),i.if(i.call(e+"_eq",y,A),[...i.call(a+"_double",i.getLocal("p1"),i.getLocal("pr")),...i.ret([])])),i.call(e+"_sub",L,m,C),i.call(e+"_sub",A,y,x),i.call(e+"_add",C,C,F),i.call(e+"_square",F,F),i.call(e+"_mul",C,F,I),i.call(e+"_add",x,x,B),i.call(e+"_mul",m,F,v),i.call(e+"_square",B,E),i.call(e+"_add",v,v,S),i.call(e+"_sub",E,I,_),i.call(e+"_sub",_,S,_),i.call(e+"_mul",y,I,P),i.call(e+"_add",P,P,P),i.call(e+"_sub",v,_,g),i.call(e+"_mul",g,B,g),i.call(e+"_sub",g,P,g),i.call(e+"_add",s,u,f),i.call(e+"_square",f,f),i.call(e+"_sub",f,p,f),i.call(e+"_sub",f,h,f),i.call(e+"_mul",f,C,f))}(),function(){const o=t.addFunction(a+"_negAffine");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.getLocal("pr"),r=i.i32_add(i.getLocal("pr"),i.i32_const(n));o.addCode(i.call(e+"_copy",l,s),i.call(e+"_neg",c,r))}(),function(){const o=t.addFunction(a+"_neg");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.i32_add(i.getLocal("p1"),i.i32_const(2*n)),r=i.getLocal("pr"),d=i.i32_add(i.getLocal("pr"),i.i32_const(n)),u=i.i32_add(i.getLocal("pr"),i.i32_const(2*n));o.addCode(i.call(e+"_copy",l,r),i.call(e+"_neg",c,d),i.call(e+"_copy",s,u))}(),function(){const e=t.addFunction(a+"_subAffine");e.addParam("p1","i32"),e.addParam("p2","i32"),e.addParam("pr","i32");const o=e.getCodeBuilder(),i=o.i32_const(t.alloc(3*n));e.addCode(o.call(a+"_negAffine",o.getLocal("p2"),i),o.call(a+"_addAffine",o.getLocal("p1"),i,o.getLocal("pr")))}(),function(){const e=t.addFunction(a+"_subMixed");e.addParam("p1","i32"),e.addParam("p2","i32"),e.addParam("pr","i32");const o=e.getCodeBuilder(),i=o.i32_const(t.alloc(3*n));e.addCode(o.call(a+"_negAffine",o.getLocal("p2"),i),o.call(a+"_addMixed",o.getLocal("p1"),i,o.getLocal("pr")))}(),function(){const e=t.addFunction(a+"_sub");e.addParam("p1","i32"),e.addParam("p2","i32"),e.addParam("pr","i32");const o=e.getCodeBuilder(),i=o.i32_const(t.alloc(3*n));e.addCode(o.call(a+"_neg",o.getLocal("p2"),i),o.call(a+"_add",o.getLocal("p1"),i,o.getLocal("pr")))}(),function(){const o=t.addFunction(a+"_fromMontgomeryAffine");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_fromMontgomery",i.getLocal("p1"),i.getLocal("pr")));for(let t=1;t<2;t++)o.addCode(i.call(e+"_fromMontgomery",i.i32_add(i.getLocal("p1"),i.i32_const(t*n)),i.i32_add(i.getLocal("pr"),i.i32_const(t*n))))}(),function(){const o=t.addFunction(a+"_fromMontgomery");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_fromMontgomery",i.getLocal("p1"),i.getLocal("pr")));for(let t=1;t<3;t++)o.addCode(i.call(e+"_fromMontgomery",i.i32_add(i.getLocal("p1"),i.i32_const(t*n)),i.i32_add(i.getLocal("pr"),i.i32_const(t*n))))}(),function(){const o=t.addFunction(a+"_toMontgomeryAffine");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_toMontgomery",i.getLocal("p1"),i.getLocal("pr")));for(let t=1;t<2;t++)o.addCode(i.call(e+"_toMontgomery",i.i32_add(i.getLocal("p1"),i.i32_const(t*n)),i.i32_add(i.getLocal("pr"),i.i32_const(t*n))))}(),function(){const o=t.addFunction(a+"_toMontgomery");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder();o.addCode(i.call(e+"_toMontgomery",i.getLocal("p1"),i.getLocal("pr")));for(let t=1;t<3;t++)o.addCode(i.call(e+"_toMontgomery",i.i32_add(i.getLocal("p1"),i.i32_const(t*n)),i.i32_add(i.getLocal("pr"),i.i32_const(t*n))))}(),function(){const o=t.addFunction(a+"_toAffine");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.i32_add(i.getLocal("p1"),i.i32_const(2*n)),r=i.getLocal("pr"),d=i.i32_add(i.getLocal("pr"),i.i32_const(n)),u=i.i32_const(t.alloc(n)),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),[...i.call(e+"_zero",r),...i.call(e+"_zero",d)],[...i.call(e+"_inverse",s,u),...i.call(e+"_square",u,_),...i.call(e+"_mul",u,_,g),...i.call(e+"_mul",l,_,r),...i.call(e+"_mul",c,g,d)]))}(),function(){const i=t.addFunction(a+"_inCurveAffine");i.addParam("pIn","i32"),i.setReturnType("i32");const l=i.getCodeBuilder(),c=l.getLocal("pIn"),s=l.i32_add(l.getLocal("pIn"),l.i32_const(n)),r=l.i32_const(t.alloc(n)),d=l.i32_const(t.alloc(n));i.addCode(l.call(e+"_square",s,r),l.call(e+"_square",c,d),l.call(e+"_mul",c,d,d),l.call(e+"_add",d,l.i32_const(o),d),l.ret(l.call(e+"_eq",r,d)))}(),function(){const e=t.addFunction(a+"_inCurve");e.addParam("pIn","i32"),e.setReturnType("i32");const o=e.getCodeBuilder(),i=o.i32_const(t.alloc(2*n));e.addCode(o.call(a+"_toAffine",o.getLocal("pIn"),i),o.ret(o.call(a+"_inCurveAffine",i)))}(),function(){const o=t.addFunction(a+"_batchToAffine");o.addParam("pIn","i32"),o.addParam("n","i32"),o.addParam("pOut","i32"),o.addLocal("pAux","i32"),o.addLocal("itIn","i32"),o.addLocal("itAux","i32"),o.addLocal("itOut","i32"),o.addLocal("i","i32");const i=o.getCodeBuilder(),l=i.i32_const(t.alloc(n));o.addCode(i.setLocal("pAux",i.i32_load(i.i32_const(0))),i.i32_store(i.i32_const(0),i.i32_add(i.getLocal("pAux"),i.i32_mul(i.getLocal("n"),i.i32_const(n)))),i.call(e+"_batchInverse",i.i32_add(i.getLocal("pIn"),i.i32_const(2*n)),i.i32_const(3*n),i.getLocal("n"),i.getLocal("pAux"),i.i32_const(n)),i.setLocal("itIn",i.getLocal("pIn")),i.setLocal("itAux",i.getLocal("pAux")),i.setLocal("itOut",i.getLocal("pOut")),i.setLocal("i",i.i32_const(0)),i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("i"),i.getLocal("n"))),i.if(i.call(e+"_isZero",i.getLocal("itAux")),[...i.call(e+"_zero",i.getLocal("itOut")),...i.call(e+"_zero",i.i32_add(i.getLocal("itOut"),i.i32_const(n)))],[...i.call(e+"_mul",i.getLocal("itAux"),i.i32_add(i.getLocal("itIn"),i.i32_const(n)),l),...i.call(e+"_square",i.getLocal("itAux"),i.getLocal("itAux")),...i.call(e+"_mul",i.getLocal("itAux"),i.getLocal("itIn"),i.getLocal("itOut")),...i.call(e+"_mul",i.getLocal("itAux"),l,i.i32_add(i.getLocal("itOut"),i.i32_const(n)))]),i.setLocal("itIn",i.i32_add(i.getLocal("itIn"),i.i32_const(3*n))),i.setLocal("itOut",i.i32_add(i.getLocal("itOut"),i.i32_const(2*n))),i.setLocal("itAux",i.i32_add(i.getLocal("itAux"),i.i32_const(n))),i.setLocal("i",i.i32_add(i.getLocal("i"),i.i32_const(1))),i.br(0))),i.i32_store(i.i32_const(0),i.getLocal("pAux")))}(),function(){const o=t.addFunction(a+"_normalize");o.addParam("p1","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),l=i.getLocal("p1"),c=i.i32_add(i.getLocal("p1"),i.i32_const(n)),s=i.i32_add(i.getLocal("p1"),i.i32_const(2*n)),r=i.getLocal("pr"),d=i.i32_add(i.getLocal("pr"),i.i32_const(n)),u=i.i32_add(i.getLocal("pr"),i.i32_const(2*n)),_=i.i32_const(t.alloc(n)),g=i.i32_const(t.alloc(n)),f=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZero",i.getLocal("p1")),i.call(a+"_zero",i.getLocal("pr")),[...i.call(e+"_inverse",s,_),...i.call(e+"_square",_,g),...i.call(e+"_mul",_,g,f),...i.call(e+"_mul",l,g,r),...i.call(e+"_mul",c,f,d),...i.call(e+"_one",u)]))}(),function(){const e=t.addFunction(a+"__reverseBytes");e.addParam("pIn","i32"),e.addParam("n","i32"),e.addParam("pOut","i32"),e.addLocal("itOut","i32"),e.addLocal("itIn","i32");const o=e.getCodeBuilder();e.addCode(o.setLocal("itOut",o.i32_sub(o.i32_add(o.getLocal("pOut"),o.getLocal("n")),o.i32_const(1))),o.setLocal("itIn",o.getLocal("pIn")),o.block(o.loop(o.br_if(1,o.i32_lt_s(o.getLocal("itOut"),o.getLocal("pOut"))),o.i32_store8(o.getLocal("itOut"),o.i32_load8_u(o.getLocal("itIn"))),o.setLocal("itOut",o.i32_sub(o.getLocal("itOut"),o.i32_const(1))),o.setLocal("itIn",o.i32_add(o.getLocal("itIn"),o.i32_const(1))),o.br(0))))}(),function(){const e=t.addFunction(a+"_LEMtoU");e.addParam("pIn","i32"),e.addParam("pOut","i32");const o=e.getCodeBuilder(),i=t.alloc(2*n),l=o.i32_const(i),c=o.i32_const(i),s=o.i32_const(i+n);e.addCode(o.if(o.call(a+"_isZeroAffine",o.getLocal("pIn")),[...o.call(a+"_zeroAffine",o.getLocal("pOut")),...o.ret([])]),o.call(a+"_fromMontgomeryAffine",o.getLocal("pIn"),l),o.call(a+"__reverseBytes",c,o.i32_const(n),o.getLocal("pOut")),o.call(a+"__reverseBytes",s,o.i32_const(n),o.i32_add(o.getLocal("pOut"),o.i32_const(n))))}(),function(){const o=t.addFunction(a+"_LEMtoC");o.addParam("pIn","i32"),o.addParam("pOut","i32");const i=o.getCodeBuilder(),l=i.i32_const(t.alloc(n));o.addCode(i.if(i.call(a+"_isZeroAffine",i.getLocal("pIn")),[...i.call(e+"_zero",i.getLocal("pOut")),...i.i32_store8(i.getLocal("pOut"),i.i32_const(64)),...i.ret([])]),i.call(e+"_fromMontgomery",i.getLocal("pIn"),l),i.call(a+"__reverseBytes",l,i.i32_const(n),i.getLocal("pOut")),i.if(i.i32_eq(i.call(e+"_sign",i.i32_add(i.getLocal("pIn"),i.i32_const(n))),i.i32_const(-1)),i.i32_store8(i.getLocal("pOut"),i.i32_or(i.i32_load8_u(i.getLocal("pOut")),i.i32_const(128)))))}(),function(){const e=t.addFunction(a+"_UtoLEM");e.addParam("pIn","i32"),e.addParam("pOut","i32");const o=e.getCodeBuilder(),i=t.alloc(2*n),l=o.i32_const(i),c=o.i32_const(i),s=o.i32_const(i+n);e.addCode(o.if(o.i32_and(o.i32_load8_u(o.getLocal("pIn")),o.i32_const(64)),[...o.call(a+"_zeroAffine",o.getLocal("pOut")),...o.ret([])]),o.call(a+"__reverseBytes",o.getLocal("pIn"),o.i32_const(n),c),o.call(a+"__reverseBytes",o.i32_add(o.getLocal("pIn"),o.i32_const(n)),o.i32_const(n),s),o.call(a+"_toMontgomeryAffine",l,o.getLocal("pOut")))}(),function(){const i=t.addFunction(a+"_CtoLEM");i.addParam("pIn","i32"),i.addParam("pOut","i32"),i.addLocal("firstByte","i32"),i.addLocal("greatest","i32");const l=i.getCodeBuilder(),c=t.alloc(2*n),s=l.i32_const(c),r=l.i32_const(c+n);i.addCode(l.setLocal("firstByte",l.i32_load8_u(l.getLocal("pIn"))),l.if(l.i32_and(l.getLocal("firstByte"),l.i32_const(64)),[...l.call(a+"_zeroAffine",l.getLocal("pOut")),...l.ret([])]),l.setLocal("greatest",l.i32_and(l.getLocal("firstByte"),l.i32_const(128))),l.call(e+"_copy",l.getLocal("pIn"),r),l.i32_store8(r,l.i32_and(l.getLocal("firstByte"),l.i32_const(63))),l.call(a+"__reverseBytes",r,l.i32_const(n),s),l.call(e+"_toMontgomery",s,l.getLocal("pOut")),l.call(e+"_square",l.getLocal("pOut"),r),l.call(e+"_mul",l.getLocal("pOut"),r,r),l.call(e+"_add",r,l.i32_const(o),r),l.call(e+"_sqrt",r,r),l.call(e+"_neg",r,s),l.if(l.i32_eq(l.call(e+"_sign",r),l.i32_const(-1)),l.if(l.getLocal("greatest"),l.call(e+"_copy",r,l.i32_add(l.getLocal("pOut"),l.i32_const(n))),l.call(e+"_neg",r,l.i32_add(l.getLocal("pOut"),l.i32_const(n)))),l.if(l.getLocal("greatest"),l.call(e+"_neg",r,l.i32_add(l.getLocal("pOut"),l.i32_const(n))),l.call(e+"_copy",r,l.i32_add(l.getLocal("pOut"),l.i32_const(n))))))}(),Ii(t,a+"_batchLEMtoU",a+"_LEMtoU",2*n,2*n),Ii(t,a+"_batchLEMtoC",a+"_LEMtoC",2*n,n),Ii(t,a+"_batchUtoLEM",a+"_UtoLEM",2*n,2*n),Ii(t,a+"_batchCtoLEM",a+"_CtoLEM",n,2*n,!0),Ii(t,a+"_batchToJacobian",a+"_toJacobian",2*n,3*n,!0),Bi(t,a,a+"_multiexp",a+"_add",3*n),Bi(t,a,a+"_multiexpAffine",a+"_addMixed",2*n),Fi(t,a+"_timesScalar",3*n,a+"_add",a+"_double",a+"_sub",a+"_copy",a+"_zero"),Fi(t,a+"_timesScalarAffine",2*n,a+"_addMixed",a+"_double",a+"_subMixed",a+"_copyAffine",a+"_zero"),t.exportFunction(a+"_isZero"),t.exportFunction(a+"_isZeroAffine"),t.exportFunction(a+"_eq"),t.exportFunction(a+"_eqMixed"),t.exportFunction(a+"_eqAffine"),t.exportFunction(a+"_copy"),t.exportFunction(a+"_copyAffine"),t.exportFunction(a+"_zero"),t.exportFunction(a+"_zeroAffine"),t.exportFunction(a+"_double"),t.exportFunction(a+"_doubleAffine"),t.exportFunction(a+"_add"),t.exportFunction(a+"_addMixed"),t.exportFunction(a+"_addAffine"),t.exportFunction(a+"_neg"),t.exportFunction(a+"_negAffine"),t.exportFunction(a+"_sub"),t.exportFunction(a+"_subMixed"),t.exportFunction(a+"_subAffine"),t.exportFunction(a+"_fromMontgomery"),t.exportFunction(a+"_fromMontgomeryAffine"),t.exportFunction(a+"_toMontgomery"),t.exportFunction(a+"_toMontgomeryAffine"),t.exportFunction(a+"_timesScalar"),t.exportFunction(a+"_timesScalarAffine"),t.exportFunction(a+"_normalize"),t.exportFunction(a+"_LEMtoU"),t.exportFunction(a+"_LEMtoC"),t.exportFunction(a+"_UtoLEM"),t.exportFunction(a+"_CtoLEM"),t.exportFunction(a+"_batchLEMtoU"),t.exportFunction(a+"_batchLEMtoC"),t.exportFunction(a+"_batchUtoLEM"),t.exportFunction(a+"_batchCtoLEM"),t.exportFunction(a+"_toAffine"),t.exportFunction(a+"_toJacobian"),t.exportFunction(a+"_batchToAffine"),t.exportFunction(a+"_batchToJacobian"),t.exportFunction(a+"_inCurve"),t.exportFunction(a+"_inCurveAffine"),a};const{isOdd:vi,modInv:Si,modPow:Pi}=No,Oi=Mo;var qi=function(t,a,e,o,i){const n=8*t.modules[o].n64,l=8*t.modules[e].n64,c=t.modules[o].q;let s=c-1n,r=0;for(;!vi(s);)r++,s>>=1n;let d=2n;for(;1n===Pi(d,c>>1n,c);)d+=1n;const u=new Array(r+1);u[r]=Pi(d,s,c);let _=r-1;for(;_>=0;)u[_]=Pi(u[_+1],2n,c),_--;const g=[],f=(1n<<BigInt(8*n))%c;for(let t=0;t<u.length;t++){const a=u[t]*f%c;g.push(...Oi.bigInt2BytesLE(a,n))}const p=t.alloc(g),h=new Array(r+1);h[0]=1n;for(let t=1;t<=r;t++)h[t]=2n*h[t-1];const m=[];for(let t=0;t<=r;t++){const a=Si(h[t],c)*f%c;m.push(...Oi.bigInt2BytesLE(a,n))}const L=t.alloc(m),b=Pi(d,2n,c),w=[],y=[];for(let t=0;t<=r;t++){const a=Pi(b,2n**BigInt(t),c),e=Si(c+1n-a,c);w.push(...Oi.bigInt2BytesLE(a*f%c,n)),y.push(...Oi.bigInt2BytesLE(e*f%c,n))}const A=t.alloc(w),C=t.alloc(y);function x(t){let a=0;for(let e=0;e<8;e++)t&1<<e&&(a|=128>>e);return a}const F=Array(256);for(let t=0;t<256;t++)F[t]=x(t);const I=t.alloc(F);function B(){const e=t.addFunction(a+"_fft");e.addParam("px","i32"),e.addParam("n","i32"),e.addLocal("bits","i32");const i=e.getCodeBuilder(),l=i.i32_const(t.alloc(n));e.addCode(i.setLocal("bits",i.call(a+"__log2",i.getLocal("n"))),i.call(o+"_one",l),i.call(a+"_rawfft",i.getLocal("px"),i.getLocal("bits"),i.i32_const(0),l))}!function(){const e=t.addFunction(a+"__rev");e.addParam("x","i32"),e.addParam("bits","i32"),e.setReturnType("i32");const o=e.getCodeBuilder();e.addCode(o.i32_rotl(o.i32_add(o.i32_add(o.i32_shl(o.i32_load8_u(o.i32_and(o.getLocal("x"),o.i32_const(255)),I,0),o.i32_const(24)),o.i32_shl(o.i32_load8_u(o.i32_and(o.i32_shr_u(o.getLocal("x"),o.i32_const(8)),o.i32_const(255)),I,0),o.i32_const(16))),o.i32_add(o.i32_shl(o.i32_load8_u(o.i32_and(o.i32_shr_u(o.getLocal("x"),o.i32_const(16)),o.i32_const(255)),I,0),o.i32_const(8)),o.i32_load8_u(o.i32_and(o.i32_shr_u(o.getLocal("x"),o.i32_const(24)),o.i32_const(255)),I,0))),o.getLocal("bits")))}(),function(){const o=t.addFunction(a+"__reversePermutation");o.addParam("px","i32"),o.addParam("bits","i32"),o.addLocal("n","i32"),o.addLocal("i","i32"),o.addLocal("ri","i32"),o.addLocal("idx1","i32"),o.addLocal("idx2","i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(l));o.addCode(i.setLocal("n",i.i32_shl(i.i32_const(1),i.getLocal("bits"))),i.setLocal("i",i.i32_const(0)),i.block(i.loop(i.br_if(1,i.i32_eq(i.getLocal("i"),i.getLocal("n"))),i.setLocal("idx1",i.i32_add(i.getLocal("px"),i.i32_mul(i.getLocal("i"),i.i32_const(l)))),i.setLocal("ri",i.call(a+"__rev",i.getLocal("i"),i.getLocal("bits"))),i.setLocal("idx2",i.i32_add(i.getLocal("px"),i.i32_mul(i.getLocal("ri"),i.i32_const(l)))),i.if(i.i32_lt_u(i.getLocal("i"),i.getLocal("ri")),[...i.call(e+"_copy",i.getLocal("idx1"),n),...i.call(e+"_copy",i.getLocal("idx2"),i.getLocal("idx1")),...i.call(e+"_copy",n,i.getLocal("idx2"))]),i.setLocal("i",i.i32_add(i.getLocal("i"),i.i32_const(1))),i.br(0))))}(),function(){const n=t.addFunction(a+"__fftFinal");n.addParam("px","i32"),n.addParam("bits","i32"),n.addParam("reverse","i32"),n.addParam("mulFactor","i32"),n.addLocal("n","i32"),n.addLocal("ndiv2","i32"),n.addLocal("pInv2","i32"),n.addLocal("i","i32"),n.addLocal("mask","i32"),n.addLocal("idx1","i32"),n.addLocal("idx2","i32");const c=n.getCodeBuilder(),s=c.i32_const(t.alloc(l));n.addCode(c.if(c.i32_and(c.i32_eqz(c.getLocal("reverse")),c.call(o+"_isOne",c.getLocal("mulFactor"))),c.ret([])),c.setLocal("n",c.i32_shl(c.i32_const(1),c.getLocal("bits"))),c.setLocal("mask",c.i32_sub(c.getLocal("n"),c.i32_const(1))),c.setLocal("i",c.i32_const(1)),c.setLocal("ndiv2",c.i32_shr_u(c.getLocal("n"),c.i32_const(1))),c.block(c.loop(c.br_if(1,c.i32_ge_u(c.getLocal("i"),c.getLocal("ndiv2"))),c.setLocal("idx1",c.i32_add(c.getLocal("px"),c.i32_mul(c.getLocal("i"),c.i32_const(l)))),c.setLocal("idx2",c.i32_add(c.getLocal("px"),c.i32_mul(c.i32_sub(c.getLocal("n"),c.getLocal("i")),c.i32_const(l)))),c.if(c.getLocal("reverse"),c.if(c.call(o+"_isOne",c.getLocal("mulFactor")),[...c.call(e+"_copy",c.getLocal("idx1"),s),...c.call(e+"_copy",c.getLocal("idx2"),c.getLocal("idx1")),...c.call(e+"_copy",s,c.getLocal("idx2"))],[...c.call(e+"_copy",c.getLocal("idx1"),s),...c.call(i,c.getLocal("idx2"),c.getLocal("mulFactor"),c.getLocal("idx1")),...c.call(i,s,c.getLocal("mulFactor"),c.getLocal("idx2"))]),c.if(c.call(o+"_isOne",c.getLocal("mulFactor")),[],[...c.call(i,c.getLocal("idx1"),c.getLocal("mulFactor"),c.getLocal("idx1")),...c.call(i,c.getLocal("idx2"),c.getLocal("mulFactor"),c.getLocal("idx2"))])),c.setLocal("i",c.i32_add(c.getLocal("i"),c.i32_const(1))),c.br(0))),c.if(c.call(o+"_isOne",c.getLocal("mulFactor")),[],[...c.call(i,c.getLocal("px"),c.getLocal("mulFactor"),c.getLocal("px")),...c.setLocal("idx2",c.i32_add(c.getLocal("px"),c.i32_mul(c.getLocal("ndiv2"),c.i32_const(l)))),...c.call(i,c.getLocal("idx2"),c.getLocal("mulFactor"),c.getLocal("idx2"))]))}(),function(){const c=t.addFunction(a+"_rawfft");c.addParam("px","i32"),c.addParam("bits","i32"),c.addParam("reverse","i32"),c.addParam("mulFactor","i32"),c.addLocal("s","i32"),c.addLocal("k","i32"),c.addLocal("j","i32"),c.addLocal("m","i32"),c.addLocal("mdiv2","i32"),c.addLocal("n","i32"),c.addLocal("pwm","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l)),u=s.i32_const(t.alloc(l));c.addCode(s.call(a+"__reversePermutation",s.getLocal("px"),s.getLocal("bits")),s.setLocal("n",s.i32_shl(s.i32_const(1),s.getLocal("bits"))),s.setLocal("s",s.i32_const(1)),s.block(s.loop(s.br_if(1,s.i32_gt_u(s.getLocal("s"),s.getLocal("bits"))),s.setLocal("m",s.i32_shl(s.i32_const(1),s.getLocal("s"))),s.setLocal("pwm",s.i32_add(s.i32_const(p),s.i32_mul(s.getLocal("s"),s.i32_const(n)))),s.setLocal("k",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_ge_u(s.getLocal("k"),s.getLocal("n"))),s.call(o+"_one",r),s.setLocal("mdiv2",s.i32_shr_u(s.getLocal("m"),s.i32_const(1))),s.setLocal("j",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_ge_u(s.getLocal("j"),s.getLocal("mdiv2"))),s.setLocal("idx1",s.i32_add(s.getLocal("px"),s.i32_mul(s.i32_add(s.getLocal("k"),s.getLocal("j")),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("idx1"),s.i32_mul(s.getLocal("mdiv2"),s.i32_const(l)))),s.call(i,s.getLocal("idx2"),r,d),s.call(e+"_copy",s.getLocal("idx1"),u),s.call(e+"_add",u,d,s.getLocal("idx1")),s.call(e+"_sub",u,d,s.getLocal("idx2")),s.call(o+"_mul",r,s.getLocal("pwm"),r),s.setLocal("j",s.i32_add(s.getLocal("j"),s.i32_const(1))),s.br(0))),s.setLocal("k",s.i32_add(s.getLocal("k"),s.getLocal("m"))),s.br(0))),s.setLocal("s",s.i32_add(s.getLocal("s"),s.i32_const(1))),s.br(0))),s.call(a+"__fftFinal",s.getLocal("px"),s.getLocal("bits"),s.getLocal("reverse"),s.getLocal("mulFactor")))}(),function(){const e=t.addFunction(a+"__log2");e.addParam("n","i32"),e.setReturnType("i32"),e.addLocal("bits","i32"),e.addLocal("aux","i32");const o=e.getCodeBuilder();e.addCode(o.setLocal("aux",o.i32_shr_u(o.getLocal("n"),o.i32_const(1)))),e.addCode(o.setLocal("bits",o.i32_const(0))),e.addCode(o.block(o.loop(o.br_if(1,o.i32_eqz(o.getLocal("aux"))),o.setLocal("aux",o.i32_shr_u(o.getLocal("aux"),o.i32_const(1))),o.setLocal("bits",o.i32_add(o.getLocal("bits"),o.i32_const(1))),o.br(0)))),e.addCode(o.if(o.i32_ne(o.getLocal("n"),o.i32_shl(o.i32_const(1),o.getLocal("bits"))),o.unreachable())),e.addCode(o.if(o.i32_gt_u(o.getLocal("bits"),o.i32_const(r)),o.unreachable())),e.addCode(o.getLocal("bits"))}(),B(),function(){const e=t.addFunction(a+"_ifft");e.addParam("px","i32"),e.addParam("n","i32"),e.addLocal("bits","i32"),e.addLocal("pInv2","i32");const o=e.getCodeBuilder();e.addCode(o.setLocal("bits",o.call(a+"__log2",o.getLocal("n"))),o.setLocal("pInv2",o.i32_add(o.i32_const(L),o.i32_mul(o.getLocal("bits"),o.i32_const(n)))),o.call(a+"_rawfft",o.getLocal("px"),o.getLocal("bits"),o.i32_const(1),o.getLocal("pInv2")))}(),function(){const c=t.addFunction(a+"_fftJoin");c.addParam("pBuff1","i32"),c.addParam("pBuff2","i32"),c.addParam("n","i32"),c.addParam("first","i32"),c.addParam("inc","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32"),c.addLocal("i","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l)),u=s.i32_const(t.alloc(l));c.addCode(s.call(o+"_copy",s.getLocal("first"),r),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.setLocal("idx1",s.i32_add(s.getLocal("pBuff1"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("pBuff2"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.call(i,s.getLocal("idx2"),r,d),s.call(e+"_copy",s.getLocal("idx1"),u),s.call(e+"_add",u,d,s.getLocal("idx1")),s.call(e+"_sub",u,d,s.getLocal("idx2")),s.call(o+"_mul",r,s.getLocal("inc"),r),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}(),function(){const c=t.addFunction(a+"_fftJoinExt");c.addParam("pBuff1","i32"),c.addParam("pBuff2","i32"),c.addParam("n","i32"),c.addParam("first","i32"),c.addParam("inc","i32"),c.addParam("totalBits","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32"),c.addLocal("i","i32"),c.addLocal("pShiftToM","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l));c.addCode(s.setLocal("pShiftToM",s.i32_add(s.i32_const(A),s.i32_mul(s.getLocal("totalBits"),s.i32_const(n)))),s.call(o+"_copy",s.getLocal("first"),r),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.setLocal("idx1",s.i32_add(s.getLocal("pBuff1"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("pBuff2"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.call(e+"_add",s.getLocal("idx1"),s.getLocal("idx2"),d),s.call(i,s.getLocal("idx2"),s.getLocal("pShiftToM"),s.getLocal("idx2")),s.call(e+"_add",s.getLocal("idx1"),s.getLocal("idx2"),s.getLocal("idx2")),s.call(i,s.getLocal("idx2"),r,s.getLocal("idx2")),s.call(e+"_copy",d,s.getLocal("idx1")),s.call(o+"_mul",r,s.getLocal("inc"),r),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}(),function(){const c=t.addFunction(a+"_fftJoinExtInv");c.addParam("pBuff1","i32"),c.addParam("pBuff2","i32"),c.addParam("n","i32"),c.addParam("first","i32"),c.addParam("inc","i32"),c.addParam("totalBits","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32"),c.addLocal("i","i32"),c.addLocal("pShiftToM","i32"),c.addLocal("pSConst","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l));c.addCode(s.setLocal("pShiftToM",s.i32_add(s.i32_const(A),s.i32_mul(s.getLocal("totalBits"),s.i32_const(n)))),s.setLocal("pSConst",s.i32_add(s.i32_const(C),s.i32_mul(s.getLocal("totalBits"),s.i32_const(n)))),s.call(o+"_copy",s.getLocal("first"),r),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.setLocal("idx1",s.i32_add(s.getLocal("pBuff1"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("pBuff2"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.call(i,s.getLocal("idx2"),r,d),s.call(e+"_sub",s.getLocal("idx1"),d,s.getLocal("idx2")),s.call(i,s.getLocal("idx2"),s.getLocal("pSConst"),s.getLocal("idx2")),s.call(i,s.getLocal("idx1"),s.getLocal("pShiftToM"),s.getLocal("idx1")),s.call(e+"_sub",d,s.getLocal("idx1"),s.getLocal("idx1")),s.call(i,s.getLocal("idx1"),s.getLocal("pSConst"),s.getLocal("idx1")),s.call(o+"_mul",r,s.getLocal("inc"),r),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}(),function(){const c=t.addFunction(a+"_fftMix");c.addParam("pBuff","i32"),c.addParam("n","i32"),c.addParam("exp","i32"),c.addLocal("nGroups","i32"),c.addLocal("nPerGroup","i32"),c.addLocal("nPerGroupDiv2","i32"),c.addLocal("pairOffset","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32"),c.addLocal("i","i32"),c.addLocal("j","i32"),c.addLocal("pwm","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l)),u=s.i32_const(t.alloc(l));c.addCode(s.setLocal("nPerGroup",s.i32_shl(s.i32_const(1),s.getLocal("exp"))),s.setLocal("nPerGroupDiv2",s.i32_shr_u(s.getLocal("nPerGroup"),s.i32_const(1))),s.setLocal("nGroups",s.i32_shr_u(s.getLocal("n"),s.getLocal("exp"))),s.setLocal("pairOffset",s.i32_mul(s.getLocal("nPerGroupDiv2"),s.i32_const(l))),s.setLocal("pwm",s.i32_add(s.i32_const(p),s.i32_mul(s.getLocal("exp"),s.i32_const(n)))),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("nGroups"))),s.call(o+"_one",r),s.setLocal("j",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("j"),s.getLocal("nPerGroupDiv2"))),s.setLocal("idx1",s.i32_add(s.getLocal("pBuff"),s.i32_mul(s.i32_add(s.i32_mul(s.getLocal("i"),s.getLocal("nPerGroup")),s.getLocal("j")),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("idx1"),s.getLocal("pairOffset"))),s.call(i,s.getLocal("idx2"),r,d),s.call(e+"_copy",s.getLocal("idx1"),u),s.call(e+"_add",u,d,s.getLocal("idx1")),s.call(e+"_sub",u,d,s.getLocal("idx2")),s.call(o+"_mul",r,s.getLocal("pwm"),r),s.setLocal("j",s.i32_add(s.getLocal("j"),s.i32_const(1))),s.br(0))),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}(),function(){const o=t.addFunction(a+"_fftFinal");o.addParam("pBuff","i32"),o.addParam("n","i32"),o.addParam("factor","i32"),o.addLocal("idx1","i32"),o.addLocal("idx2","i32"),o.addLocal("i","i32"),o.addLocal("ndiv2","i32");const n=o.getCodeBuilder(),c=n.i32_const(t.alloc(l));o.addCode(n.setLocal("ndiv2",n.i32_shr_u(n.getLocal("n"),n.i32_const(1))),n.if(n.i32_and(n.getLocal("n"),n.i32_const(1)),n.call(i,n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.getLocal("ndiv2"),n.i32_const(l))),n.getLocal("factor"),n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.getLocal("ndiv2"),n.i32_const(l))))),n.setLocal("i",n.i32_const(0)),n.block(n.loop(n.br_if(1,n.i32_ge_u(n.getLocal("i"),n.getLocal("ndiv2"))),n.setLocal("idx1",n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.getLocal("i"),n.i32_const(l)))),n.setLocal("idx2",n.i32_add(n.getLocal("pBuff"),n.i32_mul(n.i32_sub(n.i32_sub(n.getLocal("n"),n.i32_const(1)),n.getLocal("i")),n.i32_const(l)))),n.call(i,n.getLocal("idx2"),n.getLocal("factor"),c),n.call(i,n.getLocal("idx1"),n.getLocal("factor"),n.getLocal("idx2")),n.call(e+"_copy",c,n.getLocal("idx1")),n.setLocal("i",n.i32_add(n.getLocal("i"),n.i32_const(1))),n.br(0))))}(),function(){const c=t.addFunction(a+"_prepareLagrangeEvaluation");c.addParam("pBuff1","i32"),c.addParam("pBuff2","i32"),c.addParam("n","i32"),c.addParam("first","i32"),c.addParam("inc","i32"),c.addParam("totalBits","i32"),c.addLocal("idx1","i32"),c.addLocal("idx2","i32"),c.addLocal("i","i32"),c.addLocal("pShiftToM","i32"),c.addLocal("pSConst","i32");const s=c.getCodeBuilder(),r=s.i32_const(t.alloc(n)),d=s.i32_const(t.alloc(l));c.addCode(s.setLocal("pShiftToM",s.i32_add(s.i32_const(A),s.i32_mul(s.getLocal("totalBits"),s.i32_const(n)))),s.setLocal("pSConst",s.i32_add(s.i32_const(C),s.i32_mul(s.getLocal("totalBits"),s.i32_const(n)))),s.call(o+"_copy",s.getLocal("first"),r),s.setLocal("i",s.i32_const(0)),s.block(s.loop(s.br_if(1,s.i32_eq(s.getLocal("i"),s.getLocal("n"))),s.setLocal("idx1",s.i32_add(s.getLocal("pBuff1"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.setLocal("idx2",s.i32_add(s.getLocal("pBuff2"),s.i32_mul(s.getLocal("i"),s.i32_const(l)))),s.call(i,s.getLocal("idx1"),s.getLocal("pShiftToM"),d),s.call(e+"_sub",s.getLocal("idx2"),d,d),s.call(e+"_sub",s.getLocal("idx1"),s.getLocal("idx2"),s.getLocal("idx2")),s.call(i,d,s.getLocal("pSConst"),s.getLocal("idx1")),s.call(i,s.getLocal("idx2"),r,s.getLocal("idx2")),s.call(o+"_mul",r,s.getLocal("inc"),r),s.setLocal("i",s.i32_add(s.getLocal("i"),s.i32_const(1))),s.br(0))))}(),t.exportFunction(a+"_fft"),t.exportFunction(a+"_ifft"),t.exportFunction(a+"_rawfft"),t.exportFunction(a+"_fftJoin"),t.exportFunction(a+"_fftJoinExt"),t.exportFunction(a+"_fftJoinExtInv"),t.exportFunction(a+"_fftMix"),t.exportFunction(a+"_fftFinal"),t.exportFunction(a+"_prepareLagrangeEvaluation")},Gi=function(t,a,e){const o=8*t.modules[e].n64;return function(){const i=t.addFunction(a+"_zero");i.addParam("px","i32"),i.addParam("n","i32"),i.addLocal("lastp","i32"),i.addLocal("p","i32");const n=i.getCodeBuilder();i.addCode(n.setLocal("p",n.getLocal("px")),n.setLocal("lastp",n.i32_add(n.getLocal("px"),n.i32_mul(n.getLocal("n"),n.i32_const(o)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("p"),n.getLocal("lastp"))),n.call(e+"_zero",n.getLocal("p")),n.setLocal("p",n.i32_add(n.getLocal("p"),n.i32_const(o))),n.br(0))))}(),function(){const i=t.addFunction(a+"_constructLC");i.addParam("ppolynomials","i32"),i.addParam("psignals","i32"),i.addParam("nSignals","i32"),i.addParam("pres","i32"),i.addLocal("i","i32"),i.addLocal("j","i32"),i.addLocal("pp","i32"),i.addLocal("ps","i32"),i.addLocal("pd","i32"),i.addLocal("ncoefs","i32");const n=i.getCodeBuilder(),l=n.i32_const(t.alloc(o));i.addCode(n.setLocal("i",n.i32_const(0)),n.setLocal("pp",n.getLocal("ppolynomials")),n.setLocal("ps",n.getLocal("psignals")),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("i"),n.getLocal("nSignals"))),n.setLocal("ncoefs",n.i32_load(n.getLocal("pp"))),n.setLocal("pp",n.i32_add(n.getLocal("pp"),n.i32_const(4))),n.setLocal("j",n.i32_const(0)),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("j"),n.getLocal("ncoefs"))),n.setLocal("pd",n.i32_add(n.getLocal("pres"),n.i32_mul(n.i32_load(n.getLocal("pp")),n.i32_const(o)))),n.setLocal("pp",n.i32_add(n.getLocal("pp"),n.i32_const(4))),n.call(e+"_mul",n.getLocal("ps"),n.getLocal("pp"),l),n.call(e+"_add",l,n.getLocal("pd"),n.getLocal("pd")),n.setLocal("pp",n.i32_add(n.getLocal("pp"),n.i32_const(o))),n.setLocal("j",n.i32_add(n.getLocal("j"),n.i32_const(1))),n.br(0))),n.setLocal("ps",n.i32_add(n.getLocal("ps"),n.i32_const(o))),n.setLocal("i",n.i32_add(n.getLocal("i"),n.i32_const(1))),n.br(0))))}(),t.exportFunction(a+"_zero"),t.exportFunction(a+"_constructLC"),a},zi=function(t,a,e){const o=8*t.modules[e].n64;return function(){const i=t.addFunction(a+"_buildABC");i.addParam("pCoefs","i32"),i.addParam("nCoefs","i32"),i.addParam("pWitness","i32"),i.addParam("pA","i32"),i.addParam("pB","i32"),i.addParam("pC","i32"),i.addParam("offsetOut","i32"),i.addParam("nOut","i32"),i.addParam("offsetWitness","i32"),i.addParam("nWitness","i32"),i.addLocal("it","i32"),i.addLocal("ita","i32"),i.addLocal("itb","i32"),i.addLocal("last","i32"),i.addLocal("m","i32"),i.addLocal("c","i32"),i.addLocal("s","i32"),i.addLocal("pOut","i32");const n=i.getCodeBuilder(),l=n.i32_const(t.alloc(o));i.addCode(n.setLocal("ita",n.getLocal("pA")),n.setLocal("itb",n.getLocal("pB")),n.setLocal("last",n.i32_add(n.getLocal("pA"),n.i32_mul(n.getLocal("nOut"),n.i32_const(o)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(e+"_zero",n.getLocal("ita")),n.call(e+"_zero",n.getLocal("itb")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(o))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(o))),n.br(0))),n.setLocal("it",n.getLocal("pCoefs")),n.setLocal("last",n.i32_add(n.getLocal("pCoefs"),n.i32_mul(n.getLocal("nCoefs"),n.i32_const(o+12)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("it"),n.getLocal("last"))),n.setLocal("s",n.i32_load(n.getLocal("it"),8)),n.if(n.i32_or(n.i32_lt_u(n.getLocal("s"),n.getLocal("offsetWitness")),n.i32_ge_u(n.getLocal("s"),n.i32_add(n.getLocal("offsetWitness"),n.getLocal("nWitness")))),[...n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(o+12))),...n.br(1)]),n.setLocal("m",n.i32_load(n.getLocal("it"))),n.if(n.i32_eq(n.getLocal("m"),n.i32_const(0)),n.setLocal("pOut",n.getLocal("pA")),n.if(n.i32_eq(n.getLocal("m"),n.i32_const(1)),n.setLocal("pOut",n.getLocal("pB")),[...n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(o+12))),...n.br(1)])),n.setLocal("c",n.i32_load(n.getLocal("it"),4)),n.if(n.i32_or(n.i32_lt_u(n.getLocal("c"),n.getLocal("offsetOut")),n.i32_ge_u(n.getLocal("c"),n.i32_add(n.getLocal("offsetOut"),n.getLocal("nOut")))),[...n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(o+12))),...n.br(1)]),n.setLocal("pOut",n.i32_add(n.getLocal("pOut"),n.i32_mul(n.i32_sub(n.getLocal("c"),n.getLocal("offsetOut")),n.i32_const(o)))),n.call(e+"_mul",n.i32_add(n.getLocal("pWitness"),n.i32_mul(n.i32_sub(n.getLocal("s"),n.getLocal("offsetWitness")),n.i32_const(o))),n.i32_add(n.getLocal("it"),n.i32_const(12)),l),n.call(e+"_add",n.getLocal("pOut"),l,n.getLocal("pOut")),n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(o+12))),n.br(0))),n.setLocal("ita",n.getLocal("pA")),n.setLocal("itb",n.getLocal("pB")),n.setLocal("it",n.getLocal("pC")),n.setLocal("last",n.i32_add(n.getLocal("pA"),n.i32_mul(n.getLocal("nOut"),n.i32_const(o)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(e+"_mul",n.getLocal("ita"),n.getLocal("itb"),n.getLocal("it")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(o))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(o))),n.setLocal("it",n.i32_add(n.getLocal("it"),n.i32_const(o))),n.br(0))))}(),function(){const i=t.addFunction(a+"_joinABC");i.addParam("pA","i32"),i.addParam("pB","i32"),i.addParam("pC","i32"),i.addParam("n","i32"),i.addParam("pP","i32"),i.addLocal("ita","i32"),i.addLocal("itb","i32"),i.addLocal("itc","i32"),i.addLocal("itp","i32"),i.addLocal("last","i32");const n=i.getCodeBuilder(),l=n.i32_const(t.alloc(o));i.addCode(n.setLocal("ita",n.getLocal("pA")),n.setLocal("itb",n.getLocal("pB")),n.setLocal("itc",n.getLocal("pC")),n.setLocal("itp",n.getLocal("pP")),n.setLocal("last",n.i32_add(n.getLocal("pA"),n.i32_mul(n.getLocal("n"),n.i32_const(o)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(e+"_mul",n.getLocal("ita"),n.getLocal("itb"),l),n.call(e+"_sub",l,n.getLocal("itc"),n.getLocal("itp")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(o))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(o))),n.setLocal("itc",n.i32_add(n.getLocal("itc"),n.i32_const(o))),n.setLocal("itp",n.i32_add(n.getLocal("itp"),n.i32_const(o))),n.br(0))))}(),function(){const i=t.addFunction(a+"_batchAdd");i.addParam("pa","i32"),i.addParam("pb","i32"),i.addParam("n","i32"),i.addParam("pr","i32"),i.addLocal("ita","i32"),i.addLocal("itb","i32"),i.addLocal("itr","i32"),i.addLocal("last","i32");const n=i.getCodeBuilder();i.addCode(n.setLocal("ita",n.getLocal("pa")),n.setLocal("itb",n.getLocal("pb")),n.setLocal("itr",n.getLocal("pr")),n.setLocal("last",n.i32_add(n.getLocal("pa"),n.i32_mul(n.getLocal("n"),n.i32_const(o)))),n.block(n.loop(n.br_if(1,n.i32_eq(n.getLocal("ita"),n.getLocal("last"))),n.call(e+"_add",n.getLocal("ita"),n.getLocal("itb"),n.getLocal("itr")),n.setLocal("ita",n.i32_add(n.getLocal("ita"),n.i32_const(o))),n.setLocal("itb",n.i32_add(n.getLocal("itb"),n.i32_const(o))),n.setLocal("itr",n.i32_add(n.getLocal("itr"),n.i32_const(o))),n.br(0))))}(),t.exportFunction(a+"_buildABC"),t.exportFunction(a+"_joinABC"),t.exportFunction(a+"_batchAdd"),a},Ti=function(t,a,e,o,i,n,l,c){const s=t.addFunction(a);s.addParam("pIn","i32"),s.addParam("n","i32"),s.addParam("pFirst","i32"),s.addParam("pInc","i32"),s.addParam("pOut","i32"),s.addLocal("pOldFree","i32"),s.addLocal("i","i32"),s.addLocal("pFrom","i32"),s.addLocal("pTo","i32");const r=s.getCodeBuilder(),d=r.i32_const(t.alloc(l));s.addCode(r.setLocal("pFrom",r.getLocal("pIn")),r.setLocal("pTo",r.getLocal("pOut"))),s.addCode(r.call(o+"_copy",r.getLocal("pFirst"),d)),s.addCode(r.setLocal("i",r.i32_const(0)),r.block(r.loop(r.br_if(1,r.i32_eq(r.getLocal("i"),r.getLocal("n"))),r.call(c,r.getLocal("pFrom"),d,r.getLocal("pTo")),r.setLocal("pFrom",r.i32_add(r.getLocal("pFrom"),r.i32_const(i))),r.setLocal("pTo",r.i32_add(r.getLocal("pTo"),r.i32_const(n))),r.call(o+"_mul",d,r.getLocal("pInc"),d),r.setLocal("i",r.i32_add(r.getLocal("i"),r.i32_const(1))),r.br(0)))),t.exportFunction(a)};const Mi=Mo,Ui=fi,Qi=mi,ki=yi,Ri=xi,Ni=Ei,Di=qi,$i=Gi,ji=zi,Vi=Ti,{bitLength:Ki,modInv:Hi,isOdd:Zi,isNegative:Wi}=No;const Yi=Mo,Ji=fi,Xi=mi,tn=yi,an=xi,en=Ei,on=qi,nn=Gi,ln=zi,cn=Ti,{bitLength:sn,isOdd:rn,isNegative:dn}=No;var un=function(t,a){const e=a||"bn128";if(t.modules[e])return e;const o=21888242871839275222246405745257275088696311157297823662689037894645226208583n,i=21888242871839275222246405745257275088548364400416034343698204186575808495617n,n=Math.floor((Ki(o-1n)-1)/64)+1,l=8*n,c=l,s=l,r=2*s,d=12*s,u=t.alloc(Mi.bigInt2BytesLE(i,c)),_=Ui(t,o,"f1m");Qi(t,i,"fr","frm");const g=t.alloc(Mi.bigInt2BytesLE(b(3n),s)),f=Ni(t,"g1m","f1m",g);Di(t,"frm","frm","frm","frm_mul"),$i(t,"pol","frm"),ji(t,"qap","frm");const p=ki(t,"f1m_neg","f2m","f1m"),h=t.alloc([...Mi.bigInt2BytesLE(b(19485874751759354771024239261021720505790618469301721065564631296452457478373n),s),...Mi.bigInt2BytesLE(b(266929791119991161246907387137283842545076965332900288569378510910307636690n),s)]),m=Ni(t,"g2m","f2m",h);function L(a,e){const o=t.addFunction(a);o.addParam("pG","i32"),o.addParam("pFr","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(l));o.addCode(i.call("frm_fromMontgomery",i.getLocal("pFr"),n),i.call(e,i.getLocal("pG"),n,i.i32_const(l),i.getLocal("pr"))),t.exportFunction(a)}function b(t){return BigInt(t)*(1n<<BigInt(8*s))%o}L("g1m_timesFr","g1m_timesScalar"),Di(t,"g1m","g1m","frm","g1m_timesFr"),L("g2m_timesFr","g2m_timesScalar"),Di(t,"g2m","g2m","frm","g2m_timesFr"),L("g1m_timesFrAffine","g1m_timesScalarAffine"),L("g2m_timesFrAffine","g2m_timesScalarAffine"),Vi(t,"frm_batchApplyKey","fmr","frm",l,l,l,"frm_mul"),Vi(t,"g1m_batchApplyKey","g1m","frm",3*l,3*l,l,"g1m_timesFr"),Vi(t,"g1m_batchApplyKeyMixed","g1m","frm",2*l,3*l,l,"g1m_timesFrAffine"),Vi(t,"g2m_batchApplyKey","g2m","frm",2*l*3,3*l*2,l,"g2m_timesFr"),Vi(t,"g2m_batchApplyKeyMixed","g2m","frm",2*l*2,3*l*2,l,"g2m_timesFrAffine");const w=[1n,2n,1n],y=t.alloc([...Mi.bigInt2BytesLE(b(w[0]),s),...Mi.bigInt2BytesLE(b(w[1]),s),...Mi.bigInt2BytesLE(b(w[2]),s)]),A=[0n,1n,0n],C=t.alloc([...Mi.bigInt2BytesLE(b(A[0]),s),...Mi.bigInt2BytesLE(b(A[1]),s),...Mi.bigInt2BytesLE(b(A[2]),s)]),x=[[10857046999023057135944570762232829481370756359578518086990519993285655852781n,11559732032986387107991004021392285783925812861821192530917403151452391805634n],[8495653923123431417604973247489272438418190587263600148770280649306958101930n,4082367875863433681332203403145435568316851327593401208105741076214120093531n],[1n,0n]],F=t.alloc([...Mi.bigInt2BytesLE(b(x[0][0]),s),...Mi.bigInt2BytesLE(b(x[0][1]),s),...Mi.bigInt2BytesLE(b(x[1][0]),s),...Mi.bigInt2BytesLE(b(x[1][1]),s),...Mi.bigInt2BytesLE(b(x[2][0]),s),...Mi.bigInt2BytesLE(b(x[2][1]),s)]),I=[[0n,0n],[1n,0n],[0n,0n]],B=t.alloc([...Mi.bigInt2BytesLE(b(I[0][0]),s),...Mi.bigInt2BytesLE(b(I[0][1]),s),...Mi.bigInt2BytesLE(b(I[1][0]),s),...Mi.bigInt2BytesLE(b(I[1][1]),s),...Mi.bigInt2BytesLE(b(I[2][0]),s),...Mi.bigInt2BytesLE(b(I[2][1]),s)]),E=t.alloc([...Mi.bigInt2BytesLE(b(1),s),...Mi.bigInt2BytesLE(b(0),s),...Mi.bigInt2BytesLE(b(0),s),...Mi.bigInt2BytesLE(b(0),s),...Mi.bigInt2BytesLE(b(0),s),...Mi.bigInt2BytesLE(b(0),s),...Mi.bigInt2BytesLE(b(0),s),...Mi.bigInt2BytesLE(b(0),s),...Mi.bigInt2BytesLE(b(0),s),...Mi.bigInt2BytesLE(b(0),s),...Mi.bigInt2BytesLE(b(0),s),...Mi.bigInt2BytesLE(b(0),s)]),v=t.alloc([...Mi.bigInt2BytesLE(b(9),s),...Mi.bigInt2BytesLE(b(1),s)]),S=t.alloc([...Mi.bigInt2BytesLE(b(Hi(2n,o)),s),...Mi.bigInt2BytesLE(0n,s)]),P=v,O=t.alloc([...Mi.bigInt2BytesLE(b(19485874751759354771024239261021720505790618469301721065564631296452457478373n),s),...Mi.bigInt2BytesLE(b(266929791119991161246907387137283842545076965332900288569378510910307636690n),s)]);!function(){const a=t.addFunction(e+"_mulNR6");a.addParam("x","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder();a.addCode(o.call(p+"_mul",o.i32_const(v),o.getLocal("x"),o.getLocal("pr")))}();const q=Ri(t,e+"_mulNR6","f6m","f2m");!function(){const a=t.addFunction(e+"_mulNR12");a.addParam("x","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder();a.addCode(o.call(p+"_mul",o.i32_const(v),o.i32_add(o.getLocal("x"),o.i32_const(4*l)),o.getLocal("pr")),o.call(p+"_copy",o.getLocal("x"),o.i32_add(o.getLocal("pr"),o.i32_const(2*l))),o.call(p+"_copy",o.i32_add(o.getLocal("x"),o.i32_const(2*l)),o.i32_add(o.getLocal("pr"),o.i32_const(4*l))))}();const G=ki(t,e+"_mulNR12","ftm",q),z=function(t){let a=t;const e=[];for(;a>0n;)Zi(a)?e.push(1):e.push(0),a>>=1n;return e}(29793968203157093288n),T=t.alloc(z),M=3*r,U=z.length-1,Q=z.reduce(((t,a)=>t+(0!=a?1:0)),0),k=6*l,R=3*l*2+(Q+U+1)*M;t.modules[e]={n64:n,pG1gen:y,pG1zero:C,pG1b:g,pG2gen:F,pG2zero:B,pG2b:h,pq:t.modules.f1m.pq,pr:u,pOneT:E,prePSize:k,preQSize:R,r:i.toString(),q:o.toString()};const N=4965661367192848881n;function D(a){const i=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[8376118865763821496583973867626364092589906065868298776909617916018768340080n,16469823323077808223889137241176536799009286646108169935659301613961712198316n],[21888242871839275220042445260109153167277707414472061641714758635765020556617n,0n],[11697423496358154304825782922584725312912383441159505038794027105778954184319n,303847389135065887422783454877609941456349188919719272345083954437860409601n],[21888242871839275220042445260109153167277707414472061641714758635765020556616n,0n],[3321304630594332808241809054958361220322477375291206261884409189760185844239n,5722266937896532885780051958958348231143373700109372999374820235121374419868n],[21888242871839275222246405745257275088696311157297823662689037894645226208582n,0n],[13512124006075453725662431877630910996106405091429524885779419978626457868503n,5418419548761466998357268504080738289687024511189653727029736280683514010267n],[2203960485148121921418603742825762020974279258880205651966n,0n],[10190819375481120917420622822672549775783927716138318623895010788866272024264n,21584395482704209334823622290379665147239961968378104390343953940207365798982n],[2203960485148121921418603742825762020974279258880205651967n,0n],[18566938241244942414004596690298913868373833782006617400804628704885040364344n,16165975933942742336466353786298926857552937457188450663314217659523851788715n]]],n=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[21575463638280843010398324269430826099269044274347216827212613867836435027261n,10307601595873709700152284273816112264069230130616436755625194854815875713954n],[21888242871839275220042445260109153167277707414472061641714758635765020556616n,0n],[3772000881919853776433695186713858239009073593817195771773381919316419345261n,2236595495967245188281701248203181795121068902605861227855261137820944008926n],[2203960485148121921418603742825762020974279258880205651966n,0n],[18429021223477853657660792034369865839114504446431234726392080002137598044644n,9344045779998320333812420223237981029506012124075525679208581902008406485703n]],[[1n,0n],[2581911344467009335267311115468803099551665605076196740867805258568234346338n,19937756971775647987995932169929341994314640652964949448313374472400716661030n],[2203960485148121921418603742825762020974279258880205651966n,0n],[5324479202449903542726783395506214481928257762400643279780343368557297135718n,16208900380737693084919495127334387981393726419856888799917914180988844123039n],[21888242871839275220042445260109153167277707414472061641714758635765020556616n,0n],[13981852324922362344252311234282257507216387789820983642040889267519694726527n,7629828391165209371577384193250820201684255241773809077146787135900891633097n]]],l=t.addFunction(e+"__frobeniusMap"+a);l.addParam("x","i32"),l.addParam("r","i32");const c=l.getCodeBuilder();for(let e=0;e<6;e++){const o=0==e?c.getLocal("x"):c.i32_add(c.getLocal("x"),c.i32_const(e*r)),u=o,g=c.i32_add(c.getLocal("x"),c.i32_const(e*r+s)),f=0==e?c.getLocal("r"):c.i32_add(c.getLocal("r"),c.i32_const(e*r)),h=f,m=c.i32_add(c.getLocal("r"),c.i32_const(e*r+s)),L=d(i[Math.floor(e/3)][a%12],n[e%3][a%6]),w=t.alloc([...Mi.bigInt2BytesLE(b(L[0]),32),...Mi.bigInt2BytesLE(b(L[1]),32)]);a%2==1?l.addCode(c.call(_+"_copy",u,h),c.call(_+"_neg",g,m),c.call(p+"_mul",f,c.i32_const(w),f)):l.addCode(c.call(p+"_mul",o,c.i32_const(w),f))}function d(t,a){const e=BigInt(t[0]),i=BigInt(t[1]),n=BigInt(a[0]),l=BigInt(a[1]),c=[(e*n-i*l)%o,(e*l+i*n)%o];return Wi(c[0])&&(c[0]=c[0]+o),c}}function $(a,o){const i=function(t){let a=t;const e=[];for(;a>0n;){if(Zi(a)){const t=2-Number(a%4n);e.push(t),a-=BigInt(t)}else e.push(0);a>>=1n}return e}(a).map((t=>-1==t?255:t)),n=t.alloc(i),l=t.addFunction(e+"__cyclotomicExp_"+o);l.addParam("x","i32"),l.addParam("r","i32"),l.addLocal("bit","i32"),l.addLocal("i","i32");const c=l.getCodeBuilder(),s=c.getLocal("x"),r=c.getLocal("r"),u=c.i32_const(t.alloc(d));l.addCode(c.call(G+"_conjugate",s,u),c.call(G+"_one",r),c.if(c.teeLocal("bit",c.i32_load8_s(c.i32_const(i.length-1),n)),c.if(c.i32_eq(c.getLocal("bit"),c.i32_const(1)),c.call(G+"_mul",r,s,r),c.call(G+"_mul",r,u,r))),c.setLocal("i",c.i32_const(i.length-2)),c.block(c.loop(c.call(e+"__cyclotomicSquare",r,r),c.if(c.teeLocal("bit",c.i32_load8_s(c.getLocal("i"),n)),c.if(c.i32_eq(c.getLocal("bit"),c.i32_const(1)),c.call(G+"_mul",r,s,r),c.call(G+"_mul",r,u,r))),c.br_if(1,c.i32_eqz(c.getLocal("i"))),c.setLocal("i",c.i32_sub(c.getLocal("i"),c.i32_const(1))),c.br(0))))}function j(){!function(){const a=t.addFunction(e+"__cyclotomicSquare");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=o.i32_add(o.getLocal("x"),o.i32_const(r)),l=o.i32_add(o.getLocal("x"),o.i32_const(2*r)),c=o.i32_add(o.getLocal("x"),o.i32_const(3*r)),s=o.i32_add(o.getLocal("x"),o.i32_const(4*r)),d=o.i32_add(o.getLocal("x"),o.i32_const(5*r)),u=o.getLocal("r"),_=o.i32_add(o.getLocal("r"),o.i32_const(r)),g=o.i32_add(o.getLocal("r"),o.i32_const(2*r)),f=o.i32_add(o.getLocal("r"),o.i32_const(3*r)),h=o.i32_add(o.getLocal("r"),o.i32_const(4*r)),m=o.i32_add(o.getLocal("r"),o.i32_const(5*r)),L=o.i32_const(t.alloc(r)),b=o.i32_const(t.alloc(r)),w=o.i32_const(t.alloc(r)),y=o.i32_const(t.alloc(r)),A=o.i32_const(t.alloc(r)),C=o.i32_const(t.alloc(r)),x=o.i32_const(t.alloc(r)),F=o.i32_const(t.alloc(r));a.addCode(o.call(p+"_mul",i,s,x),o.call(p+"_mul",s,o.i32_const(v),L),o.call(p+"_add",i,L,L),o.call(p+"_add",i,s,F),o.call(p+"_mul",F,L,L),o.call(p+"_mul",o.i32_const(v),x,F),o.call(p+"_add",x,F,F),o.call(p+"_sub",L,F,L),o.call(p+"_add",x,x,b),o.call(p+"_mul",c,l,x),o.call(p+"_mul",l,o.i32_const(v),w),o.call(p+"_add",c,w,w),o.call(p+"_add",c,l,F),o.call(p+"_mul",F,w,w),o.call(p+"_mul",o.i32_const(v),x,F),o.call(p+"_add",x,F,F),o.call(p+"_sub",w,F,w),o.call(p+"_add",x,x,y),o.call(p+"_mul",n,d,x),o.call(p+"_mul",d,o.i32_const(v),A),o.call(p+"_add",n,A,A),o.call(p+"_add",n,d,F),o.call(p+"_mul",F,A,A),o.call(p+"_mul",o.i32_const(v),x,F),o.call(p+"_add",x,F,F),o.call(p+"_sub",A,F,A),o.call(p+"_add",x,x,C),o.call(p+"_sub",L,i,u),o.call(p+"_add",u,u,u),o.call(p+"_add",L,u,u),o.call(p+"_add",b,s,h),o.call(p+"_add",h,h,h),o.call(p+"_add",b,h,h),o.call(p+"_mul",C,o.i32_const(P),F),o.call(p+"_add",F,c,f),o.call(p+"_add",f,f,f),o.call(p+"_add",F,f,f),o.call(p+"_sub",A,l,g),o.call(p+"_add",g,g,g),o.call(p+"_add",A,g,g),o.call(p+"_sub",w,n,_),o.call(p+"_add",_,_,_),o.call(p+"_add",w,_,_),o.call(p+"_add",y,d,m),o.call(p+"_add",m,m,m),o.call(p+"_add",y,m,m))}(),$(N,"w0");const a=t.addFunction(e+"__finalExponentiationLastChunk");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=o.getLocal("r"),l=o.i32_const(t.alloc(d)),c=o.i32_const(t.alloc(d)),s=o.i32_const(t.alloc(d)),u=o.i32_const(t.alloc(d)),_=o.i32_const(t.alloc(d)),g=o.i32_const(t.alloc(d)),f=o.i32_const(t.alloc(d)),h=o.i32_const(t.alloc(d)),m=o.i32_const(t.alloc(d)),L=o.i32_const(t.alloc(d)),b=o.i32_const(t.alloc(d)),w=o.i32_const(t.alloc(d)),y=o.i32_const(t.alloc(d)),A=o.i32_const(t.alloc(d)),C=o.i32_const(t.alloc(d)),x=o.i32_const(t.alloc(d)),F=o.i32_const(t.alloc(d)),I=o.i32_const(t.alloc(d)),B=o.i32_const(t.alloc(d)),E=o.i32_const(t.alloc(d)),S=o.i32_const(t.alloc(d));a.addCode(o.call(e+"__cyclotomicExp_w0",i,l),o.call(G+"_conjugate",l,l),o.call(e+"__cyclotomicSquare",l,c),o.call(e+"__cyclotomicSquare",c,s),o.call(G+"_mul",s,c,u),o.call(e+"__cyclotomicExp_w0",u,_),o.call(G+"_conjugate",_,_),o.call(e+"__cyclotomicSquare",_,g),o.call(e+"__cyclotomicExp_w0",g,f),o.call(G+"_conjugate",f,f),o.call(G+"_conjugate",u,h),o.call(G+"_conjugate",f,m),o.call(G+"_mul",m,_,L),o.call(G+"_mul",L,h,b),o.call(G+"_mul",b,c,w),o.call(G+"_mul",b,_,y),o.call(G+"_mul",y,i,A),o.call(e+"__frobeniusMap1",w,C),o.call(G+"_mul",C,A,x),o.call(e+"__frobeniusMap2",b,F),o.call(G+"_mul",F,x,I),o.call(G+"_conjugate",i,B),o.call(G+"_mul",B,w,E),o.call(e+"__frobeniusMap3",E,S),o.call(G+"_mul",S,I,n))}const V=t.alloc(k),K=t.alloc(R);function H(a){const o=t.addFunction(e+"_pairingEq"+a);for(let t=0;t<a;t++)o.addParam("p_"+t,"i32"),o.addParam("q_"+t,"i32");o.addParam("c","i32"),o.setReturnType("i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(d)),l=i.i32_const(t.alloc(d));o.addCode(i.call(G+"_one",n));for(let t=0;t<a;t++)o.addCode(i.call(e+"_prepareG1",i.getLocal("p_"+t),i.i32_const(V))),o.addCode(i.call(e+"_prepareG2",i.getLocal("q_"+t),i.i32_const(K))),o.addCode(i.call(e+"_millerLoop",i.i32_const(V),i.i32_const(K),l)),o.addCode(i.call(G+"_mul",n,l,n));o.addCode(i.call(e+"_finalExponentiation",n,n)),o.addCode(i.call(G+"_eq",n,i.getLocal("c")))}!function(){const a=t.addFunction(e+"_prepAddStep");a.addParam("pQ","i32"),a.addParam("pR","i32"),a.addParam("pCoef","i32");const o=a.getCodeBuilder(),i=o.getLocal("pQ"),n=o.i32_add(o.getLocal("pQ"),o.i32_const(r)),l=o.getLocal("pR"),c=o.i32_add(o.getLocal("pR"),o.i32_const(r)),s=o.i32_add(o.getLocal("pR"),o.i32_const(2*r)),d=o.getLocal("pCoef"),u=o.i32_add(o.getLocal("pCoef"),o.i32_const(r)),_=o.i32_add(o.getLocal("pCoef"),o.i32_const(2*r)),g=u,f=o.i32_const(t.alloc(r)),h=o.i32_const(t.alloc(r)),m=o.i32_const(t.alloc(r)),L=o.i32_const(t.alloc(r)),b=o.i32_const(t.alloc(r)),w=o.i32_const(t.alloc(r)),y=o.i32_const(t.alloc(r));a.addCode(o.call(p+"_mul",i,s,g),o.call(p+"_sub",l,g,g),o.call(p+"_mul",n,s,f),o.call(p+"_sub",c,f,f),o.call(p+"_square",g,h),o.call(p+"_square",f,m),o.call(p+"_mul",g,h,L),o.call(p+"_mul",l,h,b),o.call(p+"_add",b,b,y),o.call(p+"_mul",s,m,w),o.call(p+"_add",L,w,w),o.call(p+"_sub",w,y,w),o.call(p+"_mul",g,w,l),o.call(p+"_mul",L,c,c),o.call(p+"_sub",b,w,y),o.call(p+"_mul",f,y,y),o.call(p+"_sub",y,c,c),o.call(p+"_mul",s,L,s),o.call(p+"_mul",g,n,y),o.call(p+"_mul",f,i,d),o.call(p+"_sub",d,y,d),o.call(p+"_mul",d,o.i32_const(P),d),o.call(p+"_neg",f,_))}(),function(){const a=t.addFunction(e+"_prepDblStep");a.addParam("pR","i32"),a.addParam("pCoef","i32");const o=a.getCodeBuilder(),i=o.getLocal("pR"),n=o.i32_add(o.getLocal("pR"),o.i32_const(r)),l=o.i32_add(o.getLocal("pR"),o.i32_const(2*r)),c=o.getLocal("pCoef"),s=o.i32_add(o.getLocal("pCoef"),o.i32_const(r)),d=o.i32_add(o.getLocal("pCoef"),o.i32_const(2*r)),u=o.i32_const(t.alloc(r)),_=o.i32_const(t.alloc(r)),g=o.i32_const(t.alloc(r)),f=o.i32_const(t.alloc(r)),h=o.i32_const(t.alloc(r)),m=o.i32_const(t.alloc(r)),L=o.i32_const(t.alloc(r)),b=o.i32_const(t.alloc(r)),w=o.i32_const(t.alloc(r)),y=o.i32_const(t.alloc(r)),A=o.i32_const(t.alloc(r)),C=o.i32_const(t.alloc(r));a.addCode(o.call(p+"_mul",n,o.i32_const(S),u),o.call(p+"_mul",i,u,u),o.call(p+"_square",n,_),o.call(p+"_square",l,g),o.call(p+"_add",g,g,f),o.call(p+"_add",f,g,f),o.call(p+"_mul",o.i32_const(O),f,h),o.call(p+"_add",h,h,m),o.call(p+"_add",h,m,m),o.call(p+"_add",_,m,L),o.call(p+"_mul",L,o.i32_const(S),L),o.call(p+"_add",_,g,C),o.call(p+"_add",n,l,b),o.call(p+"_square",b,b),o.call(p+"_sub",b,C,b),o.call(p+"_sub",h,_,w),o.call(p+"_square",i,y),o.call(p+"_square",h,A),o.call(p+"_sub",_,m,C),o.call(p+"_mul",u,C,i),o.call(p+"_add",A,A,C),o.call(p+"_add",A,C,C),o.call(p+"_square",L,n),o.call(p+"_sub",n,C,n),o.call(p+"_mul",_,b,l),o.call(p+"_mul",o.i32_const(P),w,c),o.call(p+"_neg",b,s),o.call(p+"_add",y,y,d),o.call(p+"_add",y,d,d))}(),function(){const a=t.addFunction(e+"_prepareG1");a.addParam("pP","i32"),a.addParam("ppreP","i32");const o=a.getCodeBuilder();a.addCode(o.call(f+"_normalize",o.getLocal("pP"),o.getLocal("ppreP")))}(),function(){!function(){const a=t.addFunction(e+"_mulByQ");a.addParam("p1","i32"),a.addParam("pr","i32");const o=a.getCodeBuilder(),i=o.getLocal("p1"),n=o.i32_add(o.getLocal("p1"),o.i32_const(r)),l=o.i32_add(o.getLocal("p1"),o.i32_const(2*r)),c=o.getLocal("pr"),d=o.i32_add(o.getLocal("pr"),o.i32_const(r)),u=o.i32_add(o.getLocal("pr"),o.i32_const(2*r)),_=o.i32_const(t.alloc([...Mi.bigInt2BytesLE(b("21575463638280843010398324269430826099269044274347216827212613867836435027261"),s),...Mi.bigInt2BytesLE(b("10307601595873709700152284273816112264069230130616436755625194854815875713954"),s)])),g=o.i32_const(t.alloc([...Mi.bigInt2BytesLE(b("2821565182194536844548159561693502659359617185244120367078079554186484126554"),s),...Mi.bigInt2BytesLE(b("3505843767911556378687030309984248845540243509899259641013678093033130930403"),s)]));a.addCode(o.call(p+"_conjugate",i,c),o.call(p+"_mul",_,c,c),o.call(p+"_conjugate",n,d),o.call(p+"_mul",g,d,d),o.call(p+"_conjugate",l,u))}();const a=t.addFunction(e+"_prepareG2");a.addParam("pQ","i32"),a.addParam("ppreQ","i32"),a.addLocal("pCoef","i32"),a.addLocal("i","i32");const o=a.getCodeBuilder(),i=o.getLocal("pQ"),n=t.alloc(3*r),l=o.i32_const(n),c=o.i32_const(n),d=o.i32_const(n+r),u=o.i32_const(n+2*r),_=o.i32_add(o.getLocal("ppreQ"),o.i32_const(0)),g=o.i32_add(o.getLocal("ppreQ"),o.i32_const(r)),f=t.alloc(3*r),h=o.i32_const(f),L=t.alloc(3*r),w=o.i32_const(L),y=o.i32_const(L+r);a.addCode(o.call(m+"_normalize",i,_),o.call(p+"_copy",_,c),o.call(p+"_copy",g,d),o.call(p+"_one",u)),a.addCode(o.setLocal("pCoef",o.i32_add(o.getLocal("ppreQ"),o.i32_const(3*r))),o.setLocal("i",o.i32_const(z.length-2)),o.block(o.loop(o.call(e+"_prepDblStep",l,o.getLocal("pCoef")),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))),o.if(o.i32_load8_s(o.getLocal("i"),T),[...o.call(e+"_prepAddStep",_,l,o.getLocal("pCoef")),...o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M)))]),o.br_if(1,o.i32_eqz(o.getLocal("i"))),o.setLocal("i",o.i32_sub(o.getLocal("i"),o.i32_const(1))),o.br(0)))),a.addCode(o.call(e+"_mulByQ",_,h),o.call(e+"_mulByQ",h,w)),a.addCode(o.call(p+"_neg",y,y),o.call(e+"_prepAddStep",h,l,o.getLocal("pCoef")),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))),o.call(e+"_prepAddStep",w,l,o.getLocal("pCoef")),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))))}(),function(){const a=t.addFunction(e+"__mulBy024");a.addParam("pEll0","i32"),a.addParam("pEllVW","i32"),a.addParam("pEllVV","i32"),a.addParam("pR","i32");const o=a.getCodeBuilder(),i=o.getLocal("pEll0"),n=o.getLocal("pEllVV"),c=o.getLocal("pEllVW"),s=o.getLocal("pR"),d=o.i32_add(o.getLocal("pR"),o.i32_const(2*l)),u=o.i32_add(o.getLocal("pR"),o.i32_const(4*l)),_=o.i32_add(o.getLocal("pR"),o.i32_const(6*l)),g=o.i32_add(o.getLocal("pR"),o.i32_const(8*l)),f=o.i32_add(o.getLocal("pR"),o.i32_const(10*l)),h=o.i32_const(t.alloc(r)),m=o.i32_const(t.alloc(r)),L=o.i32_const(t.alloc(r)),b=o.i32_const(t.alloc(r)),w=o.i32_const(t.alloc(r)),y=o.i32_const(t.alloc(r)),A=o.i32_const(t.alloc(r)),C=o.i32_const(t.alloc(r)),x=o.i32_const(t.alloc(r)),F=o.i32_const(t.alloc(r)),I=o.i32_const(t.alloc(r));a.addCode(o.call(p+"_mul",s,i,A),o.call(p+"_mul",u,n,C),o.call(p+"_mul",g,c,x),o.call(p+"_add",s,g,L),o.call(p+"_add",s,u,m),o.call(p+"_add",d,_,b),o.call(p+"_add",b,f,b),o.call(p+"_mul",d,n,F),o.call(p+"_add",F,x,w),o.call(p+"_mul",o.i32_const(v),w,y),o.call(p+"_add",y,A,s),o.call(p+"_mul",f,c,w),o.call(p+"_add",F,w,F),o.call(p+"_add",w,C,w),o.call(p+"_mul",o.i32_const(v),w,y),o.call(p+"_mul",d,i,w),o.call(p+"_add",F,w,F),o.call(p+"_add",y,w,d),o.call(p+"_add",i,n,h),o.call(p+"_mul",m,h,w),o.call(p+"_add",A,C,I),o.call(p+"_sub",w,I,w),o.call(p+"_mul",_,c,y),o.call(p+"_add",F,y,F),o.call(p+"_add",u,g,h),o.call(p+"_add",w,y,u),o.call(p+"_add",n,c,m),o.call(p+"_mul",m,h,w),o.call(p+"_add",C,x,I),o.call(p+"_sub",w,I,w),o.call(p+"_mul",o.i32_const(v),w,y),o.call(p+"_mul",_,i,w),o.call(p+"_add",F,w,F),o.call(p+"_add",y,w,_),o.call(p+"_mul",f,n,w),o.call(p+"_add",F,w,F),o.call(p+"_mul",o.i32_const(v),w,y),o.call(p+"_add",i,c,h),o.call(p+"_mul",L,h,w),o.call(p+"_add",A,x,I),o.call(p+"_sub",w,I,w),o.call(p+"_add",y,w,g),o.call(p+"_add",i,n,h),o.call(p+"_add",h,c,h),o.call(p+"_mul",b,h,w),o.call(p+"_sub",w,F,f))}(),function(){const a=t.addFunction(e+"__mulBy024Old");a.addParam("pEll0","i32"),a.addParam("pEllVW","i32"),a.addParam("pEllVV","i32"),a.addParam("pR","i32");const o=a.getCodeBuilder(),i=o.getLocal("pEll0"),n=o.getLocal("pEllVV"),l=o.getLocal("pEllVW"),c=o.getLocal("pR"),s=t.alloc(d),u=o.i32_const(s),_=o.i32_const(s),g=o.i32_const(s+r),f=o.i32_const(s+2*r),h=o.i32_const(s+3*r),m=o.i32_const(s+4*r),L=o.i32_const(s+5*r);a.addCode(o.call(p+"_copy",i,_),o.call(p+"_zero",g),o.call(p+"_copy",n,f),o.call(p+"_zero",h),o.call(p+"_copy",l,m),o.call(p+"_zero",L),o.call(G+"_mul",u,c,c))}(),function(){const a=t.addFunction(e+"_millerLoop");a.addParam("ppreP","i32"),a.addParam("ppreQ","i32"),a.addParam("r","i32"),a.addLocal("pCoef","i32"),a.addLocal("i","i32");const o=a.getCodeBuilder(),i=o.getLocal("ppreP"),n=o.i32_add(o.getLocal("ppreP"),o.i32_const(s)),l=o.getLocal("pCoef"),c=o.i32_add(o.getLocal("pCoef"),o.i32_const(r)),d=o.i32_add(o.getLocal("pCoef"),o.i32_const(2*r)),u=t.alloc(r),_=o.i32_const(u),g=t.alloc(r),f=o.i32_const(g),h=o.getLocal("r");a.addCode(o.call(G+"_one",h),o.setLocal("pCoef",o.i32_add(o.getLocal("ppreQ"),o.i32_const(3*r))),o.setLocal("i",o.i32_const(z.length-2)),o.block(o.loop(o.call(G+"_square",h,h),o.call(p+"_mul1",c,n,_),o.call(p+"_mul1",d,i,f),o.call(e+"__mulBy024",l,_,f,h),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))),o.if(o.i32_load8_s(o.getLocal("i"),T),[...o.call(p+"_mul1",c,n,_),...o.call(p+"_mul1",d,i,f),...o.call(e+"__mulBy024",l,_,f,h),...o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M)))]),o.br_if(1,o.i32_eqz(o.getLocal("i"))),o.setLocal("i",o.i32_sub(o.getLocal("i"),o.i32_const(1))),o.br(0)))),a.addCode(o.call(p+"_mul1",c,n,_),o.call(p+"_mul1",d,i,f),o.call(e+"__mulBy024",l,_,f,h),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))),o.call(p+"_mul1",c,n,_),o.call(p+"_mul1",d,i,f),o.call(e+"__mulBy024",l,_,f,h),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(M))))}();for(let a=0;a<10;a++)D(a),t.exportFunction(e+"__frobeniusMap"+a);!function(){const a=t.addFunction(e+"_finalExponentiationOld");a.addParam("x","i32"),a.addParam("r","i32");const o=t.alloc(Mi.bigInt2BytesLE(552484233613224096312617126783173147097382103762957654188882734314196910839907541213974502761540629817009608548654680343627701153829446747810907373256841551006201639677726139946029199968412598804882391702273019083653272047566316584365559776493027495458238373902875937659943504873220554161550525926302303331747463515644711876653177129578303191095900909191624817826566688241804408081892785725967931714097716709526092261278071952560171111444072049229123565057483750161460024353346284167282452756217662335528813519139808291170539072125381230815729071544861602750936964829313608137325426383735122175229541155376346436093930287402089517426973178917569713384748081827255472576937471496195752727188261435633271238710131736096299798168852925540549342330775279877006784354801422249722573783561685179618816480037695005515426162362431072245638324744480n,352)),i=a.getCodeBuilder();a.addCode(i.call(G+"_exp",i.getLocal("x"),i.i32_const(o),i.i32_const(352),i.getLocal("r")))}(),function(){!function(){const a=t.addFunction(e+"__finalExponentiationFirstChunk");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=i,c=o.i32_add(i,o.i32_const(6*l)),s=o.getLocal("r"),r=t.alloc(d),u=o.i32_const(r),_=u,g=o.i32_const(r+6*l),f=o.i32_const(t.alloc(d)),p=o.i32_const(t.alloc(d)),h=o.i32_const(t.alloc(d));a.addCode(o.call(q+"_copy",n,_),o.call(q+"_neg",c,g),o.call(G+"_inverse",i,f),o.call(G+"_mul",u,f,p),o.call(e+"__frobeniusMap2",p,h),o.call(G+"_mul",p,h,s))}(),j();const a=t.addFunction(e+"_finalExponentiation");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=o.getLocal("r"),c=o.i32_const(t.alloc(d));a.addCode(o.call(e+"__finalExponentiationFirstChunk",i,c),o.call(e+"__finalExponentiationLastChunk",c,n))}();for(let a=1;a<=5;a++)H(a),t.exportFunction(e+"_pairingEq"+a);!function(){const a=t.addFunction(e+"_pairing");a.addParam("p","i32"),a.addParam("q","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.i32_const(t.alloc(d));a.addCode(o.call(e+"_prepareG1",o.getLocal("p"),o.i32_const(V))),a.addCode(o.call(e+"_prepareG2",o.getLocal("q"),o.i32_const(K))),a.addCode(o.call(e+"_millerLoop",o.i32_const(V),o.i32_const(K),i)),a.addCode(o.call(e+"_finalExponentiation",i,o.getLocal("r")))}(),t.exportFunction(e+"_pairing"),t.exportFunction(e+"_prepareG1"),t.exportFunction(e+"_prepareG2"),t.exportFunction(e+"_millerLoop"),t.exportFunction(e+"_finalExponentiation"),t.exportFunction(e+"_finalExponentiationOld"),t.exportFunction(e+"__mulBy024"),t.exportFunction(e+"__mulBy024Old"),t.exportFunction(e+"__cyclotomicSquare"),t.exportFunction(e+"__cyclotomicExp_w0")},_n=function(t,a){const e=a||"bls12381";if(t.modules[e])return e;const o=0x1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaabn,i=0x73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001n,n=Math.floor((sn(o-1n)-1)/64)+1,l=8*n,c=l,s=2*c,r=12*c,d=Math.floor((sn(i-1n)-1)/64)+1,u=8*d,_=u,g=t.alloc(Yi.bigInt2BytesLE(i,_)),f=Ji(t,o,"f1m","intq");Xi(t,i,"fr","frm","intr");const p=t.alloc(Yi.bigInt2BytesLE(y(4n),c)),h=en(t,"g1m","f1m",p);on(t,"frm","frm","frm","frm_mul"),nn(t,"pol","frm"),ln(t,"qap","frm");const m=tn(t,"f1m_neg","f2m","f1m"),L=t.alloc([...Yi.bigInt2BytesLE(y(4n),c),...Yi.bigInt2BytesLE(y(4n),c)]),b=en(t,"g2m","f2m",L);function w(a,e){const o=t.addFunction(a);o.addParam("pG","i32"),o.addParam("pFr","i32"),o.addParam("pr","i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(u));o.addCode(i.call("frm_fromMontgomery",i.getLocal("pFr"),n),i.call(e,i.getLocal("pG"),n,i.i32_const(u),i.getLocal("pr"))),t.exportFunction(a)}function y(t){return BigInt(t)*(1n<<BigInt(8*c))%o}w("g1m_timesFr","g1m_timesScalar"),on(t,"g1m","g1m","frm","g1m_timesFr"),w("g2m_timesFr","g2m_timesScalar"),on(t,"g2m","g2m","frm","g2m_timesFr"),w("g1m_timesFrAffine","g1m_timesScalarAffine"),w("g2m_timesFrAffine","g2m_timesScalarAffine"),cn(t,"frm_batchApplyKey","fmr","frm",u,u,u,"frm_mul"),cn(t,"g1m_batchApplyKey","g1m","frm",3*l,3*l,u,"g1m_timesFr"),cn(t,"g1m_batchApplyKeyMixed","g1m","frm",2*l,3*l,u,"g1m_timesFrAffine"),cn(t,"g2m_batchApplyKey","g2m","frm",2*l*3,3*l*2,u,"g2m_timesFr"),cn(t,"g2m_batchApplyKeyMixed","g2m","frm",2*l*2,3*l*2,u,"g2m_timesFrAffine");const A=[3685416753713387016781088315183077757961620795782546409894578378688607592378376318836054947676345821548104185464507n,1339506544944476473020471379941921221584933875938349620426543736416511423956333506472724655353366534992391756441569n,1n],C=t.alloc([...Yi.bigInt2BytesLE(y(A[0]),c),...Yi.bigInt2BytesLE(y(A[1]),c),...Yi.bigInt2BytesLE(y(A[2]),c)]),x=[0n,1n,0n],F=t.alloc([...Yi.bigInt2BytesLE(y(x[0]),c),...Yi.bigInt2BytesLE(y(x[1]),c),...Yi.bigInt2BytesLE(y(x[2]),c)]),I=[[352701069587466618187139116011060144890029952792775240219908644239793785735715026873347600343865175952761926303160n,3059144344244213709971259814753781636986470325476647558659373206291635324768958432433509563104347017837885763365758n],[1985150602287291935568054521177171638300868978215655730859378665066344726373823718423869104263333984641494340347905n,927553665492332455747201965776037880757740193453592970025027978793976877002675564980949289727957565575433344219582n],[1n,0n]],B=t.alloc([...Yi.bigInt2BytesLE(y(I[0][0]),c),...Yi.bigInt2BytesLE(y(I[0][1]),c),...Yi.bigInt2BytesLE(y(I[1][0]),c),...Yi.bigInt2BytesLE(y(I[1][1]),c),...Yi.bigInt2BytesLE(y(I[2][0]),c),...Yi.bigInt2BytesLE(y(I[2][1]),c)]),E=[[0n,0n],[1n,0n],[0n,0n]],v=t.alloc([...Yi.bigInt2BytesLE(y(E[0][0]),c),...Yi.bigInt2BytesLE(y(E[0][1]),c),...Yi.bigInt2BytesLE(y(E[1][0]),c),...Yi.bigInt2BytesLE(y(E[1][1]),c),...Yi.bigInt2BytesLE(y(E[2][0]),c),...Yi.bigInt2BytesLE(y(E[2][1]),c)]),S=t.alloc([...Yi.bigInt2BytesLE(y(1n),c),...Yi.bigInt2BytesLE(y(0n),c),...Yi.bigInt2BytesLE(y(0n),c),...Yi.bigInt2BytesLE(y(0n),c),...Yi.bigInt2BytesLE(y(0n),c),...Yi.bigInt2BytesLE(y(0n),c),...Yi.bigInt2BytesLE(y(0n),c),...Yi.bigInt2BytesLE(y(0n),c),...Yi.bigInt2BytesLE(y(0n),c),...Yi.bigInt2BytesLE(y(0n),c),...Yi.bigInt2BytesLE(y(0n),c),...Yi.bigInt2BytesLE(y(0n),c)]),P=t.alloc([...Yi.bigInt2BytesLE(y(1n),c),...Yi.bigInt2BytesLE(y(1n),c)]);!function(){const a=t.addFunction(m+"_mulNR");a.addParam("x","i32"),a.addParam("pr","i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(c)),i=e.getLocal("x"),n=e.i32_add(e.getLocal("x"),e.i32_const(c)),l=e.getLocal("pr"),s=e.i32_add(e.getLocal("pr"),e.i32_const(c));a.addCode(e.call(f+"_copy",i,o),e.call(f+"_sub",i,n,l),e.call(f+"_add",o,n,s))}();const O=an(t,m+"_mulNR","f6m","f2m");!function(){const a=t.addFunction(O+"_mulNR");a.addParam("x","i32"),a.addParam("pr","i32");const e=a.getCodeBuilder(),o=e.i32_const(t.alloc(2*c));a.addCode(e.call(m+"_copy",e.getLocal("x"),o),e.call(m+"_mulNR",e.i32_add(e.getLocal("x"),e.i32_const(4*l)),e.getLocal("pr")),e.call(m+"_copy",e.i32_add(e.getLocal("x"),e.i32_const(2*l)),e.i32_add(e.getLocal("pr"),e.i32_const(4*l))),e.call(m+"_copy",o,e.i32_add(e.getLocal("pr"),e.i32_const(2*l))))}();const q=tn(t,O+"_mulNR","ftm",O),G=function(t){let a=t;const e=[];for(;a>0n;)rn(a)?e.push(1):e.push(0),a>>=1n;return e}(0xd201000000010000n),z=t.alloc(G),T=3*s,M=G.length-1,U=G.reduce(((t,a)=>t+(0!=a?1:0)),0),Q=6*l,k=3*l*2+(U+M+1)*T,R=!0,N=15132376222941642752n;function D(a){const e=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760n,151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351n,0n],[2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n,1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,0n],[3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557n,877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230n],[4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786n,0n],[151655185184498381465642749684540099398075398968325446656007613510403227271200139370504932015952886146304766135027n,3850754370037169011952147076051364057158807420970682438676050522613628423219637725072182697113062777891589506424760n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,0n],[1028732146235106349975324479215795277384839936929757896155643118032610843298655225875571310552543014690878354869257n,2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437n,0n],[877076961050607968509681729531255177986764537961432449499635504522207616027455086505066378536590128544573588734230n,3125332594171059424908108096204648978570118281977575435832422631601824034463382777937621250592425535493320683825557n]]],i=[[[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n],[1n,0n]],[[1n,0n],[0n,4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,0n],[0n,1n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,0n],[0n,793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n]],[[1n,0n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939437n,0n],[4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n,0n],[4002409555221667393417789825735904156556882819939007885332058136124031650490837864442687629129015664037894272559786n,0n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n,0n],[793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620351n,0n]]],n=t.addFunction(q+"_frobeniusMap"+a);n.addParam("x","i32"),n.addParam("r","i32");const r=n.getCodeBuilder();for(let o=0;o<6;o++){const u=0==o?r.getLocal("x"):r.i32_add(r.getLocal("x"),r.i32_const(o*s)),_=u,g=r.i32_add(r.getLocal("x"),r.i32_const(o*s+c)),p=0==o?r.getLocal("r"):r.i32_add(r.getLocal("r"),r.i32_const(o*s)),h=p,L=r.i32_add(r.getLocal("r"),r.i32_const(o*s+c)),b=d(e[Math.floor(o/3)][a%12],i[o%3][a%6]),w=t.alloc([...Yi.bigInt2BytesLE(y(b[0]),l),...Yi.bigInt2BytesLE(y(b[1]),l)]);a%2==1?n.addCode(r.call(f+"_copy",_,h),r.call(f+"_neg",g,L),r.call(m+"_mul",p,r.i32_const(w),p)):n.addCode(r.call(m+"_mul",u,r.i32_const(w),p))}function d(t,a){const e=t[0],i=t[1],n=a[0],l=a[1],c=[(e*n-i*l)%o,(e*l+i*n)%o];return dn(c[0])&&(c[0]=c[0]+o),c}}function $(a,o,i){const n=function(t){let a=t;const e=[];for(;a>0n;){if(rn(a)){const t=2-Number(a%4n);e.push(t),a-=BigInt(t)}else e.push(0);a>>=1n}return e}(a).map((t=>-1==t?255:t)),l=t.alloc(n),c=t.addFunction(e+"__cyclotomicExp_"+i);c.addParam("x","i32"),c.addParam("r","i32"),c.addLocal("bit","i32"),c.addLocal("i","i32");const s=c.getCodeBuilder(),d=s.getLocal("x"),u=s.getLocal("r"),_=s.i32_const(t.alloc(r));c.addCode(s.call(q+"_conjugate",d,_),s.call(q+"_one",u),s.if(s.teeLocal("bit",s.i32_load8_s(s.i32_const(n.length-1),l)),s.if(s.i32_eq(s.getLocal("bit"),s.i32_const(1)),s.call(q+"_mul",u,d,u),s.call(q+"_mul",u,_,u))),s.setLocal("i",s.i32_const(n.length-2)),s.block(s.loop(s.call(e+"__cyclotomicSquare",u,u),s.if(s.teeLocal("bit",s.i32_load8_s(s.getLocal("i"),l)),s.if(s.i32_eq(s.getLocal("bit"),s.i32_const(1)),s.call(q+"_mul",u,d,u),s.call(q+"_mul",u,_,u))),s.br_if(1,s.i32_eqz(s.getLocal("i"))),s.setLocal("i",s.i32_sub(s.getLocal("i"),s.i32_const(1))),s.br(0)))),o&&c.addCode(s.call(q+"_conjugate",u,u))}t.modules[e]={n64q:n,n64r:d,n8q:l,n8r:u,pG1gen:C,pG1zero:F,pG1b:p,pG2gen:B,pG2zero:v,pG2b:L,pq:t.modules.f1m.pq,pr:g,pOneT:S,r:i,q:o,prePSize:Q,preQSize:k},function(){const a=t.addFunction(O+"_mul1");a.addParam("pA","i32"),a.addParam("pC1","i32"),a.addParam("pR","i32");const e=a.getCodeBuilder(),o=e.getLocal("pA"),i=e.i32_add(e.getLocal("pA"),e.i32_const(2*c)),n=e.i32_add(e.getLocal("pA"),e.i32_const(4*c)),l=e.getLocal("pC1"),s=e.getLocal("pR"),r=e.i32_add(e.getLocal("pR"),e.i32_const(2*c)),d=e.i32_add(e.getLocal("pR"),e.i32_const(4*c)),u=e.i32_const(t.alloc(2*c)),_=e.i32_const(t.alloc(2*c));a.addCode(e.call(m+"_add",o,i,u),e.call(m+"_add",i,n,_),e.call(m+"_mul",i,l,d),e.call(m+"_mul",_,l,s),e.call(m+"_sub",s,d,s),e.call(m+"_mulNR",s,s),e.call(m+"_mul",u,l,r),e.call(m+"_sub",r,d,r))}(),function(){const a=t.addFunction(O+"_mul01");a.addParam("pA","i32"),a.addParam("pC0","i32"),a.addParam("pC1","i32"),a.addParam("pR","i32");const e=a.getCodeBuilder(),o=e.getLocal("pA"),i=e.i32_add(e.getLocal("pA"),e.i32_const(2*c)),n=e.i32_add(e.getLocal("pA"),e.i32_const(4*c)),l=e.getLocal("pC0"),s=e.getLocal("pC1"),r=e.getLocal("pR"),d=e.i32_add(e.getLocal("pR"),e.i32_const(2*c)),u=e.i32_add(e.getLocal("pR"),e.i32_const(4*c)),_=e.i32_const(t.alloc(2*c)),g=e.i32_const(t.alloc(2*c)),f=e.i32_const(t.alloc(2*c)),p=e.i32_const(t.alloc(2*c));a.addCode(e.call(m+"_mul",o,l,_),e.call(m+"_mul",i,s,g),e.call(m+"_add",o,i,f),e.call(m+"_add",o,n,p),e.call(m+"_add",i,n,r),e.call(m+"_mul",r,s,r),e.call(m+"_sub",r,g,r),e.call(m+"_mulNR",r,r),e.call(m+"_add",r,_,r),e.call(m+"_add",l,s,d),e.call(m+"_mul",d,f,d),e.call(m+"_sub",d,_,d),e.call(m+"_sub",d,g,d),e.call(m+"_mul",p,l,u),e.call(m+"_sub",u,_,u),e.call(m+"_add",u,g,u))}(),function(){const a=t.addFunction(q+"_mul014");a.addParam("pA","i32"),a.addParam("pC0","i32"),a.addParam("pC1","i32"),a.addParam("pC4","i32"),a.addParam("pR","i32");const e=a.getCodeBuilder(),o=e.getLocal("pA"),i=e.i32_add(e.getLocal("pA"),e.i32_const(6*c)),n=e.getLocal("pC0"),l=e.getLocal("pC1"),s=e.getLocal("pC4"),r=e.i32_const(t.alloc(6*c)),d=e.i32_const(t.alloc(6*c)),u=e.i32_const(t.alloc(2*c)),_=e.getLocal("pR"),g=e.i32_add(e.getLocal("pR"),e.i32_const(6*c));a.addCode(e.call(O+"_mul01",o,n,l,r),e.call(O+"_mul1",i,s,d),e.call(m+"_add",l,s,u),e.call(O+"_add",i,o,g),e.call(O+"_mul01",g,n,u,g),e.call(O+"_sub",g,r,g),e.call(O+"_sub",g,d,g),e.call(O+"_copy",d,_),e.call(O+"_mulNR",_,_),e.call(O+"_add",_,r,_))}(),function(){const a=t.addFunction(e+"_ell");a.addParam("pP","i32"),a.addParam("pCoefs","i32"),a.addParam("pF","i32");const o=a.getCodeBuilder(),i=o.getLocal("pP"),n=o.i32_add(o.getLocal("pP"),o.i32_const(l)),s=o.getLocal("pF"),r=o.getLocal("pCoefs"),d=o.i32_add(o.getLocal("pCoefs"),o.i32_const(c)),u=o.i32_add(o.getLocal("pCoefs"),o.i32_const(2*c)),_=o.i32_add(o.getLocal("pCoefs"),o.i32_const(3*c)),g=o.i32_add(o.getLocal("pCoefs"),o.i32_const(4*c)),p=t.alloc(2*c),h=o.i32_const(p),m=o.i32_const(p),L=o.i32_const(p+c),b=t.alloc(2*c),w=o.i32_const(b),y=o.i32_const(b),A=o.i32_const(b+c);a.addCode(o.call(f+"_mul",r,n,m),o.call(f+"_mul",d,n,L),o.call(f+"_mul",u,i,y),o.call(f+"_mul",_,i,A),o.call(q+"_mul014",s,g,w,h,s))}();const j=t.alloc(Q),V=t.alloc(k);function K(a){const o=t.addFunction(e+"_pairingEq"+a);for(let t=0;t<a;t++)o.addParam("p_"+t,"i32"),o.addParam("q_"+t,"i32");o.addParam("c","i32"),o.setReturnType("i32");const i=o.getCodeBuilder(),n=i.i32_const(t.alloc(r)),l=i.i32_const(t.alloc(r));o.addCode(i.call(q+"_one",n));for(let t=0;t<a;t++)o.addCode(i.call(e+"_prepareG1",i.getLocal("p_"+t),i.i32_const(j))),o.addCode(i.call(e+"_prepareG2",i.getLocal("q_"+t),i.i32_const(V))),o.addCode(i.if(i.i32_eqz(i.call(h+"_inGroupAffine",i.i32_const(j))),i.ret(i.i32_const(0))),i.if(i.i32_eqz(i.call(b+"_inGroupAffine",i.i32_const(V))),i.ret(i.i32_const(0)))),o.addCode(i.call(e+"_millerLoop",i.i32_const(j),i.i32_const(V),l)),o.addCode(i.call(q+"_mul",n,l,n));o.addCode(i.call(e+"_finalExponentiation",n,n)),o.addCode(i.call(q+"_eq",n,i.getLocal("c")))}for(let a=0;a<10;a++)D(a),t.exportFunction(q+"_frobeniusMap"+a);!function(){const a=t.addFunction(h+"_inGroupAffine");a.addParam("p","i32"),a.setReturnType("i32");const e=a.getCodeBuilder(),o=(N*N-1n)/3n,i=e.i32_const(t.alloc(Yi.bigInt2BytesLE(y(4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n),l))),n=e.i32_const(t.alloc(Yi.bigInt2BytesLE(y(793479390729215512621379701633421447060886740281060493010456487427281649075476305620758731620350n),l))),s=e.i32_const(t.alloc(Yi.bigInt2BytesLE(o,16))),r=e.getLocal("p"),d=e.i32_add(e.getLocal("p"),e.i32_const(c)),u=t.alloc(3*c),_=e.i32_const(u),g=e.i32_const(u),p=e.i32_const(u+c),m=t.alloc(2*c),L=e.i32_const(m),b=e.i32_const(m),w=e.i32_const(m+c);a.addCode(e.if(e.call(h+"_isZeroAffine",e.getLocal("p")),e.ret(e.i32_const(1))),e.if(e.i32_eqz(e.call(h+"_inCurveAffine",e.getLocal("p"))),e.ret(e.i32_const(0))),e.call(f+"_mul",r,i,g),e.call(f+"_copy",d,p),e.call(f+"_mul",r,n,b),e.call(f+"_copy",d,w),e.call(h+"_doubleAffine",_,_),e.call(h+"_subMixed",_,e.getLocal("p"),_),e.call(h+"_subMixed",_,L,_),e.call(h+"_timesScalar",_,s,e.i32_const(16),_),e.ret(e.call(h+"_eqMixed",_,L)));const A=t.addFunction(h+"_inGroup");A.addParam("pIn","i32"),A.setReturnType("i32");const C=A.getCodeBuilder(),x=C.i32_const(t.alloc(2*c));A.addCode(C.call(h+"_toAffine",C.getLocal("pIn"),x),C.ret(C.call(h+"_inGroupAffine",x)))}(),function(){const a=t.addFunction(b+"_inGroupAffine");a.addParam("p","i32"),a.setReturnType("i32");const e=a.getCodeBuilder(),o=[2001204777610833696708894912867952078278441409969503942666029068062015825245418932221343814564507832018947136279894n,2001204777610833696708894912867952078278441409969503942666029068062015825245418932221343814564507832018947136279893n],i=[2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n,2973677408986561043442465346520108879172042883009249989176415018091420807192182638567116318576472649347015917690530n],n=e.i32_const(t.alloc([...Yi.bigInt2BytesLE(y(o[0]),l),...Yi.bigInt2BytesLE(y(o[1]),l)])),r=e.i32_const(t.alloc(Yi.bigInt2BytesLE(y(4002409555221667392624310435006688643935503118305586438271171395842971157480381377015405980053539358417135540939436n),l))),d=e.i32_const(t.alloc([...Yi.bigInt2BytesLE(y(i[0]),l),...Yi.bigInt2BytesLE(y(i[1]),l)])),u=e.i32_const(t.alloc(Yi.bigInt2BytesLE(N,8))),_=e.getLocal("p"),g=e.i32_add(e.getLocal("p"),e.i32_const(s)),p=e.i32_const(t.alloc(c)),h=e.i32_const(t.alloc(s)),L=e.i32_const(t.alloc(s)),w=t.alloc(2*s),A=e.i32_const(w),C=e.i32_const(w),x=e.i32_const(w),F=e.i32_const(w+c),I=e.i32_const(w+s),B=e.i32_const(w+s),E=e.i32_const(w+s+c),v=t.alloc(3*s),S=e.i32_const(v),P=e.i32_const(v),O=e.i32_const(v),q=e.i32_const(v+c),G=e.i32_const(v+s),z=e.i32_const(v+s),T=e.i32_const(v+s+c),M=e.i32_const(v+2*s);a.addCode(e.if(e.call(b+"_isZeroAffine",e.getLocal("p")),e.ret(e.i32_const(1))),e.if(e.i32_eqz(e.call(b+"_inCurveAffine",e.getLocal("p"))),e.ret(e.i32_const(0))),e.call(m+"_mul",_,n,h),e.call(m+"_mul",g,n,L),e.call(m+"_mul1",h,r,C),e.call(m+"_neg",L,I),e.call(m+"_neg",h,P),e.call(m+"_mul",L,d,G),e.call(f+"_sub",x,F,p),e.call(f+"_add",x,F,F),e.call(f+"_copy",p,x),e.call(f+"_sub",B,E,p),e.call(f+"_add",B,E,E),e.call(f+"_copy",p,B),e.call(f+"_add",O,q,p),e.call(f+"_sub",O,q,q),e.call(f+"_copy",p,O),e.call(f+"_sub",T,z,p),e.call(f+"_add",z,T,T),e.call(f+"_copy",p,z),e.call(m+"_one",M),e.call(b+"_timesScalar",S,u,e.i32_const(8),S),e.call(b+"_addMixed",S,A,S),e.ret(e.call(b+"_eqMixed",S,e.getLocal("p"))));const U=t.addFunction(b+"_inGroup");U.addParam("pIn","i32"),U.setReturnType("i32");const Q=U.getCodeBuilder(),k=Q.i32_const(t.alloc(2*s));U.addCode(Q.call(b+"_toAffine",Q.getLocal("pIn"),k),Q.ret(Q.call(b+"_inGroupAffine",k)))}(),function(){const a=t.addFunction(e+"_prepAddStep");a.addParam("R","i32"),a.addParam("Q","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("R"),n=o.i32_add(o.getLocal("R"),o.i32_const(2*l)),c=o.i32_add(o.getLocal("R"),o.i32_const(4*l)),r=o.getLocal("Q"),d=o.i32_add(o.getLocal("Q"),o.i32_const(2*l)),u=o.getLocal("r"),_=o.i32_add(o.getLocal("r"),o.i32_const(2*l)),g=o.i32_add(o.getLocal("r"),o.i32_const(4*l)),f=o.i32_const(t.alloc(s)),p=o.i32_const(t.alloc(s)),h=o.i32_const(t.alloc(s)),L=o.i32_const(t.alloc(s)),b=o.i32_const(t.alloc(s)),w=o.i32_const(t.alloc(s)),y=o.i32_const(t.alloc(s)),A=o.i32_const(t.alloc(s)),C=o.i32_const(t.alloc(s)),x=o.i32_const(t.alloc(s)),F=o.i32_const(t.alloc(s));a.addCode(o.call(m+"_square",c,f),o.call(m+"_square",d,p),o.call(m+"_mul",f,r,L),o.call(m+"_add",d,c,_),o.call(m+"_square",_,_),o.call(m+"_sub",_,p,_),o.call(m+"_sub",_,f,_),o.call(m+"_mul",_,f,_),o.call(m+"_sub",L,i,b),o.call(m+"_square",b,w),o.call(m+"_add",w,w,y),o.call(m+"_add",y,y,y),o.call(m+"_mul",y,b,A),o.call(m+"_sub",_,n,C),o.call(m+"_sub",C,n,C),o.call(m+"_mul",C,r,g),o.call(m+"_mul",y,i,x),o.call(m+"_square",C,i),o.call(m+"_sub",i,A,i),o.call(m+"_sub",i,x,i),o.call(m+"_sub",i,x,i),o.call(m+"_add",c,b,c),o.call(m+"_square",c,c),o.call(m+"_sub",c,f,c),o.call(m+"_sub",c,w,c),o.call(m+"_add",d,c,u),o.call(m+"_sub",x,i,F),o.call(m+"_mul",F,C,F),o.call(m+"_mul",n,A,L),o.call(m+"_add",L,L,L),o.call(m+"_sub",F,L,n),o.call(m+"_square",u,u),o.call(m+"_sub",u,p,u),o.call(m+"_square",c,h),o.call(m+"_sub",u,h,u),o.call(m+"_add",g,g,g),o.call(m+"_sub",g,u,g),o.call(m+"_add",c,c,u),o.call(m+"_neg",C,C),o.call(m+"_add",C,C,_))}(),function(){const a=t.addFunction(e+"_prepDblStep");a.addParam("R","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("R"),n=o.i32_add(o.getLocal("R"),o.i32_const(2*l)),c=o.i32_add(o.getLocal("R"),o.i32_const(4*l)),r=o.getLocal("r"),d=o.i32_add(o.getLocal("r"),o.i32_const(2*l)),u=o.i32_add(o.getLocal("r"),o.i32_const(4*l)),_=o.i32_const(t.alloc(s)),g=o.i32_const(t.alloc(s)),f=o.i32_const(t.alloc(s)),p=o.i32_const(t.alloc(s)),h=o.i32_const(t.alloc(s));a.addCode(o.call(m+"_square",i,r),o.call(m+"_square",n,g),o.call(m+"_square",g,f),o.call(m+"_add",g,i,d),o.call(m+"_square",d,d),o.call(m+"_sub",d,r,d),o.call(m+"_sub",d,f,d),o.call(m+"_add",d,d,d),o.call(m+"_add",r,r,p),o.call(m+"_add",p,r,p),o.call(m+"_add",i,p,u),o.call(m+"_square",p,h),o.call(m+"_square",c,_),o.call(m+"_sub",h,d,i),o.call(m+"_sub",i,d,i),o.call(m+"_add",c,n,c),o.call(m+"_square",c,c),o.call(m+"_sub",c,g,c),o.call(m+"_sub",c,_,c),o.call(m+"_sub",d,i,n),o.call(m+"_mul",n,p,n),o.call(m+"_add",f,f,f),o.call(m+"_add",f,f,f),o.call(m+"_add",f,f,f),o.call(m+"_sub",n,f,n),o.call(m+"_mul",p,_,d),o.call(m+"_add",d,d,d),o.call(m+"_neg",d,d),o.call(m+"_square",u,u),o.call(m+"_sub",u,r,u),o.call(m+"_sub",u,h,u),o.call(m+"_add",g,g,g),o.call(m+"_add",g,g,g),o.call(m+"_sub",u,g,u),o.call(m+"_mul",c,_,r),o.call(m+"_add",r,r,r))}(),function(){const a=t.addFunction(e+"_prepareG1");a.addParam("pP","i32"),a.addParam("ppreP","i32");const o=a.getCodeBuilder();a.addCode(o.call(h+"_normalize",o.getLocal("pP"),o.getLocal("ppreP")))}(),function(){const a=t.addFunction(e+"_prepareG2");a.addParam("pQ","i32"),a.addParam("ppreQ","i32"),a.addLocal("pCoef","i32"),a.addLocal("i","i32");const o=a.getCodeBuilder(),i=o.getLocal("pQ"),n=t.alloc(3*s),l=o.i32_const(n),c=o.getLocal("ppreQ");a.addCode(o.call(b+"_normalize",i,c),o.if(o.call(b+"_isZero",c),o.ret([])),o.call(b+"_copy",c,l),o.setLocal("pCoef",o.i32_add(o.getLocal("ppreQ"),o.i32_const(3*s)))),a.addCode(o.setLocal("i",o.i32_const(G.length-2)),o.block(o.loop(o.call(e+"_prepDblStep",l,o.getLocal("pCoef")),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(T))),o.if(o.i32_load8_s(o.getLocal("i"),z),[...o.call(e+"_prepAddStep",l,c,o.getLocal("pCoef")),...o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(T)))]),o.br_if(1,o.i32_eqz(o.getLocal("i"))),o.setLocal("i",o.i32_sub(o.getLocal("i"),o.i32_const(1))),o.br(0))))}(),function(){const a=t.addFunction(e+"_millerLoop");a.addParam("ppreP","i32"),a.addParam("ppreQ","i32"),a.addParam("r","i32"),a.addLocal("pCoef","i32"),a.addLocal("i","i32");const o=a.getCodeBuilder(),i=o.getLocal("ppreP"),n=o.getLocal("pCoef"),l=o.getLocal("r");a.addCode(o.call(q+"_one",l),o.if(o.call(h+"_isZero",i),o.ret([])),o.if(o.call(h+"_isZero",o.getLocal("ppreQ")),o.ret([])),o.setLocal("pCoef",o.i32_add(o.getLocal("ppreQ"),o.i32_const(3*s))),o.setLocal("i",o.i32_const(G.length-2)),o.block(o.loop(o.call(e+"_ell",i,n,l),o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(T))),o.if(o.i32_load8_s(o.getLocal("i"),z),[...o.call(e+"_ell",i,n,l),...o.setLocal("pCoef",o.i32_add(o.getLocal("pCoef"),o.i32_const(T)))]),o.call(q+"_square",l,l),o.br_if(1,o.i32_eq(o.getLocal("i"),o.i32_const(1))),o.setLocal("i",o.i32_sub(o.getLocal("i"),o.i32_const(1))),o.br(0))),o.call(e+"_ell",i,n,l)),a.addCode(o.call(q+"_conjugate",l,l))}(),function(){const a=t.addFunction(e+"_finalExponentiationOld");a.addParam("x","i32"),a.addParam("r","i32");const o=t.alloc(Yi.bigInt2BytesLE(322277361516934140462891564586510139908379969514828494218366688025288661041104682794998680497580008899973249814104447692778988208376779573819485263026159588510513834876303014016798809919343532899164848730280942609956670917565618115867287399623286813270357901731510188149934363360381614501334086825442271920079363289954510565375378443704372994881406797882676971082200626541916413184642520269678897559532260949334760604962086348898118982248842634379637598665468817769075878555493752214492790122785850202957575200176084204422751485957336465472324810982833638490904279282696134323072515220044451592646885410572234451732790590013479358343841220074174848221722017083597872017638514103174122784843925578370430843522959600095676285723737049438346544753168912974976791528535276317256904336520179281145394686565050419250614107803233314658825463117900250701199181529205942363159325765991819433914303908860460720581408201373164047773794825411011922305820065611121544561808414055302212057471395719432072209245600258134364584636810093520285711072578721435517884103526483832733289802426157301542744476740008494780363354305116978805620671467071400711358839553375340724899735460480144599782014906586543813292157922220645089192130209334926661588737007768565838519456601560804957985667880395221049249803753582637708560n,544)),i=a.getCodeBuilder();a.addCode(i.call(q+"_exp",i.getLocal("x"),i.i32_const(o),i.i32_const(544),i.getLocal("r")))}(),function(){!function(){const a=t.addFunction(e+"__cyclotomicSquare");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=o.i32_add(o.getLocal("x"),o.i32_const(s)),l=o.i32_add(o.getLocal("x"),o.i32_const(2*s)),c=o.i32_add(o.getLocal("x"),o.i32_const(3*s)),r=o.i32_add(o.getLocal("x"),o.i32_const(4*s)),d=o.i32_add(o.getLocal("x"),o.i32_const(5*s)),u=o.getLocal("r"),_=o.i32_add(o.getLocal("r"),o.i32_const(s)),g=o.i32_add(o.getLocal("r"),o.i32_const(2*s)),f=o.i32_add(o.getLocal("r"),o.i32_const(3*s)),p=o.i32_add(o.getLocal("r"),o.i32_const(4*s)),h=o.i32_add(o.getLocal("r"),o.i32_const(5*s)),L=o.i32_const(t.alloc(s)),b=o.i32_const(t.alloc(s)),w=o.i32_const(t.alloc(s)),y=o.i32_const(t.alloc(s)),A=o.i32_const(t.alloc(s)),C=o.i32_const(t.alloc(s)),x=o.i32_const(t.alloc(s)),F=o.i32_const(t.alloc(s));a.addCode(o.call(m+"_mul",i,r,x),o.call(m+"_mulNR",r,L),o.call(m+"_add",i,L,L),o.call(m+"_add",i,r,F),o.call(m+"_mul",F,L,L),o.call(m+"_mulNR",x,F),o.call(m+"_add",x,F,F),o.call(m+"_sub",L,F,L),o.call(m+"_add",x,x,b),o.call(m+"_mul",c,l,x),o.call(m+"_mulNR",l,w),o.call(m+"_add",c,w,w),o.call(m+"_add",c,l,F),o.call(m+"_mul",F,w,w),o.call(m+"_mulNR",x,F),o.call(m+"_add",x,F,F),o.call(m+"_sub",w,F,w),o.call(m+"_add",x,x,y),o.call(m+"_mul",n,d,x),o.call(m+"_mulNR",d,A),o.call(m+"_add",n,A,A),o.call(m+"_add",n,d,F),o.call(m+"_mul",F,A,A),o.call(m+"_mulNR",x,F),o.call(m+"_add",x,F,F),o.call(m+"_sub",A,F,A),o.call(m+"_add",x,x,C),o.call(m+"_sub",L,i,u),o.call(m+"_add",u,u,u),o.call(m+"_add",L,u,u),o.call(m+"_add",b,r,p),o.call(m+"_add",p,p,p),o.call(m+"_add",b,p,p),o.call(m+"_mul",C,o.i32_const(P),F),o.call(m+"_add",F,c,f),o.call(m+"_add",f,f,f),o.call(m+"_add",F,f,f),o.call(m+"_sub",A,l,g),o.call(m+"_add",g,g,g),o.call(m+"_add",A,g,g),o.call(m+"_sub",w,n,_),o.call(m+"_add",_,_,_),o.call(m+"_add",w,_,_),o.call(m+"_add",y,d,h),o.call(m+"_add",h,h,h),o.call(m+"_add",y,h,h))}(),$(N,R,"w0");const a=t.addFunction(e+"_finalExponentiation");a.addParam("x","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.getLocal("x"),n=o.getLocal("r"),l=o.i32_const(t.alloc(r)),c=o.i32_const(t.alloc(r)),d=o.i32_const(t.alloc(r)),u=o.i32_const(t.alloc(r)),_=o.i32_const(t.alloc(r)),g=o.i32_const(t.alloc(r)),f=o.i32_const(t.alloc(r));a.addCode(o.call(q+"_frobeniusMap6",i,l),o.call(q+"_inverse",i,c),o.call(q+"_mul",l,c,d),o.call(q+"_copy",d,c),o.call(q+"_frobeniusMap2",d,d),o.call(q+"_mul",d,c,d),o.call(e+"__cyclotomicSquare",d,c),o.call(q+"_conjugate",c,c),o.call(e+"__cyclotomicExp_w0",d,u),o.call(e+"__cyclotomicSquare",u,_),o.call(q+"_mul",c,u,g),o.call(e+"__cyclotomicExp_w0",g,c),o.call(e+"__cyclotomicExp_w0",c,l),o.call(e+"__cyclotomicExp_w0",l,f),o.call(q+"_mul",f,_,f),o.call(e+"__cyclotomicExp_w0",f,_),o.call(q+"_conjugate",g,g),o.call(q+"_mul",_,g,_),o.call(q+"_mul",_,d,_),o.call(q+"_conjugate",d,g),o.call(q+"_mul",c,d,c),o.call(q+"_frobeniusMap3",c,c),o.call(q+"_mul",f,g,f),o.call(q+"_frobeniusMap1",f,f),o.call(q+"_mul",u,l,u),o.call(q+"_frobeniusMap2",u,u),o.call(q+"_mul",u,c,u),o.call(q+"_mul",u,f,u),o.call(q+"_mul",u,_,n))}();for(let a=1;a<=5;a++)K(a),t.exportFunction(e+"_pairingEq"+a);!function(){const a=t.addFunction(e+"_pairing");a.addParam("p","i32"),a.addParam("q","i32"),a.addParam("r","i32");const o=a.getCodeBuilder(),i=o.i32_const(t.alloc(r));a.addCode(o.call(e+"_prepareG1",o.getLocal("p"),o.i32_const(j))),a.addCode(o.call(e+"_prepareG2",o.getLocal("q"),o.i32_const(V))),a.addCode(o.call(e+"_millerLoop",o.i32_const(j),o.i32_const(V),i)),a.addCode(o.call(e+"_finalExponentiation",i,o.getLocal("r")))}(),t.exportFunction(e+"_pairing"),t.exportFunction(e+"_prepareG1"),t.exportFunction(e+"_prepareG2"),t.exportFunction(e+"_millerLoop"),t.exportFunction(e+"_finalExponentiation"),t.exportFunction(e+"_finalExponentiationOld"),t.exportFunction(e+"__cyclotomicSquare"),t.exportFunction(e+"__cyclotomicExp_w0"),t.exportFunction(O+"_mul1"),t.exportFunction(O+"_mul01"),t.exportFunction(q+"_mul014"),t.exportFunction(h+"_inGroupAffine"),t.exportFunction(h+"_inGroup"),t.exportFunction(b+"_inGroupAffine"),t.exportFunction(b+"_inGroup")};function gn(t,a){let e=t;void 0===a&&0==(a=Math.floor((Ze(t)-1)/8)+1)&&(a=1);const o=new Uint8Array(a),i=new DataView(o.buffer);let n=0;for(;n<a;)n+4<=a?(i.setUint32(n,Number(e&BigInt(4294967295)),!0),n+=4,e>>=BigInt(32)):n+2<=a?(i.setUint16(n,Number(e&BigInt(65535)),!0),n+=2,e>>=BigInt(16)):(i.setUint8(n,Number(e&BigInt(255)),!0),n+=1,e>>=BigInt(8));if(e)throw new Error("Number does not fit in this length");return o}const fn=[];for(let t=0;t<256;t++)fn[t]=pn(t,8);function pn(t,a){let e=0,o=t;for(let t=0;t<a;t++)e<<=1,e|=1&o,o>>=1;return e}function hn(t,a){return(fn[t>>>24]|fn[t>>>16&255]<<8|fn[t>>>8&255]<<16|fn[255&t]<<24)>>>32-a}function mn(t){return(0!=(4294901760&t)?(t&=4294901760,16):0)|(0!=(4278255360&t)?(t&=4278255360,8):0)|(0!=(4042322160&t)?(t&=4042322160,4):0)|(0!=(3435973836&t)?(t&=3435973836,2):0)|0!=(2863311530&t)}function Ln(t,a){const e=t.byteLength/a,o=mn(e);if(e!=1<<o)throw new Error("Invalid number of pointers");for(let i=0;i<e;i++){const e=hn(i,o);if(i>e){const o=t.slice(i*a,(i+1)*a);t.set(t.slice(e*a,(e+1)*a),i*a),t.set(o,e*a)}}}function bn(t,a){const e=new Uint8Array(a*t.length);for(let o=0;o<t.length;o++)e.set(t[o],o*a);return e}function wn(t,a){const e=t.byteLength/a,o=new Array(e);for(let i=0;i<e;i++)o[i]=t.slice(i*a,i*a+a);return o}function yn(t,a=0){128&t[a]&&(t[a]|=32),t[a]|=128}var An=Object.freeze({__proto__:null,stringifyBigInts:function t(a){if("bigint"==typeof a||void 0!==a.eq)return a.toString(10);if(a instanceof Uint8Array)return bo(a,0);if(Array.isArray(a))return a.map(t);if("object"==typeof a){const e={};return Object.keys(a).forEach((o=>{e[o]=t(a[o])})),e}return a},unstringifyBigInts:function t(a){if("string"==typeof a&&/^[0-9]+$/.test(a))return BigInt(a);if("string"==typeof a&&/^0x[0-9a-fA-F]+$/.test(a))return BigInt(a);if(Array.isArray(a))return a.map(t);if("object"==typeof a){if(null===a)return null;const e={};return Object.keys(a).forEach((o=>{e[o]=t(a[o])})),e}return a},beBuff2int:function(t){let a=BigInt(0),e=t.length,o=0;const i=new DataView(t.buffer,t.byteOffset,t.byteLength);for(;e>0;)e>=4?(e-=4,a+=BigInt(i.getUint32(e))<<BigInt(8*o),o+=4):e>=2?(e-=2,a+=BigInt(i.getUint16(e))<<BigInt(8*o),o+=2):(e-=1,a+=BigInt(i.getUint8(e))<<BigInt(8*o),o+=1);return a},beInt2Buff:function(t,a){let e=t;const o=new Uint8Array(a),i=new DataView(o.buffer);let n=a;for(;n>0;)n-4>=0?(n-=4,i.setUint32(n,Number(e&BigInt(4294967295))),e>>=BigInt(32)):n-2>=0?(n-=2,i.setUint16(n,Number(e&BigInt(65535))),e>>=BigInt(16)):(n-=1,i.setUint8(n,Number(e&BigInt(255))),e>>=BigInt(8));if(e)throw new Error("Number does not fit in this length");return o},leBuff2int:function(t){let a=BigInt(0),e=0;const o=new DataView(t.buffer,t.byteOffset,t.byteLength);for(;e<t.length;)e+4<=t.length?(a+=BigInt(o.getUint32(e,!0))<<BigInt(8*e),e+=4):e+2<=t.length?(a+=BigInt(o.getUint16(e,!0))<<BigInt(8*e),e+=2):(a+=BigInt(o.getUint8(e,!0))<<BigInt(8*e),e+=1);return a},leInt2Buff:gn,stringifyFElements:function t(a,e){if("bigint"==typeof e||void 0!==e.eq)return e.toString(10);if(e instanceof Uint8Array)return a.toString(a.e(e));if(Array.isArray(e))return e.map(t.bind(this,a));if("object"==typeof e){const o={};return Object.keys(e).forEach((i=>{o[i]=t(a,e[i])})),o}return e},unstringifyFElements:function t(a,e){if("string"==typeof e&&/^[0-9]+$/.test(e))return a.e(e);if("string"==typeof e&&/^0x[0-9a-fA-F]+$/.test(e))return a.e(e);if(Array.isArray(e))return e.map(t.bind(this,a));if("object"==typeof e){if(null===e)return null;const o={};return Object.keys(e).forEach((i=>{o[i]=t(a,e[i])})),o}return e},bitReverse:hn,log2:mn,buffReverseBits:Ln,array2buffer:bn,buffer2array:wn,ffC2blstC:yn});const Cn=1<<30;class xn{constructor(t){this.buffers=[],this.byteLength=t;for(let a=0;a<t;a+=Cn){const e=Math.min(t-a,Cn);this.buffers.push(new Uint8Array(e))}}slice(t,a){void 0===a&&(a=this.byteLength),void 0===t&&(t=0);const e=a-t,o=Math.floor(t/Cn);if(o==Math.floor((t+e-1)/Cn)||0==e)return this.buffers[o].slice(t%Cn,t%Cn+e);let i,n=o,l=t%Cn,c=e;for(;c>0;){const t=l+c>Cn?Cn-l:c,a=new Uint8Array(this.buffers[n].buffer,this.buffers[n].byteOffset+l,t);if(t==e)return a.slice();i||(i=e<=Cn?new Uint8Array(e):new xn(e)),i.set(a,e-c),c-=t,n++,l=0}return i}set(t,a){void 0===a&&(a=0);const e=t.byteLength;if(0==e)return;const o=Math.floor(a/Cn);if(o==Math.floor((a+e-1)/Cn))return t instanceof xn&&1==t.buffers.length?this.buffers[o].set(t.buffers[0],a%Cn):this.buffers[o].set(t,a%Cn);let i=o,n=a%Cn,l=e;for(;l>0;){const a=n+l>Cn?Cn-n:l,o=t.slice(e-l,e-l+a);new Uint8Array(this.buffers[i].buffer,this.buffers[i].byteOffset+n,a).set(o),l-=a,i++,n=0}}}function Fn(t,a,e,o){return async function(i){const n=Math.floor(i.byteLength/e);if(n*e!==i.byteLength)throw new Error("Invalid buffer size");const l=Math.floor(n/t.concurrency),c=[];for(let s=0;s<t.concurrency;s++){let r;if(r=s<t.concurrency-1?l:n-s*l,0==r)continue;const d=[{cmd:"ALLOCSET",var:0,buff:i.slice(s*l*e,s*l*e+r*e)},{cmd:"ALLOC",var:1,len:o*r},{cmd:"CALL",fnName:a,params:[{var:0},{val:r},{var:1}]},{cmd:"GET",out:0,var:1,len:o*r}];c.push(t.queueAction(d))}const s=await Promise.all(c);let r;r=i instanceof xn?new xn(n*o):new Uint8Array(n*o);let d=0;for(let t=0;t<s.length;t++)r.set(s[t][0],d),d+=s[t][0].byteLength;return r}}class In{constructor(t,a,e,o){if(this.tm=t,this.prefix=a,this.p=o,this.n8=e,this.type="F1",this.m=1,this.half=Xe(o,xo),this.bitLength=Ze(o),this.mask=lo(Je(xo,this.bitLength),xo),this.pOp1=t.alloc(e),this.pOp2=t.alloc(e),this.pOp3=t.alloc(e),this.tm.instance.exports[a+"_zero"](this.pOp1),this.zero=this.tm.getBuff(this.pOp1,this.n8),this.tm.instance.exports[a+"_one"](this.pOp1),this.one=this.tm.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one),this.n64=Math.floor(e/8),this.n32=Math.floor(e/4),8*this.n64!=this.n8)throw new Error("n8 must be a multiple of 8");this.half=Xe(this.p,xo),this.nqr=this.two;let i=this.exp(this.nqr,this.half);for(;!this.eq(i,this.negone);)this.nqr=this.add(this.nqr,this.one),i=this.exp(this.nqr,this.half);this.shift=this.mul(this.nqr,this.nqr),this.shiftInv=this.inv(this.shift),this.s=0;let n=lo(this.p,xo);for(;!eo(n);)this.s=this.s+1,n=Xe(n,xo);this.w=[],this.w[this.s]=this.exp(this.nqr,n);for(let t=this.s-1;t>=0;t--)this.w[t]=this.square(this.w[t+1]);if(!this.eq(this.w[0],this.one))throw new Error("Error calculating roots of unity");this.batchToMontgomery=Fn(t,a+"_batchToMontgomery",this.n8,this.n8),this.batchFromMontgomery=Fn(t,a+"_batchFromMontgomery",this.n8,this.n8)}op2(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,a){return this.tm.setBuff(this.pOp1,a),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,a){return this.tm.setBuff(this.pOp1,a),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,a){return this.op2("_add",t,a)}eq(t,a){return this.op2Bool("_eq",t,a)}isZero(t){return this.op1Bool("_isZero",t)}sub(t,a){return this.op2("_sub",t,a)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,a){return this.op2("_mul",t,a)}div(t,a){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,a){return a instanceof Uint8Array||(a=Ao(He(a))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,a.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}isNegative(t){return this.op1Bool("_isNegative",t)}e(t,a){if(t instanceof Uint8Array)return t;let e=He(t,a);We(e)?(e=co(e),fo(e,this.p)&&(e=_o(e,this.p)),e=lo(this.p,e)):fo(e,this.p)&&(e=_o(e,this.p));const o=gn(e,this.n8);return this.toMontgomery(o)}toString(t,a){return yo(bo(this.fromMontgomery(t),0),a)}fromRng(t){let a;const e=new Uint8Array(this.n8);do{a=Co;for(let e=0;e<this.n64;e++)a=no(a,Je(t.nextU64(),64*e));a=ho(a,this.mask)}while(po(a,this.p));return mo(e,0,a,this.n8),e}random(){return this.fromRng(Oo())}toObject(t){return bo(this.fromMontgomery(t),0)}fromObject(t){const a=new Uint8Array(this.n8);return mo(a,0,t,this.n8),this.toMontgomery(a)}toRprLE(t,a,e){t.set(this.fromMontgomery(e),a)}toRprBE(t,a,e){const o=this.fromMontgomery(e);for(let t=0;t<this.n8/2;t++){const a=o[t];o[t]=o[this.n8-1-t],o[this.n8-1-t]=a}t.set(o,a)}fromRprLE(t,a){a=a||0;const e=t.slice(a,a+this.n8);return this.toMontgomery(e)}async batchInverse(t){let a=!1;const e=this.n8,o=this.n8;Array.isArray(t)?(t=bn(t,e),a=!0):t=t.slice(0,t.byteLength);const i=Math.floor(t.byteLength/e);if(i*e!==t.byteLength)throw new Error("Invalid buffer size");const n=Math.floor(i/this.tm.concurrency),l=[];for(let a=0;a<this.tm.concurrency;a++){let c;if(c=a<this.tm.concurrency-1?n:i-a*n,0==c)continue;const s=[{cmd:"ALLOCSET",var:0,buff:t.slice(a*n*e,a*n*e+c*e)},{cmd:"ALLOC",var:1,len:o*c},{cmd:"CALL",fnName:this.prefix+"_batchInverse",params:[{var:0},{val:e},{val:c},{var:1},{val:o}]},{cmd:"GET",out:0,var:1,len:o*c}];l.push(this.tm.queueAction(s))}const c=await Promise.all(l);let s;s=t instanceof xn?new xn(i*o):new Uint8Array(i*o);let r=0;for(let t=0;t<c.length;t++)s.set(c[t][0],r),r+=c[t][0].byteLength;return a?wn(s,o):s}}class Bn{constructor(t,a,e){this.tm=t,this.prefix=a,this.F=e,this.type="F2",this.m=2*e.m,this.n8=2*this.F.n8,this.n32=2*this.F.n32,this.n64=2*this.F.n64,this.pOp1=t.alloc(2*e.n8),this.pOp2=t.alloc(2*e.n8),this.pOp3=t.alloc(2*e.n8),this.tm.instance.exports[a+"_zero"](this.pOp1),this.zero=t.getBuff(this.pOp1,this.n8),this.tm.instance.exports[a+"_one"](this.pOp1),this.one=t.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one)}op2(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,a){return this.tm.setBuff(this.pOp1,a),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,a){return this.tm.setBuff(this.pOp1,a),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,a){return this.op2("_add",t,a)}eq(t,a){return this.op2Bool("_eq",t,a)}isZero(t){return this.op1Bool("_isZero",t)}sub(t,a){return this.op2("_sub",t,a)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}isNegative(t){return this.op1Bool("_isNegative",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,a){return this.op2("_mul",t,a)}mul1(t,a){return this.op2("_mul1",t,a)}div(t,a){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,a){return a instanceof Uint8Array||(a=Ao(He(a))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,a.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}e(t,a){if(t instanceof Uint8Array)return t;if(Array.isArray(t)&&2==t.length){const e=this.F.e(t[0],a),o=this.F.e(t[1],a),i=new Uint8Array(2*this.F.n8);return i.set(e),i.set(o,2*this.F.n8),i}throw new Error("invalid F2")}toString(t,a){return`[${this.F.toString(t.slice(0,this.F.n8),a)}, ${this.F.toString(t.slice(this.F.n8),a)}]`}fromRng(t){const a=this.F.fromRng(t),e=this.F.fromRng(t),o=new Uint8Array(2*this.F.n8);return o.set(a),o.set(e,this.F.n8),o}random(){return this.fromRng(Oo())}toObject(t){return[this.F.toObject(t.slice(0,this.F.n8)),this.F.toObject(t.slice(this.F.n8,2*this.F.n8))]}fromObject(t){const a=new Uint8Array(2*this.F.n8),e=this.F.fromObject(t[0]),o=this.F.fromObject(t[1]);return a.set(e),a.set(o,this.F.n8),a}c1(t){return t.slice(0,this.F.n8)}c2(t){return t.slice(this.F.n8)}}class En{constructor(t,a,e){this.tm=t,this.prefix=a,this.F=e,this.type="F3",this.m=3*e.m,this.n8=3*this.F.n8,this.n32=3*this.F.n32,this.n64=3*this.F.n64,this.pOp1=t.alloc(3*e.n8),this.pOp2=t.alloc(3*e.n8),this.pOp3=t.alloc(3*e.n8),this.tm.instance.exports[a+"_zero"](this.pOp1),this.zero=t.getBuff(this.pOp1,this.n8),this.tm.instance.exports[a+"_one"](this.pOp1),this.one=t.getBuff(this.pOp1,this.n8),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one)}op2(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op2Bool(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2)}op1(t,a){return this.tm.setBuff(this.pOp1,a),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}op1Bool(t,a){return this.tm.setBuff(this.pOp1,a),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}eq(t,a){return this.op2Bool("_eq",t,a)}isZero(t){return this.op1Bool("_isZero",t)}add(t,a){return this.op2("_add",t,a)}sub(t,a){return this.op2("_sub",t,a)}neg(t){return this.op1("_neg",t)}inv(t){return this.op1("_inverse",t)}isNegative(t){return this.op1Bool("_isNegative",t)}toMontgomery(t){return this.op1("_toMontgomery",t)}fromMontgomery(t){return this.op1("_fromMontgomery",t)}mul(t,a){return this.op2("_mul",t,a)}div(t,a){return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_inverse"](this.pOp2,this.pOp2),this.tm.instance.exports[this.prefix+"_mul"](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,this.n8)}square(t){return this.op1("_square",t)}isSquare(t){return this.op1Bool("_isSquare",t)}sqrt(t){return this.op1("_sqrt",t)}exp(t,a){return a instanceof Uint8Array||(a=Ao(He(a))),this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[this.prefix+"_exp"](this.pOp1,this.pOp2,a.byteLength,this.pOp3),this.getBuff(this.pOp3,this.n8)}e(t,a){if(t instanceof Uint8Array)return t;if(Array.isArray(t)&&3==t.length){const e=this.F.e(t[0],a),o=this.F.e(t[1],a),i=this.F.e(t[2],a),n=new Uint8Array(3*this.F.n8);return n.set(e),n.set(o,this.F.n8),n.set(i,2*this.F.n8),n}throw new Error("invalid F3")}toString(t,a){return`[${this.F.toString(t.slice(0,this.F.n8),a)}, ${this.F.toString(t.slice(this.F.n8,2*this.F.n8),a)}, ${this.F.toString(t.slice(2*this.F.n8),a)}]`}fromRng(t){const a=this.F.fromRng(t),e=this.F.fromRng(t),o=this.F.fromRng(t),i=new Uint8Array(3*this.F.n8);return i.set(a),i.set(e,this.F.n8),i.set(o,2*this.F.n8),i}random(){return this.fromRng(Oo())}toObject(t){return[this.F.toObject(t.slice(0,this.F.n8)),this.F.toObject(t.slice(this.F.n8,2*this.F.n8)),this.F.toObject(t.slice(2*this.F.n8,3*this.F.n8))]}fromObject(t){const a=new Uint8Array(3*this.F.n8),e=this.F.fromObject(t[0]),o=this.F.fromObject(t[1]),i=this.F.fromObject(t[2]);return a.set(e),a.set(o,this.F.n8),a.set(i,2*this.F.n8),a}c1(t){return t.slice(0,this.F.n8)}c2(t){return t.slice(this.F.n8,2*this.F.n8)}c3(t){return t.slice(2*this.F.n8)}}class vn{constructor(t,a,e,o,i,n){this.tm=t,this.prefix=a,this.F=e,this.pOp1=t.alloc(3*e.n8),this.pOp2=t.alloc(3*e.n8),this.pOp3=t.alloc(3*e.n8),this.tm.instance.exports[a+"_zero"](this.pOp1),this.zero=this.tm.getBuff(this.pOp1,3*e.n8),this.tm.instance.exports[a+"_zeroAffine"](this.pOp1),this.zeroAffine=this.tm.getBuff(this.pOp1,2*e.n8),this.one=this.tm.getBuff(o,3*e.n8),this.g=this.one,this.oneAffine=this.tm.getBuff(o,2*e.n8),this.gAffine=this.oneAffine,this.b=this.tm.getBuff(i,e.n8),n&&(this.cofactor=Ao(n)),this.negone=this.neg(this.one),this.two=this.add(this.one,this.one),this.batchLEMtoC=Fn(t,a+"_batchLEMtoC",2*e.n8,e.n8),this.batchLEMtoU=Fn(t,a+"_batchLEMtoU",2*e.n8,2*e.n8),this.batchCtoLEM=Fn(t,a+"_batchCtoLEM",e.n8,2*e.n8),this.batchUtoLEM=Fn(t,a+"_batchUtoLEM",2*e.n8,2*e.n8),this.batchToJacobian=Fn(t,a+"_batchToJacobian",2*e.n8,3*e.n8),this.batchToAffine=Fn(t,a+"_batchToAffine",3*e.n8,2*e.n8)}op2(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}op2bool(t,a,e){return this.tm.setBuff(this.pOp1,a),this.tm.setBuff(this.pOp2,e),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp2,this.pOp3)}op1(t,a){return this.tm.setBuff(this.pOp1,a),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}op1Affine(t,a){return this.tm.setBuff(this.pOp1,a),this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3),this.tm.getBuff(this.pOp3,2*this.F.n8)}op1Bool(t,a){return this.tm.setBuff(this.pOp1,a),!!this.tm.instance.exports[this.prefix+t](this.pOp1,this.pOp3)}add(t,a){if(t.byteLength==3*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2("_add",t,a);if(a.byteLength==2*this.F.n8)return this.op2("_addMixed",t,a);throw new Error("invalid point size")}if(t.byteLength==2*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2("_addMixed",a,t);if(a.byteLength==2*this.F.n8)return this.op2("_addAffine",t,a);throw new Error("invalid point size")}throw new Error("invalid point size")}sub(t,a){if(t.byteLength==3*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2("_sub",t,a);if(a.byteLength==2*this.F.n8)return this.op2("_subMixed",t,a);throw new Error("invalid point size")}if(t.byteLength==2*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2("_subMixed",a,t);if(a.byteLength==2*this.F.n8)return this.op2("_subAffine",t,a);throw new Error("invalid point size")}throw new Error("invalid point size")}neg(t){if(t.byteLength==3*this.F.n8)return this.op1("_neg",t);if(t.byteLength==2*this.F.n8)return this.op1Affine("_negAffine",t);throw new Error("invalid point size")}double(t){if(t.byteLength==3*this.F.n8)return this.op1("_double",t);if(t.byteLength==2*this.F.n8)return this.op1("_doubleAffine",t);throw new Error("invalid point size")}isZero(t){if(t.byteLength==3*this.F.n8)return this.op1Bool("_isZero",t);if(t.byteLength==2*this.F.n8)return this.op1Bool("_isZeroAffine",t);throw new Error("invalid point size")}timesScalar(t,a){let e;if(a instanceof Uint8Array||(a=Ao(He(a))),t.byteLength==3*this.F.n8)e=this.prefix+"_timesScalar";else{if(t.byteLength!=2*this.F.n8)throw new Error("invalid point size");e=this.prefix+"_timesScalarAffine"}return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[e](this.pOp1,this.pOp2,a.byteLength,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}timesFr(t,a){let e;if(t.byteLength==3*this.F.n8)e=this.prefix+"_timesFr";else{if(t.byteLength!=2*this.F.n8)throw new Error("invalid point size");e=this.prefix+"_timesFrAffine"}return this.tm.setBuff(this.pOp1,t),this.tm.setBuff(this.pOp2,a),this.tm.instance.exports[e](this.pOp1,this.pOp2,this.pOp3),this.tm.getBuff(this.pOp3,3*this.F.n8)}eq(t,a){if(t.byteLength==3*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2bool("_eq",t,a);if(a.byteLength==2*this.F.n8)return this.op2bool("_eqMixed",t,a);throw new Error("invalid point size")}if(t.byteLength==2*this.F.n8){if(a.byteLength==3*this.F.n8)return this.op2bool("_eqMixed",a,t);if(a.byteLength==2*this.F.n8)return this.op2bool("_eqAffine",t,a);throw new Error("invalid point size")}throw new Error("invalid point size")}toAffine(t){if(t.byteLength==3*this.F.n8)return this.op1Affine("_toAffine",t);if(t.byteLength==2*this.F.n8)return t;throw new Error("invalid point size")}toJacobian(t){if(t.byteLength==3*this.F.n8)return t;if(t.byteLength==2*this.F.n8)return this.op1("_toJacobian",t);throw new Error("invalid point size")}toRprUncompressed(t,a,e){if(this.tm.setBuff(this.pOp1,e),e.byteLength==3*this.F.n8)this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);else if(e.byteLength!=2*this.F.n8)throw new Error("invalid point size");this.tm.instance.exports[this.prefix+"_LEMtoU"](this.pOp1,this.pOp1);const o=this.tm.getBuff(this.pOp1,2*this.F.n8);t.set(o,a)}fromRprUncompressed(t,a){const e=t.slice(a,a+2*this.F.n8);return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+"_UtoLEM"](this.pOp1,this.pOp1),this.tm.getBuff(this.pOp1,2*this.F.n8)}toRprCompressed(t,a,e){if(this.tm.setBuff(this.pOp1,e),e.byteLength==3*this.F.n8)this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);else if(e.byteLength!=2*this.F.n8)throw new Error("invalid point size");this.tm.instance.exports[this.prefix+"_LEMtoC"](this.pOp1,this.pOp1);const o=this.tm.getBuff(this.pOp1,this.F.n8);t.set(o,a)}toBlstCompressed(t,a,e){this.toRprCompressed(t,a,e),yn(t,a)}fromRprCompressed(t,a){const e=t.slice(a,a+this.F.n8);return this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+"_CtoLEM"](this.pOp1,this.pOp2),this.tm.getBuff(this.pOp2,2*this.F.n8)}toUncompressed(t){const a=new Uint8Array(2*this.F.n8);return this.toRprUncompressed(a,0,t),a}toRprLEM(t,a,e){if(e.byteLength!=2*this.F.n8){if(e.byteLength!=3*this.F.n8)throw new Error("invalid point size");{this.tm.setBuff(this.pOp1,e),this.tm.instance.exports[this.prefix+"_toAffine"](this.pOp1,this.pOp1);const o=this.tm.getBuff(this.pOp1,2*this.F.n8);t.set(o,a)}}else t.set(e,a)}fromRprLEM(t,a){return a=a||0,t.slice(a,a+2*this.F.n8)}toString(t,a){if(t.byteLength==3*this.F.n8){return`[ ${this.F.toString(t.slice(0,this.F.n8),a)}, ${this.F.toString(t.slice(this.F.n8,2*this.F.n8),a)}, ${this.F.toString(t.slice(2*this.F.n8),a)} ]`}if(t.byteLength==2*this.F.n8){return`[ ${this.F.toString(t.slice(0,this.F.n8),a)}, ${this.F.toString(t.slice(this.F.n8),a)} ]`}throw new Error("invalid point size")}isValid(t){if(this.isZero(t))return!0;const a=this.F,e=this.toAffine(t),o=e.slice(0,this.F.n8),i=e.slice(this.F.n8,2*this.F.n8),n=a.add(a.mul(a.square(o),o),this.b),l=a.square(i);return a.eq(n,l)}fromRng(t){const a=this.F;let e,o,i=[];do{i[0]=a.fromRng(t),e=t.nextBool(),o=a.add(a.mul(a.square(i[0]),i[0]),this.b)}while(!a.isSquare(o));i[1]=a.sqrt(o);e^a.isNegative(i[1])&&(i[1]=a.neg(i[1]));let n=new Uint8Array(2*this.F.n8);return n.set(i[0]),n.set(i[1],this.F.n8),this.cofactor&&(n=this.timesScalar(n,this.cofactor)),n}toObject(t){if(this.isZero(t))return[this.F.toObject(this.F.zero),this.F.toObject(this.F.one),this.F.toObject(this.F.zero)];const a=this.F.toObject(t.slice(0,this.F.n8)),e=this.F.toObject(t.slice(this.F.n8,2*this.F.n8));let o;return o=t.byteLength==3*this.F.n8?this.F.toObject(t.slice(2*this.F.n8,3*this.F.n8)):this.F.toObject(this.F.one),[a,e,o]}fromObject(t){const a=this.F.fromObject(t[0]),e=this.F.fromObject(t[1]);let o;if(o=3==t.length?this.F.fromObject(t[2]):this.F.one,this.F.isZero(o,this.F.one))return this.zeroAffine;if(this.F.eq(o,this.F.one)){const t=new Uint8Array(2*this.F.n8);return t.set(a),t.set(e,this.F.n8),t}{const t=new Uint8Array(3*this.F.n8);return t.set(a),t.set(e,this.F.n8),t.set(o,2*this.F.n8),t}}e(t){return t instanceof Uint8Array?t:this.fromObject(t)}x(t){return this.toAffine(t).slice(0,this.F.n8)}y(t){return this.toAffine(t).slice(this.F.n8)}}function Sn(t){const a=32767;let e,o;async function i(t){const i=new Uint8Array(t.code),n=await WebAssembly.compile(i);o=new WebAssembly.Memory({initial:t.init,maximum:a}),e=await WebAssembly.instantiate(n,{env:{memory:o}})}function n(t){const e=new Uint32Array(o.buffer,0,1);for(;3&e[0];)e[0]++;const i=e[0];if(e[0]+=t,e[0]+t>o.buffer.byteLength){const i=o.buffer.byteLength/65536;let n=Math.floor((e[0]+t)/65536)+1;n>a&&(n=a),o.grow(n-i)}return i}function l(t){const a=n(t.byteLength);return s(a,t),a}function c(t,a){const e=new Uint8Array(o.buffer);return new Uint8Array(e.buffer,e.byteOffset+t,a)}function s(t,a){new Uint8Array(o.buffer).set(new Uint8Array(a),t)}function r(t){if("INIT"==t[0].cmd)return i(t[0]);const a={vars:[],out:[]},r=new Uint32Array(o.buffer,0,1)[0];for(let o=0;o<t.length;o++)switch(t[o].cmd){case"ALLOCSET":a.vars[t[o].var]=l(t[o].buff);break;case"ALLOC":a.vars[t[o].var]=n(t[o].len);break;case"SET":s(a.vars[t[o].var],t[o].buff);break;case"CALL":{const i=[];for(let e=0;e<t[o].params.length;e++){const n=t[o].params[e];void 0!==n.var?i.push(a.vars[n.var]+(n.offset||0)):void 0!==n.val&&i.push(n.val)}e.exports[t[o].fnName](...i);break}case"GET":a.out[t[o].out]=c(a.vars[t[o].var],t[o].len).slice();break;default:throw new Error("Invalid cmd")}return new Uint32Array(o.buffer,0,1)[0]=r,a.out}return t&&(t.onmessage=function(a){let e;if(e=a.data?a.data:a,"INIT"==e[0].cmd)i(e[0]).then((function(){t.postMessage(e.result)}));else if("TERMINATE"==e[0].cmd)t.close();else{const a=r(e);t.postMessage(a)}}),r}const Pn=25;class On{constructor(){this.promise=new Promise(((t,a)=>{this.reject=a,this.resolve=t}))}}const qn=function(t){return globalThis.btoa(t)}("("+Sn.toString()+")(self)"),Gn="data:application/javascript;base64,"+qn;class zn{constructor(){this.actionQueue=[],this.oldPFree=0}startSyncOp(){if(0!=this.oldPFree)throw new Error("Sync operation in progress");this.oldPFree=this.u32[0]}endSyncOp(){if(0==this.oldPFree)throw new Error("No sync operation in progress");this.u32[0]=this.oldPFree,this.oldPFree=0}postAction(t,a,e,o){if(this.working[t])throw new Error("Posting a job t a working worker");return this.working[t]=!0,this.pendingDeferreds[t]=o||new On,this.workers[t].postMessage(a,e),this.pendingDeferreds[t].promise}processWorks(){for(let t=0;t<this.workers.length&&this.actionQueue.length>0;t++)if(0==this.working[t]){const a=this.actionQueue.shift();this.postAction(t,a.data,a.transfers,a.deferred)}}queueAction(t,a){const e=new On;if(this.singleThread){const a=this.taskManager(t);e.resolve(a)}else this.actionQueue.push({data:t,transfers:a,deferred:e}),this.processWorks();return e.promise}resetMemory(){this.u32[0]=this.initalPFree}allocBuff(t){const a=this.alloc(t.byteLength);return this.setBuff(a,t),a}getBuff(t,a){return this.u8.slice(t,t+a)}setBuff(t,a){this.u8.set(new Uint8Array(a),t)}alloc(t){for(;3&this.u32[0];)this.u32[0]++;const a=this.u32[0];return this.u32[0]+=t,a}async terminate(){for(let t=0;t<this.workers.length;t++)this.workers[t].postMessage([{cmd:"TERMINATE"}]);var t;await(t=200,new Promise((a=>setTimeout(a,t))))}}function Tn(t,a){const e=t[a],o=t.Fr,i=t.tm;t[a].batchApplyKey=async function(t,n,l,c,s){let r,d,u,_,g;if(c=c||"affine",s=s||"affine","G1"==a)"jacobian"==c?(u=3*e.F.n8,r="g1m_batchApplyKey"):(u=2*e.F.n8,r="g1m_batchApplyKeyMixed"),_=3*e.F.n8,"jacobian"==s?g=3*e.F.n8:(d="g1m_batchToAffine",g=2*e.F.n8);else if("G2"==a)"jacobian"==c?(u=3*e.F.n8,r="g2m_batchApplyKey"):(u=2*e.F.n8,r="g2m_batchApplyKeyMixed"),_=3*e.F.n8,"jacobian"==s?g=3*e.F.n8:(d="g2m_batchToAffine",g=2*e.F.n8);else{if("Fr"!=a)throw new Error("Invalid group: "+a);r="frm_batchApplyKey",u=e.n8,_=e.n8,g=e.n8}const f=Math.floor(t.byteLength/u),p=Math.floor(f/i.concurrency),h=[];l=o.e(l);let m=o.e(n);for(let a=0;a<i.concurrency;a++){let e;if(e=a<i.concurrency-1?p:f-a*p,0==e)continue;const n=[];n.push({cmd:"ALLOCSET",var:0,buff:t.slice(a*p*u,a*p*u+e*u)}),n.push({cmd:"ALLOCSET",var:1,buff:m}),n.push({cmd:"ALLOCSET",var:2,buff:l}),n.push({cmd:"ALLOC",var:3,len:e*Math.max(_,g)}),n.push({cmd:"CALL",fnName:r,params:[{var:0},{val:e},{var:1},{var:2},{var:3}]}),d&&n.push({cmd:"CALL",fnName:d,params:[{var:3},{val:e},{var:3}]}),n.push({cmd:"GET",out:0,var:3,len:e*g}),h.push(i.queueAction(n)),m=o.mul(m,o.exp(l,e))}const L=await Promise.all(h);let b;b=t instanceof xn?new xn(f*g):new Uint8Array(f*g);let w=0;for(let t=0;t<L.length;t++)b.set(L[t][0],w),w+=L[t][0].byteLength;return b}}const Mn=[1,1,1,1,2,3,4,5,6,7,7,8,9,10,11,12,13,13,14,15,16,16,17,17,17,17,17,17,17,17,17,17];function Un(t,a){const e=t[a],o=e.tm;async function i(t,o,i,n,l){if(!(t instanceof Uint8Array))throw n&&n.error(`${l} _multiExpChunk buffBases is not Uint8Array`),new Error(`${l} _multiExpChunk buffBases is not Uint8Array`);if(!(o instanceof Uint8Array))throw n&&n.error(`${l} _multiExpChunk buffScalars is not Uint8Array`),new Error(`${l} _multiExpChunk buffScalars is not Uint8Array`);let c,s;if(i=i||"affine","G1"==a)"affine"==i?(s="g1m_multiexpAffine_chunk",c=2*e.F.n8):(s="g1m_multiexp_chunk",c=3*e.F.n8);else{if("G2"!=a)throw new Error("Invalid group");"affine"==i?(s="g2m_multiexpAffine_chunk",c=2*e.F.n8):(s="g2m_multiexp_chunk",c=3*e.F.n8)}const r=Math.floor(t.byteLength/c);if(0==r)return e.zero;const d=Math.floor(o.byteLength/r);if(d*r!=o.byteLength)throw new Error("Scalar size does not match");const u=Mn[mn(r)],_=Math.floor((8*d-1)/u)+1,g=[];for(let a=0;a<_;a++){const i=[{cmd:"ALLOCSET",var:0,buff:t},{cmd:"ALLOCSET",var:1,buff:o},{cmd:"ALLOC",var:2,len:3*e.F.n8},{cmd:"CALL",fnName:s,params:[{var:0},{var:1},{val:d},{val:r},{val:a*u},{val:Math.min(8*d-a*u,u)},{var:2}]},{cmd:"GET",out:0,var:2,len:3*e.F.n8}];g.push(e.tm.queueAction(i))}const f=await Promise.all(g);let p=e.zero;for(let t=f.length-1;t>=0;t--){if(!e.isZero(p))for(let t=0;t<u;t++)p=e.double(p);p=e.add(p,f[t][0])}return p}async function n(t,n,l,c,s){const r=1<<22;let d;if("G1"==a)d="affine"==l?2*e.F.n8:3*e.F.n8;else{if("G2"!=a)throw new Error("Invalid group");d="affine"==l?2*e.F.n8:3*e.F.n8}const u=Math.floor(t.byteLength/d),_=Math.floor(n.byteLength/u);if(_*u!=n.byteLength)throw new Error("Scalar size does not match");const g=Mn[mn(u)],f=Math.floor((8*_-1)/g)+1;let p;p=Math.floor(u/(o.concurrency/f)),p>r&&(p=r),p<1024&&(p=1024);const h=[];for(let a=0;a<u;a+=p){c&&c.debug(`Multiexp start: ${s}: ${a}/${u}`);const e=Math.min(u-a,p),o=t.slice(a*d,(a+e)*d),r=n.slice(a*_,(a+e)*_);h.push(i(o,r,l,c,s).then((t=>(c&&c.debug(`Multiexp end: ${s}: ${a}/${u}`),t))))}const m=await Promise.all(h);let L=e.zero;for(let t=m.length-1;t>=0;t--)L=e.add(L,m[t]);return L}e.multiExp=async function(t,a,e,o){return await n(t,a,"jacobian",e,o)},e.multiExpAffine=async function(t,a,e,o){return await n(t,a,"affine",e,o)}}function Qn(t,a){const e=t[a],o=t.Fr,i=e.tm;async function n(t,c,s,r,d,u){s=s||"affine",r=r||"affine";let _,g,f,p,h,m,L,b;"G1"==a?("affine"==s?(_=2*e.F.n8,p="g1m_batchToJacobian"):_=3*e.F.n8,g=3*e.F.n8,c&&(b="g1m_fftFinal"),L="g1m_fftJoin",m="g1m_fftMix","affine"==r?(f=2*e.F.n8,h="g1m_batchToAffine"):f=3*e.F.n8):"G2"==a?("affine"==s?(_=2*e.F.n8,p="g2m_batchToJacobian"):_=3*e.F.n8,g=3*e.F.n8,c&&(b="g2m_fftFinal"),L="g2m_fftJoin",m="g2m_fftMix","affine"==r?(f=2*e.F.n8,h="g2m_batchToAffine"):f=3*e.F.n8):"Fr"==a&&(_=e.n8,g=e.n8,f=e.n8,c&&(b="frm_fftFinal"),m="frm_fftMix",L="frm_fftJoin");let w=!1;Array.isArray(t)?(t=bn(t,_),w=!0):t=t.slice(0,t.byteLength);const y=t.byteLength/_,A=mn(y);if(1<<A!=y)throw new Error("fft must be multiple of 2");if(A==o.s+1){let a;return a=c?await async function(t,a,e,i,c){let s,r;s=t.slice(0,t.byteLength/2),r=t.slice(t.byteLength/2,t.byteLength);const d=[];d.push(n(s,!0,a,"jacobian",i,c)),d.push(n(r,!0,a,"jacobian",i,c)),[s,r]=await Promise.all(d);const u=await l(s,r,"fftJoinExtInv",o.one,o.shiftInv,"jacobian",e,i,c);let _;_=u[0].byteLength>1<<28?new xn(2*u[0].byteLength):new Uint8Array(2*u[0].byteLength);return _.set(u[0]),_.set(u[1],u[0].byteLength),_}(t,s,r,d,u):await async function(t,a,e,i,c){let s,r;s=t.slice(0,t.byteLength/2),r=t.slice(t.byteLength/2,t.byteLength);const d=[];[s,r]=await l(s,r,"fftJoinExt",o.one,o.shift,a,"jacobian",i,c),d.push(n(s,!1,"jacobian",e,i,c)),d.push(n(r,!1,"jacobian",e,i,c));const u=await Promise.all(d);let _;_=u[0].byteLength>1<<28?new xn(2*u[0].byteLength):new Uint8Array(2*u[0].byteLength);return _.set(u[0]),_.set(u[1],u[0].byteLength),_}(t,s,r,d,u),w?wn(a,f):a}let C,x,F;c&&(C=o.inv(o.e(y))),Ln(t,_);let I=Math.min(16384,y),B=y/I;for(;B<i.concurrency&&I>=16;)B*=2,I/=2;const E=mn(I),v=[];for(let a=0;a<B;a++){d&&d.debug(`${u}: fft ${A} mix start: ${a}/${B}`);const e=[];e.push({cmd:"ALLOC",var:0,len:g*I});const o=t.slice(I*a*_,I*(a+1)*_);e.push({cmd:"SET",var:0,buff:o}),p&&e.push({cmd:"CALL",fnName:p,params:[{var:0},{val:I},{var:0}]});for(let t=1;t<=E;t++)e.push({cmd:"CALL",fnName:m,params:[{var:0},{val:I},{val:t}]});E==A?(b&&(e.push({cmd:"ALLOCSET",var:1,buff:C}),e.push({cmd:"CALL",fnName:b,params:[{var:0},{val:I},{var:1}]})),h&&e.push({cmd:"CALL",fnName:h,params:[{var:0},{val:I},{var:0}]}),e.push({cmd:"GET",out:0,var:0,len:I*f})):e.push({cmd:"GET",out:0,var:0,len:g*I}),v.push(i.queueAction(e).then((t=>(d&&d.debug(`${u}: fft ${A} mix end: ${a}/${B}`),t))))}F=await Promise.all(v);for(let t=0;t<B;t++)F[t]=F[t][0];for(let t=E+1;t<=A;t++){d&&d.debug(`${u}: fft  ${A}  join: ${t}/${A}`);const a=1<<A-t,e=B/a,n=[];for(let l=0;l<a;l++)for(let c=0;c<e/2;c++){const s=o.exp(o.w[t],c*I),r=o.w[t],_=l*e+c,p=l*e+c+e/2,m=[];m.push({cmd:"ALLOCSET",var:0,buff:F[_]}),m.push({cmd:"ALLOCSET",var:1,buff:F[p]}),m.push({cmd:"ALLOCSET",var:2,buff:s}),m.push({cmd:"ALLOCSET",var:3,buff:r}),m.push({cmd:"CALL",fnName:L,params:[{var:0},{var:1},{val:I},{var:2},{var:3}]}),t==A?(b&&(m.push({cmd:"ALLOCSET",var:4,buff:C}),m.push({cmd:"CALL",fnName:b,params:[{var:0},{val:I},{var:4}]}),m.push({cmd:"CALL",fnName:b,params:[{var:1},{val:I},{var:4}]})),h&&(m.push({cmd:"CALL",fnName:h,params:[{var:0},{val:I},{var:0}]}),m.push({cmd:"CALL",fnName:h,params:[{var:1},{val:I},{var:1}]})),m.push({cmd:"GET",out:0,var:0,len:I*f}),m.push({cmd:"GET",out:1,var:1,len:I*f})):(m.push({cmd:"GET",out:0,var:0,len:I*g}),m.push({cmd:"GET",out:1,var:1,len:I*g})),n.push(i.queueAction(m).then((o=>(d&&d.debug(`${u}: fft ${A} join  ${t}/${A}  ${l+1}/${a} ${c}/${e/2}`),o))))}const l=await Promise.all(n);for(let t=0;t<a;t++)for(let a=0;a<e/2;a++){const o=t*e+a,i=t*e+a+e/2,n=l.shift();F[o]=n[0],F[i]=n[1]}}if(x=t instanceof xn?new xn(y*f):new Uint8Array(y*f),c){x.set(F[0].slice((I-1)*f));let t=f;for(let a=B-1;a>0;a--)x.set(F[a],t),t+=I*f,delete F[a];x.set(F[0].slice(0,(I-1)*f),t),delete F[0]}else for(let t=0;t<B;t++)x.set(F[t],I*f*t),delete F[t];return w?wn(x,f):x}async function l(t,n,l,c,s,r,d,u,_){let g,f,p,h,m,L;if("G1"==a)"affine"==r?(m=2*e.F.n8,f="g1m_batchToJacobian"):m=3*e.F.n8,L=3*e.F.n8,g="g1m_"+l,"affine"==d?(p="g1m_batchToAffine",h=2*e.F.n8):h=3*e.F.n8;else if("G2"==a)"affine"==r?(m=2*e.F.n8,f="g2m_batchToJacobian"):m=3*e.F.n8,g="g2m_"+l,L=3*e.F.n8,"affine"==d?(p="g2m_batchToAffine",h=2*e.F.n8):h=3*e.F.n8;else{if("Fr"!=a)throw new Error("Invalid group");m=o.n8,h=o.n8,L=o.n8,g="frm_"+l}if(t.byteLength!=n.byteLength)throw new Error("Invalid buffer size");const b=Math.floor(t.byteLength/m);if(b!=1<<mn(b))throw new Error("Invalid number of points");let w=Math.floor(b/i.concurrency);w<16&&(w=16),w>65536&&(w=65536);const y=[];for(let a=0;a<b;a+=w){u&&u.debug(`${_}: fftJoinExt Start: ${a}/${b}`);const e=Math.min(b-a,w),l=o.mul(c,o.exp(s,a)),r=[],d=t.slice(a*m,(a+e)*m),A=n.slice(a*m,(a+e)*m);r.push({cmd:"ALLOC",var:0,len:L*e}),r.push({cmd:"SET",var:0,buff:d}),r.push({cmd:"ALLOC",var:1,len:L*e}),r.push({cmd:"SET",var:1,buff:A}),r.push({cmd:"ALLOCSET",var:2,buff:l}),r.push({cmd:"ALLOCSET",var:3,buff:s}),f&&(r.push({cmd:"CALL",fnName:f,params:[{var:0},{val:e},{var:0}]}),r.push({cmd:"CALL",fnName:f,params:[{var:1},{val:e},{var:1}]})),r.push({cmd:"CALL",fnName:g,params:[{var:0},{var:1},{val:e},{var:2},{var:3},{val:o.s}]}),p&&(r.push({cmd:"CALL",fnName:p,params:[{var:0},{val:e},{var:0}]}),r.push({cmd:"CALL",fnName:p,params:[{var:1},{val:e},{var:1}]})),r.push({cmd:"GET",out:0,var:0,len:e*h}),r.push({cmd:"GET",out:1,var:1,len:e*h}),y.push(i.queueAction(r).then((t=>(u&&u.debug(`${_}: fftJoinExt End: ${a}/${b}`),t))))}const A=await Promise.all(y);let C,x;b*h>1<<28?(C=new xn(b*h),x=new xn(b*h)):(C=new Uint8Array(b*h),x=new Uint8Array(b*h));let F=0;for(let t=0;t<A.length;t++)C.set(A[t][0],F),x.set(A[t][1],F),F+=A[t][0].byteLength;return[C,x]}e.fft=async function(t,a,e,o,i){return await n(t,!1,a,e,o,i)},e.ifft=async function(t,a,e,o,i){return await n(t,!0,a,e,o,i)},e.lagrangeEvaluations=async function(t,i,c,s,r){let d;if(i=i||"affine",c=c||"affine","G1"==a)d="affine"==i?2*e.F.n8:3*e.F.n8;else if("G2"==a)d="affine"==i?2*e.F.n8:3*e.F.n8;else{if("Fr"!=a)throw new Error("Invalid group");d=o.n8}const u=t.byteLength/d,_=mn(u);if(2**_*d!=t.byteLength)throw s&&s.error("lagrangeEvaluations iinvalid input size"),new Error("lagrangeEvaluations invalid Input size");if(_<=o.s)return await e.ifft(t,i,c,s,r);if(_>o.s+1)throw s&&s.error("lagrangeEvaluations input too big"),new Error("lagrangeEvaluations input too big");let g=t.slice(0,t.byteLength/2),f=t.slice(t.byteLength/2,t.byteLength);const p=o.exp(o.shift,u/2),h=o.inv(o.sub(o.one,p));[g,f]=await l(g,f,"prepareLagrangeEvaluation",h,o.shiftInv,i,"jacobian",s,r+" prep");const m=[];let L;return m.push(n(g,!0,"jacobian",c,s,r+" t0")),m.push(n(f,!0,"jacobian",c,s,r+" t1")),[g,f]=await Promise.all(m),L=g.byteLength>1<<28?new xn(2*g.byteLength):new Uint8Array(2*g.byteLength),L.set(g),L.set(f,g.byteLength),L},e.fftMix=async function(t){const n=3*e.F.n8;let l,c;if("G1"==a)l="g1m_fftMix",c="g1m_fftJoin";else if("G2"==a)l="g2m_fftMix",c="g2m_fftJoin";else{if("Fr"!=a)throw new Error("Invalid group");l="frm_fftMix",c="frm_fftJoin"}const s=Math.floor(t.byteLength/n),r=mn(s);let d=1<<mn(i.concurrency);s<=2*d&&(d=1);const u=s/d,_=mn(u),g=[];for(let a=0;a<d;a++){const e=[],o=t.slice(a*u*n,(a+1)*u*n);e.push({cmd:"ALLOCSET",var:0,buff:o});for(let t=1;t<=_;t++)e.push({cmd:"CALL",fnName:l,params:[{var:0},{val:u},{val:t}]});e.push({cmd:"GET",out:0,var:0,len:u*n}),g.push(i.queueAction(e))}const f=await Promise.all(g),p=[];for(let t=0;t<f.length;t++)p[t]=f[t][0];for(let t=_+1;t<=r;t++){const a=1<<r-t,e=d/a,l=[];for(let s=0;s<a;s++)for(let a=0;a<e/2;a++){const r=o.exp(o.w[t],a*u),d=o.w[t],_=s*e+a,g=s*e+a+e/2,f=[];f.push({cmd:"ALLOCSET",var:0,buff:p[_]}),f.push({cmd:"ALLOCSET",var:1,buff:p[g]}),f.push({cmd:"ALLOCSET",var:2,buff:r}),f.push({cmd:"ALLOCSET",var:3,buff:d}),f.push({cmd:"CALL",fnName:c,params:[{var:0},{var:1},{val:u},{var:2},{var:3}]}),f.push({cmd:"GET",out:0,var:0,len:u*n}),f.push({cmd:"GET",out:1,var:1,len:u*n}),l.push(i.queueAction(f))}const s=await Promise.all(l);for(let t=0;t<a;t++)for(let a=0;a<e/2;a++){const o=t*e+a,i=t*e+a+e/2,n=s.shift();p[o]=n[0],p[i]=n[1]}}let h;h=t instanceof xn?new xn(s*n):new Uint8Array(s*n);let m=0;for(let t=0;t<d;t++)h.set(p[t],m),m+=p[t].byteLength;return h},e.fftJoin=async function(t,n,l,c){const s=3*e.F.n8;let r;if("G1"==a)r="g1m_fftJoin";else if("G2"==a)r="g2m_fftJoin";else{if("Fr"!=a)throw new Error("Invalid group");r="frm_fftJoin"}if(t.byteLength!=n.byteLength)throw new Error("Invalid buffer size");const d=Math.floor(t.byteLength/s);if(d!=1<<mn(d))throw new Error("Invalid number of points");let u=1<<mn(i.concurrency);d<=2*u&&(u=1);const _=d/u,g=[];for(let a=0;a<u;a++){const e=[],d=o.mul(l,o.exp(c,a*_)),u=t.slice(a*_*s,(a+1)*_*s),f=n.slice(a*_*s,(a+1)*_*s);e.push({cmd:"ALLOCSET",var:0,buff:u}),e.push({cmd:"ALLOCSET",var:1,buff:f}),e.push({cmd:"ALLOCSET",var:2,buff:d}),e.push({cmd:"ALLOCSET",var:3,buff:c}),e.push({cmd:"CALL",fnName:r,params:[{var:0},{var:1},{val:_},{var:2},{var:3}]}),e.push({cmd:"GET",out:0,var:0,len:_*s}),e.push({cmd:"GET",out:1,var:1,len:_*s}),g.push(i.queueAction(e))}const f=await Promise.all(g);let p,h;t instanceof xn?(p=new xn(d*s),h=new xn(d*s)):(p=new Uint8Array(d*s),h=new Uint8Array(d*s));let m=0;for(let t=0;t<f.length;t++)p.set(f[t][0],m),h.set(f[t][1],m),m+=f[t][0].byteLength;return[p,h]},e.fftFinal=async function(t,o){const n=3*e.F.n8,l=2*e.F.n8;let c,s;if("G1"==a)c="g1m_fftFinal",s="g1m_batchToAffine";else{if("G2"!=a)throw new Error("Invalid group");c="g2m_fftFinal",s="g2m_batchToAffine"}const r=Math.floor(t.byteLength/n);if(r!=1<<mn(r))throw new Error("Invalid number of points");const d=Math.floor(r/i.concurrency),u=[];for(let a=0;a<i.concurrency;a++){let e;if(e=a<i.concurrency-1?d:r-a*d,0==e)continue;const _=[],g=t.slice(a*d*n,(a*d+e)*n);_.push({cmd:"ALLOCSET",var:0,buff:g}),_.push({cmd:"ALLOCSET",var:1,buff:o}),_.push({cmd:"CALL",fnName:c,params:[{var:0},{val:e},{var:1}]}),_.push({cmd:"CALL",fnName:s,params:[{var:0},{val:e},{var:0}]}),_.push({cmd:"GET",out:0,var:0,len:e*l}),u.push(i.queueAction(_))}const _=await Promise.all(u);let g;g=t instanceof xn?new xn(r*l):new Uint8Array(r*l);let f=0;for(let t=_.length-1;t>=0;t--)g.set(_[t][0],f),f+=_[t][0].byteLength;return g}}async function kn(t){const a=await async function(t,a){const e=new zn;e.memory=new WebAssembly.Memory({initial:Pn}),e.u8=new Uint8Array(e.memory.buffer),e.u32=new Uint32Array(e.memory.buffer);const o=await WebAssembly.compile(t.code);if(e.instance=await WebAssembly.instantiate(o,{env:{memory:e.memory}}),e.singleThread=a,e.initalPFree=e.u32[0],e.pq=t.pq,e.pr=t.pr,e.pG1gen=t.pG1gen,e.pG1zero=t.pG1zero,e.pG2gen=t.pG2gen,e.pG2zero=t.pG2zero,e.pOneT=t.pOneT,a)e.code=t.code,e.taskManager=Sn(),await e.taskManager([{cmd:"INIT",init:Pn,code:e.code.slice()}]),e.concurrency=1;else{let a;e.workers=[],e.pendingDeferreds=[],e.working=[],a="object"==typeof navigator&&navigator.hardwareConcurrency?navigator.hardwareConcurrency:Ta.cpus().length,0==a&&(a=2),a>64&&(a=64),e.concurrency=a;for(let t=0;t<a;t++)e.workers[t]=new Ma(Gn),e.workers[t].addEventListener("message",i(t)),e.working[t]=!1;const o=[];for(let a=0;a<e.workers.length;a++){const i=t.code.slice();o.push(e.postAction(a,[{cmd:"INIT",init:Pn,code:i}],[i.buffer]))}await Promise.all(o)}return e;function i(t){return function(a){let o;o=a&&a.data?a.data:a,e.working[t]=!1,e.pendingDeferreds[t].resolve(o),e.processWorks()}}}(t.wasm,t.singleThread),e={};return e.q=He(t.wasm.q.toString()),e.r=He(t.wasm.r.toString()),e.name=t.name,e.tm=a,e.prePSize=t.wasm.prePSize,e.preQSize=t.wasm.preQSize,e.Fr=new In(a,"frm",t.n8r,t.r),e.F1=new In(a,"f1m",t.n8q,t.q),e.F2=new Bn(a,"f2m",e.F1),e.G1=new vn(a,"g1m",e.F1,t.wasm.pG1gen,t.wasm.pG1b,t.cofactorG1),e.G2=new vn(a,"g2m",e.F2,t.wasm.pG2gen,t.wasm.pG2b,t.cofactorG2),e.F6=new En(a,"f6m",e.F2),e.F12=new Bn(a,"ftm",e.F6),e.Gt=e.F12,Tn(e,"G1"),Tn(e,"G2"),Tn(e,"Fr"),Un(e,"G1"),Un(e,"G2"),Qn(e,"G1"),Qn(e,"G2"),Qn(e,"Fr"),function(t){const a=t.tm;t.pairing=function(e,o){a.startSyncOp();const i=a.allocBuff(t.G1.toJacobian(e)),n=a.allocBuff(t.G2.toJacobian(o)),l=a.alloc(t.Gt.n8);a.instance.exports[t.name+"_pairing"](i,n,l);const c=a.getBuff(l,t.Gt.n8);return a.endSyncOp(),c},t.pairingEq=async function(){let e,o;arguments.length%2==1?(e=arguments[arguments.length-1],o=(arguments.length-1)/2):(e=t.Gt.one,o=arguments.length/2);const i=[];for(let e=0;e<o;e++){const o=[],n=t.G1.toJacobian(arguments[2*e]);o.push({cmd:"ALLOCSET",var:0,buff:n}),o.push({cmd:"ALLOC",var:1,len:t.prePSize});const l=t.G2.toJacobian(arguments[2*e+1]);o.push({cmd:"ALLOCSET",var:2,buff:l}),o.push({cmd:"ALLOC",var:3,len:t.preQSize}),o.push({cmd:"ALLOC",var:4,len:t.Gt.n8}),o.push({cmd:"CALL",fnName:t.name+"_prepareG1",params:[{var:0},{var:1}]}),o.push({cmd:"CALL",fnName:t.name+"_prepareG2",params:[{var:2},{var:3}]}),o.push({cmd:"CALL",fnName:t.name+"_millerLoop",params:[{var:1},{var:3},{var:4}]}),o.push({cmd:"GET",out:0,var:4,len:t.Gt.n8}),i.push(a.queueAction(o))}const n=await Promise.all(i);a.startSyncOp();const l=a.alloc(t.Gt.n8);a.instance.exports.ftm_one(l);for(let t=0;t<n.length;t++){const e=a.allocBuff(n[t][0]);a.instance.exports.ftm_mul(l,e,l)}a.instance.exports[t.name+"_finalExponentiation"](l,l);const c=a.allocBuff(e),s=!!a.instance.exports.ftm_eq(l,c);return a.endSyncOp(),s},t.prepareG1=function(t){this.tm.startSyncOp();const a=this.tm.allocBuff(t),e=this.tm.alloc(this.prePSize);this.tm.instance.exports[this.name+"_prepareG1"](a,e);const o=this.tm.getBuff(e,this.prePSize);return this.tm.endSyncOp(),o},t.prepareG2=function(t){this.tm.startSyncOp();const a=this.tm.allocBuff(t),e=this.tm.alloc(this.preQSize);this.tm.instance.exports[this.name+"_prepareG2"](a,e);const o=this.tm.getBuff(e,this.preQSize);return this.tm.endSyncOp(),o},t.millerLoop=function(t,a){this.tm.startSyncOp();const e=this.tm.allocBuff(t),o=this.tm.allocBuff(a),i=this.tm.alloc(this.Gt.n8);this.tm.instance.exports[this.name+"_millerLoop"](e,o,i);const n=this.tm.getBuff(i,this.Gt.n8);return this.tm.endSyncOp(),n},t.finalExponentiation=function(t){this.tm.startSyncOp();const a=this.tm.allocBuff(t),e=this.tm.alloc(this.Gt.n8);this.tm.instance.exports[this.name+"_finalExponentiation"](a,e);const o=this.tm.getBuff(e,this.Gt.n8);return this.tm.endSyncOp(),o}}(e),e.array2buffer=function(t,a){const e=new Uint8Array(a*t.length);for(let o=0;o<t.length;o++)e.set(t[o],o*a);return e},e.buffer2array=function(t,a){const e=t.byteLength/a,o=new Array(e);for(let i=0;i<e;i++)o[i]=t.slice(i*a,i*a+a);return o},e}async function Rn(t,a){const e=new se;e.setMemory(25),un(e),a&&a(e);const o={};if(o.code=e.build(),o.pq=e.modules.f1m.pq,o.pr=e.modules.frm.pq,o.pG1gen=e.modules.bn128.pG1gen,o.pG1zero=e.modules.bn128.pG1zero,o.pG1b=e.modules.bn128.pG1b,o.pG2gen=e.modules.bn128.pG2gen,o.pG2zero=e.modules.bn128.pG2zero,o.pG2b=e.modules.bn128.pG2b,o.pOneT=e.modules.bn128.pOneT,o.prePSize=e.modules.bn128.prePSize,o.preQSize=e.modules.bn128.preQSize,o.n8q=32,o.n8r=32,o.q=e.modules.bn128.q,o.r=e.modules.bn128.r,!t&&globalThis.curve_bn128)return globalThis.curve_bn128;const i={name:"bn128",wasm:o,q:He("21888242871839275222246405745257275088696311157297823662689037894645226208583"),r:He("21888242871839275222246405745257275088548364400416034343698204186575808495617"),n8q:32,n8r:32,cofactorG2:He("30644e72e131a029b85045b68181585e06ceecda572a2489345f2299c0f9fa8d",16),singleThread:!!t},n=await kn(i);return n.terminate=async function(){i.singleThread||(globalThis.curve_bn128=null,await this.tm.terminate())},t||(globalThis.curve_bn128=n),n}async function Nn(t,a){const e=new se;e.setMemory(25),_n(e),a&&a(e);const o={};if(o.code=e.build(),o.pq=e.modules.f1m.pq,o.pr=e.modules.frm.pq,o.pG1gen=e.modules.bls12381.pG1gen,o.pG1zero=e.modules.bls12381.pG1zero,o.pG1b=e.modules.bls12381.pG1b,o.pG2gen=e.modules.bls12381.pG2gen,o.pG2zero=e.modules.bls12381.pG2zero,o.pG2b=e.modules.bls12381.pG2b,o.pOneT=e.modules.bls12381.pOneT,o.prePSize=e.modules.bls12381.prePSize,o.preQSize=e.modules.bls12381.preQSize,o.n8q=48,o.n8r=32,o.q=e.modules.bls12381.q,o.r=e.modules.bls12381.r,!t&&globalThis.curve_bls12381)return globalThis.curve_bls12381;const i={name:"bls12381",wasm:o,q:He("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),r:He("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),n8q:48,n8r:32,cofactorG1:He("0x396c8c005555e1568c00aaab0000aaab",16),cofactorG2:He("0x5d543a95414e7f1091d50792876a202cd91de4547085abaa68a205b2e5a7ddfa628f1cb4d9e82ef21537e293a6691ae1616ec6e786f0c70cf1c38e31c7238e5",16),singleThread:!!t},n=await kn(i);return n.terminate=async function(){i.singleThread||(globalThis.curve_bls12381=null,await this.tm.terminate())},t||(globalThis.curve_bls12381=n),n}globalThis.curve_bn128=null,globalThis.curve_bls12381=null,He("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),He("21888242871839275222246405745257275088548364400416034343698204186575808495617"),He("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),He("21888242871839275222246405745257275088696311157297823662689037894645226208583");const Dn=Fo,$n=An,jn=Dn.e("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),Vn=Dn.e("21888242871839275222246405745257275088548364400416034343698204186575808495617"),Kn=Dn.e("1a0111ea397fe69a4b1ba7b6434bacd764774b84f38512bf6730d2a0f6b0f6241eabfffeb153ffffb9feffffffffaaab",16),Hn=Dn.e("21888242871839275222246405745257275088696311157297823662689037894645226208583");async function Zn(t){let a;if(Dn.eq(t,Hn))a=await Rn();else{if(!Dn.eq(t,Kn))throw new Error(`Curve not supported: ${Dn.toString(t)}`);a=await Nn()}return a}async function Wn(t){let a;const e=t.toUpperCase().match(/[A-Za-z0-9]+/g).join("");if(["BN128","BN254","ALTBN128"].indexOf(e)>=0)a=await Rn();else{if(!(["BLS12381"].indexOf(e)>=0))throw new Error(`Curve not supported: ${t}`);a=await Nn()}return a}var Yn={exports:{}},Jn=function t(a,e){if(!a){var o=new Xn(e);throw Error.captureStackTrace&&Error.captureStackTrace(o,t),o}};class Xn extends Error{}Xn.prototype.name="AssertionError";var tl={exports:{}};function al(t){return t.length}var el={byteLength:al,toString:function(t){const a=t.byteLength;let e="";for(let o=0;o<a;o++)e+=String.fromCharCode(t[o]);return e},write:function(t,a,e=0,o=al(a)){const i=Math.min(o,t.byteLength-e);for(let o=0;o<i;o++)t[e+o]=a.charCodeAt(o);return i}};const ol="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",il=new Uint8Array(256);for(let t=0;t<ol.length;t++)il[ol.charCodeAt(t)]=t;function nl(t){let a=t.length;return 61===t.charCodeAt(a-1)&&a--,a>1&&61===t.charCodeAt(a-1)&&a--,3*a>>>2}il[45]=62,il[95]=63;var ll={byteLength:nl,toString:function(t){const a=t.byteLength;let e="";for(let o=0;o<a;o+=3)e+=ol[t[o]>>2]+ol[(3&t[o])<<4|t[o+1]>>4]+ol[(15&t[o+1])<<2|t[o+2]>>6]+ol[63&t[o+2]];return a%3==2?e=e.substring(0,e.length-1)+"=":a%3==1&&(e=e.substring(0,e.length-2)+"=="),e},write:function(t,a,e=0,o=nl(a)){const i=Math.min(o,t.byteLength-e);for(let e=0,o=0;o<i;e+=4){const i=il[a.charCodeAt(e)],n=il[a.charCodeAt(e+1)],l=il[a.charCodeAt(e+2)],c=il[a.charCodeAt(e+3)];t[o++]=i<<2|n>>4,t[o++]=(15&n)<<4|l>>2,t[o++]=(3&l)<<6|63&c}return i}};function cl(t){return t.length>>>1}var sl={byteLength:cl,toString:function(t){const a=t.byteLength;t=new DataView(t.buffer,t.byteOffset,a);let e="",o=0;for(let i=a-a%4;o<i;o+=4)e+=t.getUint32(o).toString(16).padStart(8,"0");for(;o<a;o++)e+=t.getUint8(o).toString(16).padStart(2,"0");return e},write:function(t,a,e=0,o=cl(a)){const i=Math.min(o,t.byteLength-e);for(let o=0;o<i;o++){const i=rl(a.charCodeAt(2*o)),n=rl(a.charCodeAt(2*o+1));if(void 0===i||void 0===n)return t.subarray(0,o);t[e+o]=i<<4|n}return i}};function rl(t){return t>=48&&t<=57?t-48:t>=65&&t<=70?t-65+10:t>=97&&t<=102?t-97+10:void 0}function dl(t){let a=0;for(let e=0,o=t.length;e<o;e++){const i=t.charCodeAt(e);if(i>=55296&&i<=56319&&e+1<o){const o=t.charCodeAt(e+1);if(o>=56320&&o<=57343){a+=4,e++;continue}}a+=i<=127?1:i<=2047?2:3}return a}let ul,_l;if("undefined"!=typeof TextDecoder){const t=new TextDecoder;ul=function(a){return t.decode(a)}}else ul=function(t){const a=t.byteLength;let e="",o=0;for(;o<a;){let i=t[o];if(i<=127){e+=String.fromCharCode(i),o++;continue}let n=0,l=0;if(i<=223?(n=1,l=31&i):i<=239?(n=2,l=15&i):i<=244&&(n=3,l=7&i),a-o-n>0){let a=0;for(;a<n;)i=t[o+a+1],l=l<<6|63&i,a+=1}else l=65533,n=a-o;e+=String.fromCodePoint(l),o+=n+1}return e};if("undefined"!=typeof TextEncoder){const t=new TextEncoder;_l=function(a,e,o=0,i=dl(e)){const n=Math.min(i,a.byteLength-o);return t.encodeInto(e,a.subarray(o,o+n)),n}}else _l=function(t,a,e=0,o=dl(a)){const i=Math.min(o,t.byteLength-e);t=t.subarray(e,e+i);let n=0,l=0;for(;n<a.length;){const e=a.codePointAt(n);if(e<=127){t[l++]=e,n++;continue}let o=0,i=0;for(e<=2047?(o=6,i=192):e<=65535?(o=12,i=224):e<=2097151&&(o=18,i=240),t[l++]=i|e>>o,o-=6;o>=0;)t[l++]=128|e>>o&63,o-=6;n+=e>=65536?2:1}return i};var gl={byteLength:dl,toString:ul,write:_l};function fl(t){return 2*t.length}var pl,hl,ml={byteLength:fl,toString:function(t){const a=t.byteLength;let e="";for(let o=0;o<a-1;o+=2)e+=String.fromCharCode(t[o]+256*t[o+1]);return e},write:function(t,a,e=0,o=fl(a)){const i=Math.min(o,t.byteLength-e);let n=i;for(let o=0;o<a.length&&!((n-=2)<0);++o){const i=a.charCodeAt(o),n=i>>8,l=i%256;t[e+2*o]=l,t[e+2*o+1]=n}return i}};!function(t,a){const e=el,o=ll,i=sl,n=gl,l=ml,c=255===new Uint8Array(Uint16Array.of(255).buffer)[0];function s(t){switch(t){case"ascii":return e;case"base64":return o;case"hex":return i;case"utf8":case"utf-8":case void 0:return n;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return l;default:throw new Error(`Unknown encoding: ${t}`)}}function r(t){return t instanceof Uint8Array}function d(t,a,e){return"string"==typeof t?function(t,a){const e=s(a),o=new Uint8Array(e.byteLength(t));return e.write(o,t,0,o.byteLength),o}(t,a):Array.isArray(t)?function(t){const a=new Uint8Array(t.length);return a.set(t),a}(t):ArrayBuffer.isView(t)?function(t){const a=new Uint8Array(t.byteLength);return a.set(t),a}(t):function(t,a,e){return new Uint8Array(t,a,e)}(t,a,e)}function u(t,a,e,o,i){if(0===t.byteLength)return-1;if("string"==typeof e?(o=e,e=0):void 0===e?e=i?0:t.length-1:e<0&&(e+=t.byteLength),e>=t.byteLength){if(i)return-1;e=t.byteLength-1}else if(e<0){if(!i)return-1;e=0}if("string"==typeof a)a=d(a,o);else if("number"==typeof a)return a&=255,i?t.indexOf(a,e):t.lastIndexOf(a,e);if(0===a.byteLength)return-1;if(i){let o=-1;for(let i=e;i<t.byteLength;i++)if(t[i]===a[-1===o?0:i-o]){if(-1===o&&(o=i),i-o+1===a.byteLength)return o}else-1!==o&&(i-=i-o),o=-1}else{e+a.byteLength>t.byteLength&&(e=t.byteLength-a.byteLength);for(let o=e;o>=0;o--){let e=!0;for(let i=0;i<a.byteLength;i++)if(t[o+i]!==a[i]){e=!1;break}if(e)return o}}return-1}function _(t,a,e,o){return u(t,a,e,o,!0)}function g(t,a,e){const o=t[a];t[a]=t[e],t[e]=o}t.exports=a={isBuffer:r,isEncoding:function(t){try{return s(t),!0}catch{return!1}},alloc:function(t,e,o){const i=new Uint8Array(t);return void 0!==e&&a.fill(i,e,0,i.byteLength,o),i},allocUnsafe:function(t){return new Uint8Array(t)},allocUnsafeSlow:function(t){return new Uint8Array(t)},byteLength:function(t,a){return s(a).byteLength(t)},compare:function(t,a){if(t===a)return 0;const e=Math.min(t.byteLength,a.byteLength);t=new DataView(t.buffer,t.byteOffset,t.byteLength),a=new DataView(a.buffer,a.byteOffset,a.byteLength);let o=0;for(let i=e-e%4;o<i;o+=4){if(t.getUint32(o,c)!==a.getUint32(o,c))break}for(;o<e;o++){const e=t.getUint8(o),i=a.getUint8(o);if(e<i)return-1;if(e>i)return 1}return t.byteLength>a.byteLength?1:t.byteLength<a.byteLength?-1:0},concat:function(t,a){void 0===a&&(a=t.reduce(((t,a)=>t+a.byteLength),0));const e=new Uint8Array(a);return t.reduce(((t,a)=>(e.set(a,t),t+a.byteLength)),0),e},copy:function(t,a,e=0,o=0,i=t.byteLength){if(i>0&&i<o)return 0;if(i===o)return 0;if(0===t.byteLength||0===a.byteLength)return 0;if(e<0)throw new RangeError("targetStart is out of range");if(o<0||o>=t.byteLength)throw new RangeError("sourceStart is out of range");if(i<0)throw new RangeError("sourceEnd is out of range");e>=a.byteLength&&(e=a.byteLength),i>t.byteLength&&(i=t.byteLength),a.byteLength-e<i-o&&(i=a.length-e+o);const n=i-o;return t===a?a.copyWithin(e,o,i):a.set(t.subarray(o,i),e),n},equals:function(t,a){if(t===a)return!0;if(t.byteLength!==a.byteLength)return!1;const e=t.byteLength;t=new DataView(t.buffer,t.byteOffset,t.byteLength),a=new DataView(a.buffer,a.byteOffset,a.byteLength);let o=0;for(let i=e-e%4;o<i;o+=4)if(t.getUint32(o,c)!==a.getUint32(o,c))return!1;for(;o<e;o++)if(t.getUint8(o)!==a.getUint8(o))return!1;return!0},fill:function(t,a,e,o,i){if("string"==typeof a?"string"==typeof e?(i=e,e=0,o=t.byteLength):"string"==typeof o&&(i=o,o=t.byteLength):"number"==typeof val?a&=255:"boolean"==typeof val&&(a=+a),e<0||t.byteLength<e||t.byteLength<o)throw new RangeError("Out of range index");if(void 0===e&&(e=0),void 0===o&&(o=t.byteLength),o<=e)return t;if(a||(a=0),"number"==typeof a)for(let i=e;i<o;++i)t[i]=a;else{const n=(a=r(a)?a:d(a,i)).byteLength;for(let i=0;i<o-e;++i)t[i+e]=a[i%n]}return t},from:d,includes:function(t,a,e,o){return-1!==_(t,a,e,o)},indexOf:_,lastIndexOf:function(t,a,e,o){return u(t,a,e,o,!1)},swap16:function(t){const a=t.byteLength;if(a%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let e=0;e<a;e+=2)g(t,e,e+1);return t},swap32:function(t){const a=t.byteLength;if(a%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let e=0;e<a;e+=4)g(t,e,e+3),g(t,e+1,e+2);return t},swap64:function(t){const a=t.byteLength;if(a%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let e=0;e<a;e+=8)g(t,e,e+7),g(t,e+1,e+6),g(t,e+2,e+5),g(t,e+3,e+4);return t},toBuffer:function(t){return t},toString:function(t,a,e=0,o=t.byteLength){const i=t.byteLength;return e>=i||o<=e?"":(e<0&&(e=0),o>i&&(o=i),(0!==e||o<i)&&(t=t.subarray(e,o)),s(a).toString(t))},write:function(t,a,e,o,i){return void 0===e?i="utf8":void 0===o&&"string"==typeof e?(i=e,e=void 0):void 0===i&&"string"==typeof o&&(i=o,o=void 0),s(i).write(t,a,e,o)},writeDoubleLE:function(t,a,e){return void 0===e&&(e=0),new DataView(t.buffer,t.byteOffset,t.byteLength).setFloat64(e,a,!0),e+8},writeFloatLE:function(t,a,e){return void 0===e&&(e=0),new DataView(t.buffer,t.byteOffset,t.byteLength).setFloat32(e,a,!0),e+4},writeUInt32LE:function(t,a,e){return void 0===e&&(e=0),new DataView(t.buffer,t.byteOffset,t.byteLength).setUint32(e,a,!0),e+4},writeInt32LE:function(t,a,e){return void 0===e&&(e=0),new DataView(t.buffer,t.byteOffset,t.byteLength).setInt32(e,a,!0),e+4},readDoubleLE:function(t,a){return void 0===a&&(a=0),new DataView(t.buffer,t.byteOffset,t.byteLength).getFloat64(a,!0)},readFloatLE:function(t,a){return void 0===a&&(a=0),new DataView(t.buffer,t.byteOffset,t.byteLength).getFloat32(a,!0)},readUInt32LE:function(t,a){return void 0===a&&(a=0),new DataView(t.buffer,t.byteOffset,t.byteLength).getUint32(a,!0)},readInt32LE:function(t,a){return void 0===a&&(a=0),new DataView(t.buffer,t.byteOffset,t.byteLength).getInt32(a,!0)}}}(tl,tl.exports);var Ll=Jn,bl=tl.exports,wl=null,yl="undefined"!=typeof WebAssembly&&function(){if(hl)return pl;hl=1;var t=(()=>{for(var t=new Uint8Array(128),a=0;a<64;a++)t[a<26?a+65:a<52?a+71:a<62?a-4:4*a-205]=a;return a=>{for(var e=a.length,o=new Uint8Array(3*(e-("="==a[e-1])-("="==a[e-2]))/4|0),i=0,n=0;i<e;){var l=t[a.charCodeAt(i++)],c=t[a.charCodeAt(i++)],s=t[a.charCodeAt(i++)],r=t[a.charCodeAt(i++)];o[n++]=l<<2|c>>4,o[n++]=c<<4|s>>2,o[n++]=s<<6|r}return o}})(),a=((t,a)=>function(){return a||(0,t[Object.keys(t)[0]])((a={exports:{}}).exports,a),a.exports})({"wasm-binary:./blake2b.wat"(a,e){e.exports=t("")}}),e=a(),o=WebAssembly.compile(e);return pl=async t=>(await WebAssembly.instantiate(await o,t)).exports}()().then((t=>{wl=t})),Al=64,Cl=[];Yn.exports=Sl;var xl=Yn.exports.BYTES_MIN=16,Fl=Yn.exports.BYTES_MAX=64;Yn.exports.BYTES=32;var Il=Yn.exports.KEYBYTES_MIN=16,Bl=Yn.exports.KEYBYTES_MAX=64;Yn.exports.KEYBYTES=32;var El=Yn.exports.SALTBYTES=16,vl=Yn.exports.PERSONALBYTES=16;function Sl(t,a,e,o,i){if(!(this instanceof Sl))return new Sl(t,a,e,o,i);if(!wl)throw new Error("WASM not loaded. Wait for Blake2b.ready(cb)");t||(t=32),!0!==i&&(Ll(t>=xl,"digestLength must be at least "+xl+", was given "+t),Ll(t<=Fl,"digestLength must be at most "+Fl+", was given "+t),null!=a&&(Ll(a instanceof Uint8Array,"key must be Uint8Array or Buffer"),Ll(a.length>=Il,"key must be at least "+Il+", was given "+a.length),Ll(a.length<=Bl,"key must be at least "+Bl+", was given "+a.length)),null!=e&&(Ll(e instanceof Uint8Array,"salt must be Uint8Array or Buffer"),Ll(e.length===El,"salt must be exactly "+El+", was given "+e.length)),null!=o&&(Ll(o instanceof Uint8Array,"personal must be Uint8Array or Buffer"),Ll(o.length===vl,"personal must be exactly "+vl+", was given "+o.length))),Cl.length||(Cl.push(Al),Al+=216),this.digestLength=t,this.finalized=!1,this.pointer=Cl.pop(),this._memory=new Uint8Array(wl.memory.buffer),this._memory.fill(0,0,64),this._memory[0]=this.digestLength,this._memory[1]=a?a.length:0,this._memory[2]=1,this._memory[3]=1,e&&this._memory.set(e,32),o&&this._memory.set(o,48),this.pointer+216>this._memory.length&&this._realloc(this.pointer+216),wl.blake2b_init(this.pointer,this.digestLength),a&&(this.update(a),this._memory.fill(0,Al,Al+a.length),this._memory[this.pointer+200]=128)}function Pl(){}function Ol(t){return(0!=(4294901760&t)?(t&=4294901760,16):0)|(0!=(4278255360&t)?(t&=4278255360,8):0)|(0!=(4042322160&t)?(t&=4042322160,4):0)|(0!=(3435973836&t)?(t&=3435973836,2):0)|0!=(2863311530&t)}function ql(t,a){const e=new DataView(t.buffer,t.byteOffset,t.byteLength);let o="";for(let t=0;t<4;t++){t>0&&(o+="\n"),o+="\t\t";for(let a=0;a<4;a++)a>0&&(o+=" "),o+=e.getUint32(16*t+4*a).toString(16).padStart(8,"0")}return a&&(o=a+"\n"+o),o}function Gl(t,a){if(t.byteLength!=a.byteLength)return!1;for(var e=new Int8Array(t),o=new Int8Array(a),i=0;i!=t.byteLength;i++)if(e[i]!=o[i])return!1;return!0}function zl(t){const a=t.getPartialHash(),e=Yn.exports(64);return e.setPartialHash(a),e}async function Tl(t,a,e,o,i){if(t.G1.isZero(a))return!1;if(t.G1.isZero(e))return!1;if(t.G2.isZero(o))return!1;if(t.G2.isZero(i))return!1;return await t.pairingEq(a,i,t.G1.neg(e),o)}function Ml(t){let a=new Uint8Array(t);return void 0!==globalThis.crypto?globalThis.crypto.getRandomValues(a):U.randomFillSync(a),a}async function Ul(t){if(void 0!==globalThis.crypto&&void 0!==globalThis.crypto.subtle){const a=await globalThis.crypto.subtle.digest("SHA-256",t.buffer);return new Uint8Array(a)}return U.createHash("sha256").update(t).digest()}function Ql(t,a){return new DataView(t.buffer).getUint32(a,!1)}async function kl(t){for(;!t;)t=await window.prompt("Enter a random text. (Entropy): ","");const a=Yn.exports(64);a.update(Ml(64));const e=new TextEncoder;a.update(e.encode(t));const o=a.digest(),i=[];for(let t=0;t<8;t++)i[t]=Ql(o,4*t);return new vo(i)}async function Rl(t,a){let e,o;a<32?(e=1<<a>>>0,o=1):(e=4294967296,o=1<<a-32>>>0);let i=t;for(let t=0;t<o;t++)for(let t=0;t<e;t++)i=await Ul(i);const n=new DataView(i.buffer,i.byteOffset,i.byteLength),l=[];for(let t=0;t<8;t++)l[t]=n.getUint32(4*t,!1);return new vo(l)}function Nl(t){return t instanceof Uint8Array?t:("0x"==t.slice(0,2)&&(t=t.slice(2)),new Uint8Array(t.match(/[\da-f]{2}/gi).map((function(t){return parseInt(t,16)}))))}function Dl(t){return Array.prototype.map.call(t,(function(t){return("0"+(255&t).toString(16)).slice(-2)})).join("")}function $l(t,a){if(a instanceof Uint8Array)return t.toString(a);if(Array.isArray(a))return a.map($l.bind(null,t));if("object"==typeof a){const e={};return Object.keys(a).forEach((o=>{e[o]=$l(t,a[o])})),e}return"bigint"==typeof a||void 0!==a.eq?a.toString(10):a}Sl.prototype._realloc=function(t){wl.memory.grow(Math.max(0,Math.ceil(Math.abs(t-this._memory.length)/65536))),this._memory=new Uint8Array(wl.memory.buffer)},Sl.prototype.update=function(t){return Ll(!1===this.finalized,"Hash instance finalized"),Ll(t instanceof Uint8Array,"input must be Uint8Array or Buffer"),Al+t.length>this._memory.length&&this._realloc(Al+t.length),this._memory.set(t,Al),wl.blake2b_update(this.pointer,Al,Al+t.length),this},Sl.prototype.digest=function(t){if(Ll(!1===this.finalized,"Hash instance finalized"),this.finalized=!0,Cl.push(this.pointer),wl.blake2b_final(this.pointer),!t||"binary"===t)return this._memory.slice(this.pointer+128,this.pointer+128+this.digestLength);if("string"==typeof t)return bl.toString(this._memory,t,this.pointer+128,this.pointer+128+this.digestLength);Ll(t instanceof Uint8Array&&t.length>=this.digestLength,"input must be Uint8Array or Buffer");for(var a=0;a<this.digestLength;a++)t[a]=this._memory[this.pointer+128+a];return t},Sl.prototype.final=Sl.prototype.digest,Sl.WASM=wl,Sl.SUPPORTED="undefined"!=typeof WebAssembly,Sl.ready=function(t){return t||(t=Pl),yl?yl.then((()=>t()),t):t(new Error("WebAssembly not supported"))},Sl.prototype.ready=Sl.ready,Sl.prototype.getPartialHash=function(){return this._memory.slice(this.pointer,this.pointer+216)},Sl.prototype.setPartialHash=function(t){this._memory.set(t,this.pointer)};const jl=1,Vl=1,Kl=2,Hl=10,Zl=3,Wl=17,Yl=2,Jl=3,Xl=4,tc=5,ac=6,ec=7,oc=8,ic=9,nc=10,lc=11,cc=12,sc=13,rc=14,dc=15,uc=16,_c=17;async function gc(t,a){await Me(t,1),await t.writeULE32(1),await Ue(t);const e=await Zn(a.q);await Me(t,2);const o=e.q,i=8*(Math.floor((Dn.bitLength(o)-1)/64)+1),n=e.r,l=8*(Math.floor((Dn.bitLength(n)-1)/64)+1);await t.writeULE32(i),await Re(t,o,i),await t.writeULE32(l),await Re(t,n,l),await t.writeULE32(a.nVars),await t.writeULE32(a.nPublic),await t.writeULE32(a.domainSize),await fc(t,e,a.vk_alpha_1),await fc(t,e,a.vk_beta_1),await pc(t,e,a.vk_beta_2),await pc(t,e,a.vk_gamma_2),await fc(t,e,a.vk_delta_1),await pc(t,e,a.vk_delta_2),await Ue(t)}async function fc(t,a,e){const o=new Uint8Array(2*a.G1.F.n8);a.G1.toRprLEM(o,0,e),await t.write(o)}async function pc(t,a,e){const o=new Uint8Array(2*a.G2.F.n8);a.G2.toRprLEM(o,0,e),await t.write(o)}async function hc(t,a,e){const o=await t.read(2*a.G1.F.n8),i=a.G1.fromRprLEM(o,0);return e?a.G1.toObject(i):i}async function mc(t,a,e){const o=await t.read(2*a.G2.F.n8),i=a.G2.fromRprLEM(o,0);return e?a.G2.toObject(i):i}async function Lc(t,a,e){await Qe(t,a,1);const o=await t.readULE32();if(await ke(t),o===Vl)return await async function(t,a,e){const o={protocol:"groth16"};await Qe(t,a,2);const i=await t.readULE32();o.n8q=i,o.q=await Ne(t,i);const n=await t.readULE32();return o.n8r=n,o.r=await Ne(t,n),o.curve=await Zn(o.q),o.nVars=await t.readULE32(),o.nPublic=await t.readULE32(),o.domainSize=await t.readULE32(),o.power=Ol(o.domainSize),o.vk_alpha_1=await hc(t,o.curve,e),o.vk_beta_1=await hc(t,o.curve,e),o.vk_beta_2=await mc(t,o.curve,e),o.vk_gamma_2=await mc(t,o.curve,e),o.vk_delta_1=await hc(t,o.curve,e),o.vk_delta_2=await mc(t,o.curve,e),await ke(t),o}(t,a,e);if(o===Kl)return await async function(t,a,e){const o={protocol:"plonk"};await Qe(t,a,2);const i=await t.readULE32();o.n8q=i,o.q=await Ne(t,i);const n=await t.readULE32();return o.n8r=n,o.r=await Ne(t,n),o.curve=await Zn(o.q),o.nVars=await t.readULE32(),o.nPublic=await t.readULE32(),o.domainSize=await t.readULE32(),o.power=Ol(o.domainSize),o.nAdditions=await t.readULE32(),o.nConstraints=await t.readULE32(),o.k1=await t.read(n),o.k2=await t.read(n),o.Qm=await hc(t,o.curve,e),o.Ql=await hc(t,o.curve,e),o.Qr=await hc(t,o.curve,e),o.Qo=await hc(t,o.curve,e),o.Qc=await hc(t,o.curve,e),o.S1=await hc(t,o.curve,e),o.S2=await hc(t,o.curve,e),o.S3=await hc(t,o.curve,e),o.X_2=await mc(t,o.curve,e),await ke(t),o}(t,a,e);if(o===Hl)return await async function(t,a,e){const o={protocol:"fflonk"};o.protocolId=Hl,await Qe(t,a,Yl);const i=await t.readULE32();o.n8q=i,o.q=await Ne(t,i),o.curve=await Zn(o.q);const n=await t.readULE32();return o.n8r=n,o.r=await Ne(t,n),o.nVars=await t.readULE32(),o.nPublic=await t.readULE32(),o.domainSize=await t.readULE32(),o.power=Ol(o.domainSize),o.nAdditions=await t.readULE32(),o.nConstraints=await t.readULE32(),o.k1=await t.read(n),o.k2=await t.read(n),o.w3=await t.read(n),o.w4=await t.read(n),o.w8=await t.read(n),o.wr=await t.read(n),o.X_2=await mc(t,o.curve,e),o.C0=await hc(t,o.curve,e),await ke(t),o}(t,a,e);throw new Error("Protocol not supported: ")}async function bc(t,a,e){const o={delta:{}};o.deltaAfter=await hc(t,a,e),o.delta.g1_s=await hc(t,a,e),o.delta.g1_sx=await hc(t,a,e),o.delta.g2_spx=await mc(t,a,e),o.transcript=await t.read(64),o.type=await t.readULE32();const i=await t.readULE32(),n=t.pos;let l=0;for(;t.pos-n<i;){const a=await t.read(1);if(a[0]<=l)throw new Error("Parameters in the contribution must be sorted");if(l=a[0],1==a[0]){const a=await t.read(1),e=await t.read(a[0]);o.name=(new TextDecoder).decode(e)}else if(2==a[0]){const a=await t.read(1);o.numIterationsExp=a[0]}else{if(3!=a[0])throw new Error("Parameter not recognized");{const a=await t.read(1);o.beaconHash=await t.read(a[0])}}}if(t.pos!=n+i)throw new Error("Parametes do not match");return o}async function wc(t,a,e){await Qe(t,e,10);const o={contributions:[]};o.csHash=await t.read(64);const i=await t.readULE32();for(let e=0;e<i;e++){const e=await bc(t,a);o.contributions.push(e)}return await ke(t),o}async function yc(t,a,e){await fc(t,a,e.deltaAfter),await fc(t,a,e.delta.g1_s),await fc(t,a,e.delta.g1_sx),await pc(t,a,e.delta.g2_spx),await t.write(e.transcript),await t.writeULE32(e.type||0);const o=[];if(e.name){o.push(1);const t=new TextEncoder("utf-8").encode(e.name.substring(0,64));o.push(t.byteLength);for(let a=0;a<t.byteLength;a++)o.push(t[a])}if(1==e.type){o.push(2),o.push(e.numIterationsExp),o.push(3),o.push(e.beaconHash.byteLength);for(let t=0;t<e.beaconHash.byteLength;t++)o.push(e.beaconHash[t])}if(o.length>0){const a=new Uint8Array(o);await t.writeULE32(a.byteLength),await t.write(a)}else await t.writeULE32(0)}async function Ac(t,a,e){await Me(t,10),await t.write(e.csHash),await t.writeULE32(e.contributions.length);for(let o=0;o<e.contributions.length;o++)await yc(t,a,e.contributions[o]);await Ue(t)}function Cc(t,a,e){const o=new Uint8Array(2*a.G1.F.n8);a.G1.toRprUncompressed(o,0,e),t.update(o)}function xc(t,a,e){Cc(t,a,e.deltaAfter),Cc(t,a,e.delta.g1_s),Cc(t,a,e.delta.g1_sx),function(t,a,e){const o=new Uint8Array(2*a.G2.F.n8);a.G2.toRprUncompressed(o,0,e),t.update(o)}(t,a,e.delta.g2_spx),t.update(e.transcript)}async function Fc(t,a){await Qe(t,a,1);const e=await t.readULE32(),o=await Ne(t,e),i=await t.readULE32();return await ke(t),{n8:e,q:o,nWitness:i}}const{stringifyBigInts:Ic}=$n;async function Bc(t,a,e){const{fd:o,sections:i}=await ze(a,"wtns",2),n=await Fc(o,i),{fd:l,sections:c}=await ze(t,"zkey",2),s=await Lc(l,c);if("groth16"!=s.protocol)throw new Error("zkey file is not groth16");if(!Dn.eq(s.r,n.q))throw new Error("Curve of the witness does not match the curve of the proving key");if(n.nWitness!=s.nVars)throw new Error(`Invalid witness length. Circuit: ${s.nVars}, witness: ${n.nWitness}`);const r=s.curve,d=r.Fr,u=r.G1,_=r.G2,g=Ol(s.domainSize);e&&e.debug("Reading Wtns");const f=await $e(o,i,2);e&&e.debug("Reading Coeffs");const p=await $e(l,c,4);e&&e.debug("Building ABC");const[h,m,L]=await async function(t,a,e,o,i){const n=t.Fr.n8,l=12+a.n8r,c=(o.byteLength-4)/l,s=new xn(a.domainSize*n),r=new xn(a.domainSize*n),d=new xn(a.domainSize*n),u=[s,r];for(let a=0;a<c;a++){i&&a%1e6==0&&i.debug(`QAP AB: ${a}/${c}`);const s=o.slice(4+a*l,4+a*l+l),r=new DataView(s.buffer),d=r.getUint32(0,!0),_=r.getUint32(4,!0),g=r.getUint32(8,!0),f=s.slice(12,12+n);u[d].set(t.Fr.add(u[d].slice(_*n,_*n+n),t.Fr.mul(f,e.slice(g*n,g*n+n))),_*n)}for(let e=0;e<a.domainSize;e++)i&&e%1e6==0&&i.debug(`QAP C: ${e}/${a.domainSize}`),d.set(t.Fr.mul(s.slice(e*n,e*n+n),r.slice(e*n,e*n+n)),e*n);return[s,r,d]}(r,s,f,p,e),b=g==d.s?r.Fr.shift:r.Fr.w[g+1],w=await d.ifft(h,"","",e,"IFFT_A"),y=await d.batchApplyKey(w,d.e(1),b),A=await d.fft(y,"","",e,"FFT_A"),C=await d.ifft(m,"","",e,"IFFT_B"),x=await d.batchApplyKey(C,d.e(1),b),F=await d.fft(x,"","",e,"FFT_B"),I=await d.ifft(L,"","",e,"IFFT_C"),B=await d.batchApplyKey(I,d.e(1),b),E=await d.fft(B,"","",e,"FFT_C");e&&e.debug("Join ABC");const v=await async function(t,a,e,o,i,n){const l=1<<22,c=t.Fr.n8,s=Math.floor(e.byteLength/t.Fr.n8),r=[];for(let a=0;a<s;a+=l){n&&n.debug(`JoinABC: ${a}/${s}`);const d=Math.min(s-a,l),u=[],_=e.slice(a*c,(a+d)*c),g=o.slice(a*c,(a+d)*c),f=i.slice(a*c,(a+d)*c);u.push({cmd:"ALLOCSET",var:0,buff:_}),u.push({cmd:"ALLOCSET",var:1,buff:g}),u.push({cmd:"ALLOCSET",var:2,buff:f}),u.push({cmd:"ALLOC",var:3,len:d*c}),u.push({cmd:"CALL",fnName:"qap_joinABC",params:[{var:0},{var:1},{var:2},{val:d},{var:3}]}),u.push({cmd:"CALL",fnName:"frm_batchFromMontgomery",params:[{var:3},{val:d},{var:3}]}),u.push({cmd:"GET",out:0,var:3,len:d*c}),r.push(t.tm.queueAction(u))}const d=await Promise.all(r);let u;u=e instanceof xn?new xn(e.byteLength):new Uint8Array(e.byteLength);let _=0;for(let t=0;t<d.length;t++)u.set(d[t][0],_),_+=d[t][0].byteLength;return u}(r,0,A,F,E,e);let S={};e&&e.debug("Reading A Points");const P=await $e(l,c,5);S.pi_a=await r.G1.multiExpAffine(P,f,e,"multiexp A"),e&&e.debug("Reading B1 Points");const O=await $e(l,c,6);let q=await r.G1.multiExpAffine(O,f,e,"multiexp B1");e&&e.debug("Reading B2 Points");const G=await $e(l,c,7);S.pi_b=await r.G2.multiExpAffine(G,f,e,"multiexp B2"),e&&e.debug("Reading C Points");const z=await $e(l,c,8);S.pi_c=await r.G1.multiExpAffine(z,f.slice((s.nPublic+1)*r.Fr.n8),e,"multiexp C"),e&&e.debug("Reading H Points");const T=await $e(l,c,9),M=await r.G1.multiExpAffine(T,v,e,"multiexp H"),U=r.Fr.random(),Q=r.Fr.random();S.pi_a=u.add(S.pi_a,s.vk_alpha_1),S.pi_a=u.add(S.pi_a,u.timesFr(s.vk_delta_1,U)),S.pi_b=_.add(S.pi_b,s.vk_beta_2),S.pi_b=_.add(S.pi_b,_.timesFr(s.vk_delta_2,Q)),q=u.add(q,s.vk_beta_1),q=u.add(q,u.timesFr(s.vk_delta_1,Q)),S.pi_c=u.add(S.pi_c,M),S.pi_c=u.add(S.pi_c,u.timesFr(S.pi_a,Q)),S.pi_c=u.add(S.pi_c,u.timesFr(q,U)),S.pi_c=u.add(S.pi_c,u.timesFr(s.vk_delta_1,d.neg(d.mul(U,Q))));let k=[];for(let t=1;t<=s.nPublic;t++){const a=f.slice(t*d.n8,t*d.n8+d.n8);k.push(Dn.fromRprLE(a))}return S.pi_a=u.toObject(u.toAffine(S.pi_a)),S.pi_b=_.toObject(_.toAffine(S.pi_b)),S.pi_c=u.toObject(u.toAffine(S.pi_c)),S.protocol="groth16",S.curve=r.name,await l.close(),await o.close(),S=Ic(S),k=Ic(k),{proof:S,publicSignals:k}}function Ec(t){var a=[];return function t(a,e){if(Array.isArray(e))for(let o=0;o<e.length;o++)t(a,e[o]);else a.push(e)}(a,t),a}function vc(t){const a=BigInt(2)**BigInt(64);let e=BigInt("0xCBF29CE484222325");for(var o=0;o<t.length;o++)e^=BigInt(t[o].charCodeAt()),e*=BigInt(1099511628211),e%=a;let i=e.toString(16),n=16-i.length;return i="0".repeat(n).concat(i),i}function Sc(t,a){const e=[];let o=BigInt(t);const i=BigInt(4294967296);for(;o;)e.unshift(Number(o%i)),o/=i;if(a)for(var n=a-e.length;n>0;)e.unshift(0),n--;return e}async function Pc(t,a){a=a||{};let e,o=32767,i=!1;for(;!i;)try{e=new WebAssembly.Memory({initial:o}),i=!0}catch(t){if(1===o)throw t;console.warn("Could not allocate "+1024*o*64+" bytes. This may cause severe instability. Trying with "+1024*o*64/2+" bytes"),o=Math.floor(o/2)}const n=await WebAssembly.compile(t);let l,c="",s="",r=1,d=0,u=0;const _=await WebAssembly.instantiate(n,{env:{memory:e},runtime:{exceptionHandler:function(t){let a;throw a=1==t?"Signal not found. ":2==t?"Too many signals set. ":3==t?"Signal already set. ":4==t?"Assert Failed. ":5==t?"Not enough memory. ":6==t?"Input signal array access exceeds the size. ":"Unknown error. ",console.error("ERROR: ",t,c),new Error(a+c)},printErrorMessage:function(){c+=f()+"\n"},writeBufferMessage:function(){const t=f();"\n"===t?(console.log(s),s=""):(""!==s&&(s+=" "),s+=t)},showSharedRWMemory:function(){const t=_.exports.getFieldNumLen32(),a=new Uint32Array(t);for(let e=0;e<t;e++)a[t-1-e]=_.exports.readSharedRWMemory(e);if(r>=2&&(d>=1||u>=7)){""!==s&&(s+=" ");const t=_e.fromArray(a,4294967296).toString();s+=t}else console.log(_e.fromArray(a,4294967296))},error:function(t,e,o,i,n,c){let s;throw s=7==t?p(e)+" "+l.getFr(i).toString()+" != "+l.getFr(n).toString()+" "+p(c):9==t?p(e)+" "+l.getFr(i).toString()+" "+p(n):5==t&&a.sym?p(e)+" "+a.sym.labelIdx2Name[n]:p(e)+" "+o+" "+i+" "+n+" "+c,console.log("ERROR: ",t,s),new Error(s)},log:function(t){console.log(l.getFr(t).toString())},logGetSignal:function(t,e){a.logGetSignal&&a.logGetSignal(t,l.getFr(e))},logSetSignal:function(t,e){a.logSetSignal&&a.logSetSignal(t,l.getFr(e))},logStartComponent:function(t){a.logStartComponent&&a.logStartComponent(t)},logFinishComponent:function(t){a.logFinishComponent&&a.logFinishComponent(t)}}});"function"==typeof _.exports.getVersion&&(r=_.exports.getVersion()),"function"==typeof _.exports.getMinorVersion&&(d=_.exports.getMinorVersion()),"function"==typeof _.exports.getPatchVersion&&(u=_.exports.getPatchVersion());const g=a&&(a.sanityCheck||a.logGetSignal||a.logSetSignal||a.logStartComponent||a.logFinishComponent);return l=2===r?new qc(_,g):new Oc(e,_,g),l;function f(){for(var t="",a=_.exports.getMessageChar();0!=a;)t+=String.fromCharCode(a),a=_.exports.getMessageChar();return t}function p(t){const a=new Uint8Array(e.buffer),o=[];for(let e=0;a[t+e]>0;e++)o.push(a[t+e]);return String.fromCharCode.apply(null,o)}}class Oc{constructor(t,a,e){this.memory=t,this.i32=new Uint32Array(t.buffer),this.instance=a,this.n32=(this.instance.exports.getFrLen()>>2)-2;const o=this.instance.exports.getPRawPrime(),i=new Array(this.n32);for(let t=0;t<this.n32;t++)i[this.n32-1-t]=this.i32[(o>>2)+t];this.prime=_e.fromArray(i,4294967296),this.Fr=new j(this.prime),this.mask32=_e.fromString("FFFFFFFF",16),this.NVars=this.instance.exports.getNVars(),this.n64=Math.floor((this.Fr.bitLength-1)/64)+1,this.R=this.Fr.e(_e.shiftLeft(1,64*this.n64)),this.RInv=this.Fr.inv(this.R),this.sanityCheck=e}circom_version(){return 1}async _doCalculateWitness(t,a){this.instance.exports.init(this.sanityCheck||a?1:0);const e=this.allocInt(),o=this.allocFr();Object.keys(t).forEach((a=>{const i=vc(a),n=parseInt(i.slice(0,8),16),l=parseInt(i.slice(8,16),16);try{this.instance.exports.getSignalOffset32(e,0,n,l)}catch(t){throw new Error(`Signal ${a} is not an input of the circuit.`)}const c=this.getInt(e),s=Ec(t[a]);for(let t=0;t<s.length;t++)this.setFr(o,s[t]),this.instance.exports.setSignal(0,0,c+t,o)}))}async calculateWitness(t,a){const e=this,o=e.i32[0],i=[];await e._doCalculateWitness(t,a);for(let t=0;t<e.NVars;t++){const a=e.instance.exports.getPWitness(t);i.push(e.getFr(a))}return e.i32[0]=o,i}async calculateBinWitness(t,a){const e=this,o=e.i32[0];await e._doCalculateWitness(t,a);const i=e.instance.exports.getWitnessBuffer();e.i32[0]=o;const n=e.memory.buffer.slice(i,i+e.NVars*e.n64*8);return new Uint8Array(n)}allocInt(){const t=this.i32[0];return this.i32[0]=t+8,t}allocFr(){const t=this.i32[0];return this.i32[0]=t+4*this.n32+8,t}getInt(t){return this.i32[t>>2]}setInt(t,a){this.i32[t>>2]=a}getFr(t){const a=this,e=t>>2;if(2147483648&a.i32[e+1]){const t=new Array(a.n32);for(let o=0;o<a.n32;o++)t[a.n32-1-o]=a.i32[e+2+o];const i=a.Fr.e(_e.fromArray(t,4294967296));return 1073741824&a.i32[e+1]?(o=i,a.Fr.mul(a.RInv,o)):i}return 2147483648&a.i32[e]?a.Fr.e(a.i32[e]-4294967296):a.Fr.e(a.i32[e]);var o}setFr(t,a){const e=this;a=e.Fr.e(a);const o=e.Fr.neg(e.Fr.e("80000000",16)),i=e.Fr.e("7FFFFFFF",16);if(e.Fr.geq(a,o)&&e.Fr.leq(a,i)){let i;return e.Fr.geq(a,e.Fr.zero)?i=_e.toNumber(a):(i=_e.toNumber(e.Fr.sub(a,o)),i-=2147483648,i=4294967296+i),e.i32[t>>2]=i,void(e.i32[1+(t>>2)]=0)}e.i32[t>>2]=0,e.i32[1+(t>>2)]=2147483648;const n=_e.toArray(a,4294967296);for(let a=0;a<e.n32;a++){const o=n.length-1-a;e.i32[2+(t>>2)+a]=o>=0?n[o]:0}}}class qc{constructor(t,a){this.instance=t,this.version=this.instance.exports.getVersion(),this.n32=this.instance.exports.getFieldNumLen32(),this.instance.exports.getRawPrime();const e=new Array(this.n32);for(let t=0;t<this.n32;t++)e[this.n32-1-t]=this.instance.exports.readSharedRWMemory(t);this.prime=_e.fromArray(e,4294967296),this.witnessSize=this.instance.exports.getWitnessSize(),this.sanityCheck=a}circom_version(){return this.instance.exports.getVersion()}async _doCalculateWitness(t,a){this.instance.exports.init(this.sanityCheck||a?1:0);const e=Object.keys(t);var o=0;if(e.forEach((a=>{const e=vc(a),i=parseInt(e.slice(0,8),16),n=parseInt(e.slice(8,16),16),l=Ec(t[a]);for(let t=0;t<l.length;t++){const a=Sc(l[t],this.n32);for(let t=0;t<this.n32;t++)this.instance.exports.writeSharedRWMemory(t,a[this.n32-1-t]);try{this.instance.exports.setInputSignal(i,n,t),o++}catch(t){throw new Error(t)}}})),o<this.instance.exports.getInputSize())throw new Error(`Not all inputs have been set. Only ${o} out of ${this.instance.exports.getInputSize()}`)}async calculateWitness(t,a){const e=[];await this._doCalculateWitness(t,a);for(let t=0;t<this.witnessSize;t++){this.instance.exports.getWitness(t);const a=new Uint32Array(this.n32);for(let t=0;t<this.n32;t++)a[this.n32-1-t]=this.instance.exports.readSharedRWMemory(t);e.push(_e.fromArray(a,4294967296))}return e}async calculateWTNSBin(t,a){const e=new Uint32Array(this.witnessSize*this.n32+this.n32+11),o=new Uint8Array(e.buffer);await this._doCalculateWitness(t,a),o[0]="w".charCodeAt(0),o[1]="t".charCodeAt(0),o[2]="n".charCodeAt(0),o[3]="s".charCodeAt(0),e[1]=2,e[2]=2,e[3]=1;const i=4*this.n32,n=(8+i).toString(16);e[4]=parseInt(n.slice(0,8),16),e[5]=parseInt(n.slice(8,16),16),e[6]=i,this.instance.exports.getRawPrime();var l=7;for(let t=0;t<this.n32;t++)e[l+t]=this.instance.exports.readSharedRWMemory(t);e[l+=this.n32]=this.witnessSize,e[++l]=2,l++;const c=(i*this.witnessSize).toString(16);e[l]=parseInt(c.slice(0,8),16),e[l+1]=parseInt(c.slice(8,16),16),l+=2;for(let t=0;t<this.witnessSize;t++){this.instance.exports.getWitness(t);for(let t=0;t<this.n32;t++)e[l+t]=this.instance.exports.readSharedRWMemory(t);l+=this.n32}return o}}const{unstringifyBigInts:Gc}=$n;async function zc(t,a,e,o){const i=Gc(t),n=await Ge(a),l=await n.read(n.totalSize);await n.close();const c=await Pc(l);if(1==c.circom_version()){const t=await c.calculateBinWitness(i),a=await Te(e,"wtns",2,2);await async function(t,a,e){await Me(t,1);const o=8*(Math.floor((Dn.bitLength(e)-1)/64)+1);if(await t.writeULE32(o),await Re(t,e,o),a.byteLength%o!=0)throw new Error("Invalid witness length");await t.writeULE32(a.byteLength/o),await Ue(t),await Me(t,2),await t.write(a),await Ue(t)}(a,t,c.prime),await a.close()}else{const t=await qe(e),a=await c.calculateWTNSBin(i);await t.write(a),await t.close()}}const{unstringifyBigInts:Tc}=$n;const{unstringifyBigInts:Mc}=$n;const{unstringifyBigInts:Uc}=$n;function Qc(t){let a=t.toString(16);for(;a.length<64;)a="0"+a;return a=`"0x${a}"`,a}var kc=Object.freeze({__proto__:null,fullProve:async function(t,a,e,o){const i=Tc(t),n={type:"mem"};return await zc(i,a,n),await Bc(e,n,o)},prove:Bc,verify:async function(t,a,e,o){const i=Mc(t),n=Mc(e),l=Mc(a),c=await Wn(i.curve),s=c.G1.fromObject(i.IC[0]),r=new Uint8Array(2*c.G1.F.n8*l.length),d=new Uint8Array(c.Fr.n8*l.length);if(!function(t,a){for(let e=0;e<a.length;e++)if(!Dn.lt(a[e],t.r))return!1;return!0}(c,l))return o&&o.error("Public inputs are not valid."),!1;for(let t=0;t<l.length;t++){const a=c.G1.fromObject(i.IC[t+1]);r.set(a,t*c.G1.F.n8*2),Dn.toRprLE(d,c.Fr.n8*t,l[t],c.Fr.n8)}let u=await c.G1.multiExpAffine(r,d);u=c.G1.add(u,s);const _=c.G1.fromObject(n.pi_a),g=c.G2.fromObject(n.pi_b),f=c.G1.fromObject(n.pi_c);if(!function(t,a){const e=t.G1,o=t.G2;return e.isValid(a.pi_a)&&o.isValid(a.pi_b)&&e.isValid(a.pi_c)}(c,{pi_a:_,pi_b:g,pi_c:f}))return o&&o.error("Proof commitments are not valid."),!1;const p=c.G2.fromObject(i.vk_gamma_2),h=c.G2.fromObject(i.vk_delta_2),m=c.G1.fromObject(i.vk_alpha_1),L=c.G2.fromObject(i.vk_beta_2);return await c.pairingEq(c.G1.neg(_),g,u,p,f,h,m,L)?(o&&o.info("OK!"),!0):(o&&o.error("Invalid proof"),!1)},exportSolidityCallData:async function(t,a){const e=Uc(t),o=Uc(a);let i,n="";for(let t=0;t<o.length;t++)""!=n&&(n+=","),n+=Qc(o[t]);return i=`[${Qc(e.pi_a[0])}, ${Qc(e.pi_a[1])}],[[${Qc(e.pi_b[0][1])}, ${Qc(e.pi_b[0][0])}],[${Qc(e.pi_b[1][1])}, ${Qc(e.pi_b[1][0])}]],[${Qc(e.pi_c[0])}, ${Qc(e.pi_c[1])}],[${n}]`,i}});function Rc(t,a){const e=new DataView(a.buffer,a.byteOffset,a.byteLength),o=[];for(let t=0;t<8;t++)o[t]=e.getUint32(4*t);const i=new vo(o);return t.G2.fromRng(i)}function Nc(t,a,e,o,i){const n=Yn.exports(64),l=new Uint8Array([a]);n.update(l),n.update(e);const c=t.G1.toUncompressed(o);n.update(c);const s=t.G1.toUncompressed(i);n.update(s);return Rc(t,n.digest())}function Dc(t,a,e,o,i){return t.g1_s=a.G1.toAffine(a.G1.fromRng(i)),t.g1_sx=a.G1.toAffine(a.G1.timesFr(t.g1_s,t.prvKey)),t.g2_sp=a.G2.toAffine(Nc(a,e,o,t.g1_s,t.g1_sx)),t.g2_spx=a.G2.toAffine(a.G2.timesFr(t.g2_sp,t.prvKey)),t}function $c(t,a,e){const o={tau:{},alpha:{},beta:{}};return o.tau.prvKey=t.Fr.fromRng(e),o.alpha.prvKey=t.Fr.fromRng(e),o.beta.prvKey=t.Fr.fromRng(e),Dc(o.tau,t,0,a,e),Dc(o.alpha,t,1,a,e),Dc(o.beta,t,2,a,e),o}async function jc(t,a,e,o){o||(o=e),await t.writeULE32(1);const i=t.pos;await t.writeULE64(0),await t.writeULE32(8*a.F1.n64);const n=new Uint8Array(a.F1.n8);Dn.toRprLE(n,0,a.q,a.F1.n8),await t.write(n),await t.writeULE32(e),await t.writeULE32(o);const l=t.pos-i-8,c=t.pos;await t.writeULE64(l,i),t.pos=c}async function Vc(t,a){if(!a[1])throw new Error(t.fileName+": File has no  header");if(a[1].length>1)throw new Error(t.fileName+": File has more than one header");t.pos=a[1][0].p;const e=await t.readULE32(),o=await t.read(e),i=Dn.fromRprLE(o),n=await Zn(i);if(8*n.F1.n64!=e)throw new Error(t.fileName+": Invalid size");const l=await t.readULE32(),c=await t.readULE32();if(t.pos-a[1][0].p!=a[1][0].size)throw new Error("Invalid PTau header size");return{curve:n,power:l,ceremonyPower:c}}function Kc(t,a,e,o){const i={tau:{},alpha:{},beta:{}};return i.tau.g1_s=n(),i.tau.g1_sx=n(),i.alpha.g1_s=n(),i.alpha.g1_sx=n(),i.beta.g1_s=n(),i.beta.g1_sx=n(),i.tau.g2_spx=l(),i.alpha.g2_spx=l(),i.beta.g2_spx=l(),i;function n(){let i;return i=o?e.G1.fromRprLEM(t,a):e.G1.fromRprUncompressed(t,a),a+=2*e.G1.F.n8,i}function l(){let i;return i=o?e.G2.fromRprLEM(t,a):e.G2.fromRprUncompressed(t,a),a+=2*e.G2.F.n8,i}}function Hc(t,a,e,o,i){async function n(o){i?e.G1.toRprLEM(t,a,o):e.G1.toRprUncompressed(t,a,o),a+=2*e.F1.n8}async function l(o){i?e.G2.toRprLEM(t,a,o):e.G2.toRprUncompressed(t,a,o),a+=2*e.F2.n8}return n(o.tau.g1_s),n(o.tau.g1_sx),n(o.alpha.g1_s),n(o.alpha.g1_sx),n(o.beta.g1_s),n(o.beta.g1_sx),l(o.tau.g2_spx),l(o.alpha.g2_spx),l(o.beta.g2_spx),t}async function Zc(t,a){const e={};e.tauG1=await s(),e.tauG2=await r(),e.alphaG1=await s(),e.betaG1=await s(),e.betaG2=await r(),e.key=await async function(t,a,e){return Kc(await t.read(2*a.F1.n8*6+2*a.F2.n8*3),0,a,e)}(t,a,!0),e.partialHash=await t.read(216),e.nextChallenge=await t.read(64),e.type=await t.readULE32();const o=new Uint8Array(2*a.G1.F.n8*6+2*a.G2.F.n8*3);Hc(o,0,a,e.key,!1);const i=Yn.exports(64);i.setPartialHash(e.partialHash),i.update(o),e.responseHash=i.digest();const n=await t.readULE32(),l=t.pos;let c=0;for(;t.pos-l<n;){const t=await d(1);if(t[0]<=c)throw new Error("Parameters in the contribution must be sorted");if(c=t[0],1==t[0]){const t=await d(1),a=await d(t[0]);e.name=(new TextDecoder).decode(a)}else if(2==t[0]){const t=await d(1);e.numIterationsExp=t[0]}else{if(3!=t[0])throw new Error("Parameter not recognized");{const t=await d(1);e.beaconHash=await d(t[0])}}}if(t.pos!=l+n)throw new Error("Parametes do not match");return e;async function s(){const e=await t.read(2*a.G1.F.n8);return a.G1.fromRprLEM(e)}async function r(){const e=await t.read(2*a.G2.F.n8);return a.G2.fromRprLEM(e)}async function d(a){const e=await t.read(a);return new Uint8Array(e)}}async function Wc(t,a,e){if(!e[7])throw new Error(t.fileName+": File has no  contributions");if(e[7][0].length>1)throw new Error(t.fileName+": File has more than one contributions section");t.pos=e[7][0].p;const o=await t.readULE32(),i=[];for(let e=0;e<o;e++){const o=await Zc(t,a);o.id=e+1,i.push(o)}if(t.pos-e[7][0].p!=e[7][0].size)throw new Error("Invalid contribution section size");return i}async function Yc(t,a,e){const o=new Uint8Array(2*a.F1.n8),i=new Uint8Array(2*a.F2.n8);await l(e.tauG1),await c(e.tauG2),await l(e.alphaG1),await l(e.betaG1),await c(e.betaG2),await async function(t,a,e,o){const i=new Uint8Array(2*a.F1.n8*6+2*a.F2.n8*3);Hc(i,0,a,e,o),await t.write(i)}(t,a,e.key,!0),await t.write(e.partialHash),await t.write(e.nextChallenge),await t.writeULE32(e.type||0);const n=[];if(e.name){n.push(1);const t=new TextEncoder("utf-8").encode(e.name.substring(0,64));n.push(t.byteLength);for(let a=0;a<t.byteLength;a++)n.push(t[a])}if(1==e.type){n.push(2),n.push(e.numIterationsExp),n.push(3),n.push(e.beaconHash.byteLength);for(let t=0;t<e.beaconHash.byteLength;t++)n.push(e.beaconHash[t])}if(n.length>0){const a=new Uint8Array(n);await t.writeULE32(a.byteLength),await t.write(a)}else await t.writeULE32(0);async function l(e){a.G1.toRprLEM(o,0,e),await t.write(o)}async function c(e){a.G2.toRprLEM(i,0,e),await t.write(i)}}async function Jc(t,a,e){await t.writeULE32(7);const o=t.pos;await t.writeULE64(0),await t.writeULE32(e.length);for(let o=0;o<e.length;o++)await Yc(t,a,e[o]);const i=t.pos-o-8,n=t.pos;await t.writeULE64(i,o),t.pos=n}function Xc(t,a,e){e&&e.debug("Calculating First Challenge Hash");const o=new Yn.exports(64),i=new Uint8Array(2*t.G1.F.n8),n=new Uint8Array(2*t.G2.F.n8);let l;return t.G1.toRprUncompressed(i,0,t.G1.g),t.G2.toRprUncompressed(n,0,t.G2.g),o.update(Yn.exports(64).digest()),l=2**a*2-1,e&&e.debug("Calculate Initial Hash: tauG1"),c(i,l),l=2**a,e&&e.debug("Calculate Initial Hash: tauG2"),c(n,l),e&&e.debug("Calculate Initial Hash: alphaTauG1"),c(i,l),e&&e.debug("Calculate Initial Hash: betaTauG1"),c(i,l),o.update(n),o.digest();function c(t,a){const i=341e3,n=Math.floor(a/i),l=a%i,c=new Uint8Array(i*t.byteLength);for(let a=0;a<i;a++)c.set(t,a*t.byteLength);for(let t=0;t<n;t++)o.update(c),e&&e.debug("Initial hash: "+t*i);for(let a=0;a<l;a++)o.update(t)}}async function ts(t,a,e,o){return $c(t,a,await Rl(e,o))}const as=Tl;async function es(t,a,e,o){let i;if(1==a.type){const i=await ts(t,e.nextChallenge,a.beaconHash,a.numIterationsExp);if(!t.G1.eq(a.key.tau.g1_s,i.tau.g1_s))return o&&o.error(`BEACON key (tauG1_s) is not generated correctly in challenge #${a.id}  ${a.name||""}`),!1;if(!t.G1.eq(a.key.tau.g1_sx,i.tau.g1_sx))return o&&o.error(`BEACON key (tauG1_sx) is not generated correctly in challenge #${a.id}  ${a.name||""}`),!1;if(!t.G2.eq(a.key.tau.g2_spx,i.tau.g2_spx))return o&&o.error(`BEACON key (tauG2_spx) is not generated correctly in challenge #${a.id}  ${a.name||""}`),!1;if(!t.G1.eq(a.key.alpha.g1_s,i.alpha.g1_s))return o&&o.error(`BEACON key (alphaG1_s) is not generated correctly in challenge #${a.id}  ${a.name||""}`),!1;if(!t.G1.eq(a.key.alpha.g1_sx,i.alpha.g1_sx))return o&&o.error(`BEACON key (alphaG1_sx) is not generated correctly in challenge #${a.id}  ${a.name||""}`),!1;if(!t.G2.eq(a.key.alpha.g2_spx,i.alpha.g2_spx))return o&&o.error(`BEACON key (alphaG2_spx) is not generated correctly in challenge #${a.id}  ${a.name||""}`),!1;if(!t.G1.eq(a.key.beta.g1_s,i.beta.g1_s))return o&&o.error(`BEACON key (betaG1_s) is not generated correctly in challenge #${a.id}  ${a.name||""}`),!1;if(!t.G1.eq(a.key.beta.g1_sx,i.beta.g1_sx))return o&&o.error(`BEACON key (betaG1_sx) is not generated correctly in challenge #${a.id}  ${a.name||""}`),!1;if(!t.G2.eq(a.key.beta.g2_spx,i.beta.g2_spx))return o&&o.error(`BEACON key (betaG2_spx) is not generated correctly in challenge #${a.id}  ${a.name||""}`),!1}return a.key.tau.g2_sp=t.G2.toAffine(Nc(t,0,e.nextChallenge,a.key.tau.g1_s,a.key.tau.g1_sx)),a.key.alpha.g2_sp=t.G2.toAffine(Nc(t,1,e.nextChallenge,a.key.alpha.g1_s,a.key.alpha.g1_sx)),a.key.beta.g2_sp=t.G2.toAffine(Nc(t,2,e.nextChallenge,a.key.beta.g1_s,a.key.beta.g1_sx)),i=await as(t,a.key.tau.g1_s,a.key.tau.g1_sx,a.key.tau.g2_sp,a.key.tau.g2_spx),!0!==i?(o&&o.error("INVALID key (tau) in challenge #"+a.id),!1):(i=await as(t,a.key.alpha.g1_s,a.key.alpha.g1_sx,a.key.alpha.g2_sp,a.key.alpha.g2_spx),!0!==i?(o&&o.error("INVALID key (alpha) in challenge #"+a.id),!1):(i=await as(t,a.key.beta.g1_s,a.key.beta.g1_sx,a.key.beta.g2_sp,a.key.beta.g2_spx),!0!==i?(o&&o.error("INVALID key (beta) in challenge #"+a.id),!1):(i=await as(t,e.tauG1,a.tauG1,a.key.tau.g2_sp,a.key.tau.g2_spx),!0!==i?(o&&o.error("INVALID tau*G1. challenge #"+a.id+" It does not follow the previous contribution"),!1):(i=await as(t,a.key.tau.g1_s,a.key.tau.g1_sx,e.tauG2,a.tauG2),!0!==i?(o&&o.error("INVALID tau*G2. challenge #"+a.id+" It does not follow the previous contribution"),!1):(i=await as(t,e.alphaG1,a.alphaG1,a.key.alpha.g2_sp,a.key.alpha.g2_spx),!0!==i?(o&&o.error("INVALID alpha*G1. challenge #"+a.id+" It does not follow the previous contribution"),!1):(i=await as(t,e.betaG1,a.betaG1,a.key.beta.g2_sp,a.key.beta.g2_spx),!0!==i?(o&&o.error("INVALID beta*G1. challenge #"+a.id+" It does not follow the previous contribution"),!1):(i=await as(t,a.key.beta.g1_s,a.key.beta.g1_sx,e.betaG2,a.betaG2),!0!==i?(o&&o.error("INVALID beta*G2. challenge #"+a.id+"It does not follow the previous contribution"),!1):(o&&o.info("Powers Of tau file OK!"),!0))))))))}async function os(t,a,e,o,i,n,l,c,s,r){const d=i[n],u=2*d.F.n8,_=a[o][0].size/u;await Qe(t,a,o),await Me(e,o);let g=l;for(let a=0;a<_;a+=65536){r&&r.debug(`Applying key: ${s}: ${a}/${_}`);const o=Math.min(_-a,65536);let n;n=await t.read(o*u),n=await d.batchApplyKey(n,g,c),await e.write(n),g=i.Fr.mul(g,i.Fr.exp(c,o))}await Ue(e),await ke(t)}async function is(t,a,e,o,i,n,l,c,s,r,d){const u=o[i],_=2*u.F.n8,g=Math.floor((1<<20)/_);let f=l;for(let i=0;i<n;i+=g){d&&d.debug(`Applying key ${r}: ${i}/${n}`);const l=Math.min(n-i,g),p=await t.read(l*_),h=await u.batchUtoLEM(p),m=await u.batchApplyKey(h,f,c);let L;L="COMPRESSED"==s?await u.batchLEMtoC(m):await u.batchLEMtoU(m),e&&e.update(L),await a.write(L),f=o.Fr.mul(f,o.Fr.exp(c,l))}}var ns=Object.freeze({__proto__:null,newAccumulator:async function(t,a,e,o){await Yn.exports.ready();const i=await Te(e,"ptau",1,7);await jc(i,t,a,0);const n=t.G1.oneAffine,l=t.G2.oneAffine;await Me(i,2);const c=2**a*2-1;for(let t=0;t<c;t++)await i.write(n),o&&t%1e5==0&&t&&o.log("tauG1: "+t);await Ue(i),await Me(i,3);const s=2**a;for(let t=0;t<s;t++)await i.write(l),o&&t%1e5==0&&t&&o.log("tauG2: "+t);await Ue(i),await Me(i,4);const r=2**a;for(let t=0;t<r;t++)await i.write(n),o&&t%1e5==0&&t&&o.log("alphaTauG1: "+t);await Ue(i),await Me(i,5);const d=2**a;for(let t=0;t<d;t++)await i.write(n),o&&t%1e5==0&&t&&o.log("betaTauG1: "+t);await Ue(i),await Me(i,6),await i.write(l),await Ue(i),await Me(i,7),await i.writeULE32(0),await Ue(i),await i.close();const u=Xc(t,a,o);return o&&o.debug(ql(Yn.exports(64).digest(),"Blank Contribution Hash:")),o&&o.info(ql(u,"First Contribution Hash:")),u},exportChallenge:async function(t,a,e){await Yn.exports.ready();const{fd:o,sections:i}=await ze(t,"ptau",1),{curve:n,power:l}=await Vc(o,i),c=await Wc(o,n,i);let s,r;0==c.length?(s=Yn.exports(64).digest(),r=Xc(n,l)):(s=c[c.length-1].responseHash,r=c[c.length-1].nextChallenge),e&&e.info(ql(s,"Last Response Hash: ")),e&&e.info(ql(r,"New Challenge Hash: "));const d=await qe(a),u=Yn.exports(64);await d.write(s),u.update(s),await g(2,"G1",2**l*2-1,"tauG1"),await g(3,"G2",2**l,"tauG2"),await g(4,"G1",2**l,"alphaTauG1"),await g(5,"G1",2**l,"betaTauG1"),await g(6,"G2",1,"betaG2"),await o.close(),await d.close();const _=u.digest();if(!Gl(r,_))throw e&&e.info(ql(_,"Calc Curret Challenge Hash: ")),e&&e.error("PTau file is corrupted. Calculated new challenge hash does not match with the eclared one"),new Error("PTau file is corrupted. Calculated new challenge hash does not match with the eclared one");return r;async function g(t,a,l,c){const s=n[a],r=2*s.F.n8,_=Math.floor((1<<24)/r);await Qe(o,i,t);for(let t=0;t<l;t+=_){e&&e.debug(`Exporting ${c}: ${t}/${l}`);const a=Math.min(l-t,_);let i;i=await o.read(a*r),i=await s.batchLEMtoU(i),await d.write(i),u.update(i)}await ke(o)}},importResponse:async function(t,a,e,o,i,n){await Yn.exports.ready();const l=new Uint8Array(64);for(let t=0;t<64;t++)l[t]=255;const{fd:c,sections:s}=await ze(t,"ptau",1),{curve:r,power:d}=await Vc(c,s),u=await Wc(c,r,s),_={};o&&(_.name=o);const g=2*r.F1.n8,f=r.F1.n8,p=2*r.F2.n8,h=r.F2.n8,m=await Ge(a);if(m.totalSize!=64+(2**d*2-1)*f+2**d*h+2**d*f+2**d*f+h+6*g+3*p)throw new Error("Size of the contribution is invalid");let L;L=u.length>0?u[u.length-1].nextChallenge:Xc(r,d,n);const b=await Te(e,"ptau",1,i?7:2);await jc(b,r,d);const w=await m.read(64);if(Gl(l,L)&&(L=w,u[u.length-1].nextChallenge=L),!Gl(w,L))throw new Error("Wrong contribution. this contribution is not based on the previus hash");const y=new Yn.exports(64);y.update(w);const A=[];let C;C=await I(m,b,"G1",2,2**d*2-1,[1],"tauG1"),_.tauG1=C[0],C=await I(m,b,"G2",3,2**d,[1],"tauG2"),_.tauG2=C[0],C=await I(m,b,"G1",4,2**d,[0],"alphaG1"),_.alphaG1=C[0],C=await I(m,b,"G1",5,2**d,[0],"betaG1"),_.betaG1=C[0],C=await I(m,b,"G2",6,1,[0],"betaG2"),_.betaG2=C[0],_.partialHash=y.getPartialHash();const x=await m.read(2*r.F1.n8*6+2*r.F2.n8*3);_.key=Kc(x,0,r,!1),y.update(new Uint8Array(x));const F=y.digest();if(n&&n.info(ql(F,"Contribution Response Hash imported: ")),i){const t=new Yn.exports(64);t.update(F),await B(t,b,"G1",2,2**d*2-1,"tauG1",n),await B(t,b,"G2",3,2**d,"tauG2",n),await B(t,b,"G1",4,2**d,"alphaTauG1",n),await B(t,b,"G1",5,2**d,"betaTauG1",n),await B(t,b,"G2",6,1,"betaG2",n),_.nextChallenge=t.digest(),n&&n.info(ql(_.nextChallenge,"Next Challenge Hash: "))}else _.nextChallenge=l;return u.push(_),await Jc(b,r,u),await m.close(),await b.close(),await c.close(),_.nextChallenge;async function I(t,a,e,o,l,c,s){return i?await async function(t,a,e,o,i,l,c){const s=r[e],d=s.F.n8,u=2*s.F.n8,_=[];await Me(a,o);const g=Math.floor((1<<24)/u);A[o]=a.pos;for(let e=0;e<i;e+=g){n&&n.debug(`Importing ${c}: ${e}/${i}`);const o=Math.min(i-e,g),r=await t.read(o*d);y.update(r);const f=await s.batchCtoLEM(r);await a.write(f);for(let t=0;t<l.length;t++){const a=l[t];if(a>=e&&a<e+o){const t=s.fromRprLEM(f,(a-e)*u);_.push(t)}}}return await Ue(a),_}(t,a,e,o,l,c,s):await async function(t,a,e,o,i,l,c){const s=r[e],d=s.F.n8,u=[],_=Math.floor((1<<24)/d);for(let a=0;a<i;a+=_){n&&n.debug(`Importing ${c}: ${a}/${i}`);const e=Math.min(i-a,_),o=await t.read(e*d);y.update(o);for(let t=0;t<l.length;t++){const i=l[t];if(i>=a&&i<a+e){const t=s.fromRprCompressed(o,(i-a)*d);u.push(t)}}}return u}(t,0,e,0,l,c,s)}async function B(t,a,e,o,i,n,l){const c=r[e],s=2*c.F.n8,d=Math.floor((1<<24)/s),u=a.pos;a.pos=A[o];for(let e=0;e<i;e+=d){l&&l.debug(`Hashing ${n}: ${e}/${i}`);const o=Math.min(i-e,d),r=await a.read(o*s),u=await c.batchLEMtoU(r);t.update(u)}a.pos=u}},verify:async function(t,a){let e;await Yn.exports.ready();const{fd:o,sections:i}=await ze(t,"ptau",1),{curve:n,power:l,ceremonyPower:c}=await Vc(o,i),s=await Wc(o,n,i);a&&a.debug("power: 2**"+l),a&&a.debug("Computing initial contribution hash");const r={tauG1:n.G1.g,tauG2:n.G2.g,alphaG1:n.G1.g,betaG1:n.G1.g,betaG2:n.G2.g,nextChallenge:Xc(n,c,a),responseHash:Yn.exports(64).digest()};if(0==s.length)return a&&a.error("This file has no contribution! It cannot be used in production"),!1;let d;d=s.length>1?s[s.length-2]:r;const u=s[s.length-1];if(a&&a.debug("Validating contribution #"+s[s.length-1].id),!await es(n,u,d,a))return!1;const _=Yn.exports(64);_.update(u.responseHash),a&&a.debug("Verifying powers in tau*G1 section");const g=await w(2,"G1","tauG1",2**l*2-1,[0,1],a);if(e=await as(n,g.R1,g.R2,n.G2.g,u.tauG2),!0!==e)return a&&a.error("tauG1 section. Powers do not match"),!1;if(!n.G1.eq(n.G1.g,g.singularPoints[0]))return a&&a.error("First element of tau*G1 section must be the generator"),!1;if(!n.G1.eq(u.tauG1,g.singularPoints[1]))return a&&a.error("Second element of tau*G1 section does not match the one in the contribution section"),!1;a&&a.debug("Verifying powers in tau*G2 section");const f=await w(3,"G2","tauG2",2**l,[0,1],a);if(e=await as(n,n.G1.g,u.tauG1,f.R1,f.R2),!0!==e)return a&&a.error("tauG2 section. Powers do not match"),!1;if(!n.G2.eq(n.G2.g,f.singularPoints[0]))return a&&a.error("First element of tau*G2 section must be the generator"),!1;if(!n.G2.eq(u.tauG2,f.singularPoints[1]))return a&&a.error("Second element of tau*G2 section does not match the one in the contribution section"),!1;a&&a.debug("Verifying powers in alpha*tau*G1 section");const p=await w(4,"G1","alphatauG1",2**l,[0],a);if(e=await as(n,p.R1,p.R2,n.G2.g,u.tauG2),!0!==e)return a&&a.error("alphaTauG1 section. Powers do not match"),!1;if(!n.G1.eq(u.alphaG1,p.singularPoints[0]))return a&&a.error("First element of alpha*tau*G1 section (alpha*G1) does not match the one in the contribution section"),!1;a&&a.debug("Verifying powers in beta*tau*G1 section");const h=await w(5,"G1","betatauG1",2**l,[0],a);if(e=await as(n,h.R1,h.R2,n.G2.g,u.tauG2),!0!==e)return a&&a.error("betaTauG1 section. Powers do not match"),!1;if(!n.G1.eq(u.betaG1,h.singularPoints[0]))return a&&a.error("First element of beta*tau*G1 section (beta*G1) does not match the one in the contribution section"),!1;const m=await async function(t){const a=n.G2,e=2*a.F.n8,l=new Uint8Array(e);if(!i[6])throw t.error("File has no BetaG2 section"),new Error("File has no BetaG2 section");if(i[6].length>1)throw t.error("File has no BetaG2 section"),new Error("File has more than one GetaG2 section");o.pos=i[6][0].p;const c=await o.read(e),s=a.fromRprLEM(c);return a.toRprUncompressed(l,0,s),_.update(l),s}(a);if(!n.G2.eq(u.betaG2,m))return a&&a.error("betaG2 element in betaG2 section does not match the one in the contribution section"),!1;const L=_.digest();if(l==c&&!Gl(L,u.nextChallenge))return a&&a.error("Hash of the values does not match the next challenge of the last contributor in the contributions section"),!1;a&&a.info(ql(L,"Next challenge hash: ")),b(u,d);for(let t=s.length-2;t>=0;t--){const e=s[t],o=t>0?s[t-1]:r;if(!await es(n,e,o,a))return!1;b(e,o)}if(a&&a.info("-----------------------------------------------------"),i[12]&&i[13]&&i[14]&&i[15]){let t;if(t=await y("G1",2,12,"tauG1",a),!t)return!1;if(t=await y("G2",3,13,"tauG2",a),!t)return!1;if(t=await y("G1",4,14,"alphaTauG1",a),!t)return!1;if(t=await y("G1",5,15,"betaTauG1",a),!t)return!1}else a&&a.warn('this file does not contain phase2 precalculated values. Please run: \n   snarkjs "powersoftau preparephase2" to prepare this file to be used in the phase2 ceremony.');return await o.close(),a&&a.info("Powers of Tau Ok!"),!0;function b(t,e){if(!a)return;a.info("-----------------------------------------------------"),a.info(`Contribution #${t.id}: ${t.name||""}`),a.info(ql(t.nextChallenge,"Next Challenge: "));const o=new Uint8Array(2*n.G1.F.n8*6+2*n.G2.F.n8*3);Hc(o,0,n,t.key,!1);const i=Yn.exports(64);i.setPartialHash(t.partialHash),i.update(o);const l=i.digest();a.info(ql(l,"Response Hash:")),a.info(ql(e.nextChallenge,"Response Hash:")),1==t.type&&(a.info(`Beacon generator: ${Dl(t.beaconHash)}`),a.info(`Beacon iterations Exp: ${t.numIterationsExp}`))}async function w(t,a,e,l,c,s){const r=n[a],d=2*r.F.n8;await Qe(o,i,t);const u=[];let g=r.zero,f=r.zero,p=r.zero;for(let t=0;t<l;t+=65536){s&&s.debug(`points relations: ${e}: ${t}/${l} `);const a=Math.min(l-t,65536),i=await o.read(a*d),n=await r.batchLEMtoU(i);_.update(n);const h=Ml(4*(a-1));if(t>0){const t=r.fromRprLEM(i,0),a=Ql(Ml(4),0);g=r.add(g,r.timesScalar(p,a)),f=r.add(f,r.timesScalar(t,a))}const m=await r.multiExpAffine(i.slice(0,(a-1)*d),h),L=await r.multiExpAffine(i.slice(d),h);g=r.add(g,m),f=r.add(f,L),p=r.fromRprLEM(i,(a-1)*d);for(let e=0;e<c.length;e++){const o=c[e];if(o>=t&&o<t+a){const a=r.fromRprLEM(i,(o-t)*d);u.push(a)}}}return await ke(o),{R1:g,R2:f,singularPoints:u}}async function y(t,a,e,c,s){s&&s.debug(`Verifying phase2 calculated values ${c}...`);const r=n[t],d=2*r.F.n8,u=new Array(8);for(let t=0;t<8;t++)u[t]=Ql(Ml(4),0);for(let t=0;t<=l;t++){if(!await _(t))return!1}if(2==a){if(!await _(l+1))return!1}return!0;async function _(t){s&&s.debug(`Power ${t}...`);const _=n.Fr.n8,g=2**t;let f,p=new Uint32Array(g),h=new vo(u);s&&s.debug(`Creating random numbers Powers${t}...`);for(let a=0;a<g;a++)p[a]=t==l+1&&a==g-1?0:h.nextU32();p=new Uint8Array(p.buffer,p.byteOffset,p.byteLength),s&&s.debug(`reading points Powers${t}...`),await Qe(o,i,a),f=new xn(g*d),t==l+1?(await o.readToBuffer(f,0,(g-1)*d),f.set(n.G1.zeroAffine,(g-1)*d)):await o.readToBuffer(f,0,g*d),await ke(o,!0);const m=await r.multiExpAffine(f,p,s,c+"_"+t);p=new xn(g*_),h=new vo(u);const L=new Uint8Array(4),b=new DataView(L.buffer);s&&s.debug(`Creating random numbers Powers${t}...`);for(let a=0;a<g;a++)a==g-1&&t==l+1||(b.setUint32(0,h.nextU32(),!0),p.set(L,a*_));s&&s.debug(`batchToMontgomery ${t}...`),p=await n.Fr.batchToMontgomery(p),s&&s.debug(`fft ${t}...`),p=await n.Fr.fft(p),s&&s.debug(`batchFromMontgomery ${t}...`),p=await n.Fr.batchFromMontgomery(p),s&&s.debug(`reading points Lagrange${t}...`),await Qe(o,i,e),o.pos+=d*(2**t-1),await o.readToBuffer(f,0,g*d),await ke(o,!0);const w=await r.multiExpAffine(f,p,s,c+"_"+t+"_transformed");return!!r.eq(m,w)||(s&&s.error("Phase2 caclutation does not match with powers of tau"),!1)}}},challengeContribute:async function(t,a,e,o,i){await Yn.exports.ready();const n=await Ge(a),l=8*t.F1.n64*2,c=8*t.F2.n64*2,s=(n.totalSize+l-64-c)/(4*l+c);let r=s,d=0;for(;r>1;)r/=2,d+=1;if(2**d!=s)throw new Error("Invalid file size");i&&i.debug("Power to tau size: "+d);const u=await kl(o),_=await qe(e),g=Yn.exports(64);for(let t=0;t<n.totalSize;t+=n.pageSize){i&&i.debug(`Hashing challenge ${t}/${n.totalSize}`);const a=Math.min(n.totalSize-t,n.pageSize),e=await n.read(a);g.update(e)}const f=await n.read(64,0);i&&i.info(ql(f,"Claimed Previous Response Hash: "));const p=g.digest();i&&i.info(ql(p,"Current Challenge Hash: "));const h=$c(t,p,u);i&&["tau","alpha","beta"].forEach((a=>{i.debug(a+".g1_s: "+t.G1.toString(h[a].g1_s,16)),i.debug(a+".g1_sx: "+t.G1.toString(h[a].g1_sx,16)),i.debug(a+".g2_sp: "+t.G2.toString(h[a].g2_sp,16)),i.debug(a+".g2_spx: "+t.G2.toString(h[a].g2_spx,16)),i.debug("")}));const m=Yn.exports(64);await _.write(p),m.update(p),await is(n,_,m,t,"G1",2**d*2-1,t.Fr.one,h.tau.prvKey,"COMPRESSED","tauG1",i),await is(n,_,m,t,"G2",2**d,t.Fr.one,h.tau.prvKey,"COMPRESSED","tauG2",i),await is(n,_,m,t,"G1",2**d,h.alpha.prvKey,h.tau.prvKey,"COMPRESSED","alphaTauG1",i),await is(n,_,m,t,"G1",2**d,h.beta.prvKey,h.tau.prvKey,"COMPRESSED","betaTauG1",i),await is(n,_,m,t,"G2",1,h.beta.prvKey,h.tau.prvKey,"COMPRESSED","betaTauG2",i);const L=new Uint8Array(2*t.F1.n8*6+2*t.F2.n8*3);Hc(L,0,t,h,!1),await _.write(L),m.update(L);const b=m.digest();i&&i.info(ql(b,"Contribution Response Hash: ")),await _.close(),await n.close()},beacon:async function(t,a,e,o,i,n){const l=Nl(o);if(0==l.byteLength||2*l.byteLength!=o.length)return n&&n.error("Invalid Beacon Hash. (It must be a valid hexadecimal sequence)"),!1;if(l.length>=256)return n&&n.error("Maximum lenght of beacon hash is 255 bytes"),!1;if((i=parseInt(i))<10||i>63)return n&&n.error("Invalid numIterationsExp. (Must be between 10 and 63)"),!1;await Yn.exports.ready();const{fd:c,sections:s}=await ze(t,"ptau",1),{curve:r,power:d,ceremonyPower:u}=await Vc(c,s);if(d!=u)return n&&n.error("This file has been reduced. You cannot contribute into a reduced file."),!1;s[12]&&n&&n.warn("Contributing into a file that has phase2 calculated. You will have to prepare phase2 again.");const _=await Wc(c,r,s),g={name:e,type:1,numIterationsExp:i,beaconHash:l};let f;f=_.length>0?_[_.length-1].nextChallenge:Xc(r,d,n),g.key=await ts(r,f,l,i);const p=new Yn.exports(64);p.update(f);const h=await Te(a,"ptau",1,7);await jc(h,r,d);const m=[];let L;L=await A(2,"G1",2**d*2-1,r.Fr.e(1),g.key.tau.prvKey,"tauG1",n),g.tauG1=L[1],L=await A(3,"G2",2**d,r.Fr.e(1),g.key.tau.prvKey,"tauG2",n),g.tauG2=L[1],L=await A(4,"G1",2**d,g.key.alpha.prvKey,g.key.tau.prvKey,"alphaTauG1",n),g.alphaG1=L[0],L=await A(5,"G1",2**d,g.key.beta.prvKey,g.key.tau.prvKey,"betaTauG1",n),g.betaG1=L[0],L=await A(6,"G2",1,g.key.beta.prvKey,g.key.tau.prvKey,"betaTauG2",n),g.betaG2=L[0],g.partialHash=p.getPartialHash();const b=new Uint8Array(2*r.F1.n8*6+2*r.F2.n8*3);Hc(b,0,r,g.key,!1),p.update(new Uint8Array(b));const w=p.digest();n&&n.info(ql(w,"Contribution Response Hash imported: "));const y=new Yn.exports(64);return y.update(w),await C(h,"G1",2,2**d*2-1,"tauG1",n),await C(h,"G2",3,2**d,"tauG2",n),await C(h,"G1",4,2**d,"alphaTauG1",n),await C(h,"G1",5,2**d,"betaTauG1",n),await C(h,"G2",6,1,"betaG2",n),g.nextChallenge=y.digest(),n&&n.info(ql(g.nextChallenge,"Next Challenge Hash: ")),_.push(g),await Jc(h,r,_),await c.close(),await h.close(),w;async function A(t,a,e,o,i,n,l){const d=[];c.pos=s[t][0].p,await Me(h,t),m[t]=h.pos;const u=r[a],_=2*u.F.n8,g=Math.floor((1<<20)/_);let f=o;for(let t=0;t<e;t+=g){l&&l.debug(`applying key${n}: ${t}/${e}`);const a=Math.min(e-t,g),o=await c.read(a*_),s=await u.batchApplyKey(o,f,i),m=h.write(s),L=await u.batchLEMtoC(s);if(p.update(L),await m,0==t)for(let t=0;t<Math.min(2,e);t++)d.push(u.fromRprLEM(s,t*_));f=r.Fr.mul(f,r.Fr.exp(i,a))}return await Ue(h),d}async function C(t,a,e,o,i,n){const l=r[a],c=2*l.F.n8,s=Math.floor((1<<24)/c),d=t.pos;t.pos=m[e];for(let a=0;a<o;a+=s){n&&n.debug(`Hashing ${i}: ${a}/${o}`);const e=Math.min(o-a,s),r=await t.read(e*c),d=await l.batchLEMtoU(r);y.update(d)}t.pos=d}},contribute:async function(t,a,e,o,i){await Yn.exports.ready();const{fd:n,sections:l}=await ze(t,"ptau",1),{curve:c,power:s,ceremonyPower:r}=await Vc(n,l);if(s!=r)throw i&&i.error("This file has been reduced. You cannot contribute into a reduced file."),new Error("This file has been reduced. You cannot contribute into a reduced file.");l[12]&&i&&i.warn("WARNING: Contributing into a file that has phase2 calculated. You will have to prepare phase2 again.");const d=await Wc(n,c,l),u={name:e,type:0};let _;const g=await kl(o);_=d.length>0?d[d.length-1].nextChallenge:Xc(c,s,i),u.key=$c(c,_,g);const f=new Yn.exports(64);f.update(_);const p=await Te(a,"ptau",1,7);await jc(p,c,s);const h=[];let m;m=await y(2,"G1",2**s*2-1,c.Fr.e(1),u.key.tau.prvKey,"tauG1"),u.tauG1=m[1],m=await y(3,"G2",2**s,c.Fr.e(1),u.key.tau.prvKey,"tauG2"),u.tauG2=m[1],m=await y(4,"G1",2**s,u.key.alpha.prvKey,u.key.tau.prvKey,"alphaTauG1"),u.alphaG1=m[0],m=await y(5,"G1",2**s,u.key.beta.prvKey,u.key.tau.prvKey,"betaTauG1"),u.betaG1=m[0],m=await y(6,"G2",1,u.key.beta.prvKey,u.key.tau.prvKey,"betaTauG2"),u.betaG2=m[0],u.partialHash=f.getPartialHash();const L=new Uint8Array(2*c.F1.n8*6+2*c.F2.n8*3);Hc(L,0,c,u.key,!1),f.update(new Uint8Array(L));const b=f.digest();i&&i.info(ql(b,"Contribution Response Hash imported: "));const w=new Yn.exports(64);return w.update(b),await A(p,"G1",2,2**s*2-1,"tauG1"),await A(p,"G2",3,2**s,"tauG2"),await A(p,"G1",4,2**s,"alphaTauG1"),await A(p,"G1",5,2**s,"betaTauG1"),await A(p,"G2",6,1,"betaG2"),u.nextChallenge=w.digest(),i&&i.info(ql(u.nextChallenge,"Next Challenge Hash: ")),d.push(u),await Jc(p,c,d),await n.close(),await p.close(),b;async function y(t,a,e,o,s,r){const d=[];n.pos=l[t][0].p,await Me(p,t),h[t]=p.pos;const u=c[a],_=2*u.F.n8,g=Math.floor((1<<20)/_);let m=o;for(let t=0;t<e;t+=g){i&&i.debug(`processing: ${r}: ${t}/${e}`);const a=Math.min(e-t,g),o=await n.read(a*_),l=await u.batchApplyKey(o,m,s),h=p.write(l),L=await u.batchLEMtoC(l);if(f.update(L),await h,0==t)for(let t=0;t<Math.min(2,e);t++)d.push(u.fromRprLEM(l,t*_));m=c.Fr.mul(m,c.Fr.exp(s,a))}return await Ue(p),d}async function A(t,a,e,o,n){const l=c[a],s=2*l.F.n8,r=Math.floor((1<<24)/s),d=t.pos;t.pos=h[e];for(let a=0;a<o;a+=r){i&&a&&i.debug(`Hashing ${n}: `+a);const e=Math.min(o-a,r),c=await t.read(e*s),d=await l.batchLEMtoU(c);w.update(d)}t.pos=d}},preparePhase2:async function(t,a,e){const{fd:o,sections:i}=await ze(t,"ptau",1),{curve:n,power:l}=await Vc(o,i),c=await Te(a,"ptau",1,11);return await jc(c,n,l),await De(o,i,c,2),await De(o,i,c,3),await De(o,i,c,4),await De(o,i,c,5),await De(o,i,c,6),await De(o,i,c,7),await s(2,12,"G1","tauG1"),await s(3,13,"G2","tauG2"),await s(4,14,"G1","alphaTauG1"),await s(5,15,"G1","betaTauG1"),await o.close(),void await c.close();async function s(t,a,s,r){e&&e.debug("Starting section: "+r),await Me(c,a);for(let t=0;t<=l;t++)await d(t);async function d(a){const d=2**a,u=n[s];n.Fr;const _=2*u.F.n8;let g;u.F.n8,g=new xn(d*_),await Qe(o,i,t),2==t&&a==l+1?(await o.readToBuffer(g,0,(d-1)*_),g.set(n.G1.zeroAffine,(d-1)*_)):await o.readToBuffer(g,0,d*_),await ke(o,!0),g=await u.lagrangeEvaluations(g,"affine","affine",e,r),await c.write(g)}2==t&&await d(l+1),await Ue(c)}},truncate:async function(t,a,e){const{fd:o,sections:i}=await ze(t,"ptau",1),{curve:n,power:l,ceremonyPower:c}=await Vc(o,i),s=2*n.G1.F.n8,r=2*n.G2.F.n8;for(let t=1;t<l;t++)await d(t);return await o.close(),!0;async function d(t){let l=t.toString();for(;l.length<2;)l="0"+l;e&&e.debug("Writing Power: "+l);const d=await Te(a+l+".ptau","ptau",1,11);await jc(d,n,t,c),await De(o,i,d,2,(2**t*2-1)*s),await De(o,i,d,3,2**t*r),await De(o,i,d,4,2**t*s),await De(o,i,d,5,2**t*s),await De(o,i,d,6,r),await De(o,i,d,7),await De(o,i,d,12,(2**(t+1)*2-1)*s),await De(o,i,d,13,(2**t*2-1)*r),await De(o,i,d,14,(2**t*2-1)*s),await De(o,i,d,15,(2**t*2-1)*s),await d.close()}},convert:async function(t,a,e){const{fd:o,sections:i}=await ze(t,"ptau",1),{curve:n,power:l}=await Vc(o,i),c=await Te(a,"ptau",1,11);return await jc(c,n,l),await De(o,i,c,2),await De(o,i,c,3),await De(o,i,c,4),await De(o,i,c,5),await De(o,i,c,6),await De(o,i,c,7),await async function(t,a,s,r){e&&e.debug("Starting section: "+r);await Me(c,a);const d=i[a][0].size,u=o.pageSize;await Qe(o,i,a);for(let t=0;t<d;t+=u){const a=Math.min(d-t,u),e=await o.read(a);await c.write(e)}await ke(o),2==t&&await async function(a){const d=2**a,u=n[s],_=2*u.F.n8;let g;g=new xn(d*_),await Qe(o,i,t),2==t&&a==l+1?(await o.readToBuffer(g,0,(d-1)*_),g.set(n.G1.zeroAffine,(d-1)*_)):await o.readToBuffer(g,0,d*_);await ke(o,!0),g=await u.lagrangeEvaluations(g,"affine","affine",e,r),await c.write(g)}(l+1);await Ue(c)}(2,12,"G1","tauG1"),await De(o,i,c,13),await De(o,i,c,14),await De(o,i,c,15),await o.close(),void await c.close()},exportJson:async function(t,a){const{fd:e,sections:o}=await ze(t,"ptau",1),{curve:i,power:n}=await Vc(e,o),l={};return l.q=i.q,l.power=n,l.contributions=await Wc(e,i,o),l.tauG1=await c(2,"G1",2**n*2-1,"tauG1"),l.tauG2=await c(3,"G2",2**n,"tauG2"),l.alphaTauG1=await c(4,"G1",2**n,"alphaTauG1"),l.betaTauG1=await c(5,"G1",2**n,"betaTauG1"),l.betaG2=await c(6,"G2",1,"betaG2"),l.lTauG1=await s(12,"G1","lTauG1"),l.lTauG2=await s(13,"G2","lTauG2"),l.lAlphaTauG1=await s(14,"G1","lAlphaTauG2"),l.lBetaTauG1=await s(15,"G1","lBetaTauG2"),await e.close(),$l(i.Fr,l);async function c(t,n,l,c){const s=i[n],r=2*s.F.n8,d=[];await Qe(e,o,t);for(let t=0;t<l;t++){a&&t&&t%1e4==0&&console.log(`${c}: `+t);const o=await e.read(r);d.push(s.fromRprLEM(o,0))}return await ke(e),d}async function s(t,l,c){const s=i[l],r=2*s.F.n8,d=[];await Qe(e,o,t);for(let t=0;t<=n;t++){a&&console.log(`${c}: Power: ${t}`),d[t]=[];const o=2**t;for(let i=0;i<o;i++){a&&i&&i%1e4==0&&console.log(`${c}: ${i}/${o}`);const n=await e.read(r);d[t].push(s.fromRprLEM(n,0))}}return await ke(e,!0),d}}});const ls=262144,cs={get:function(t,a){return isNaN(a)?t[a]:t.getElement(a)},set:function(t,a,e){return isNaN(a)?(t[a]=e,!0):t.setElement(a,e)}};class ss{constructor(t){this.length=t||0,this.arr=new Array(ls);for(let a=0;a<t;a+=ls)this.arr[a/ls]=new Array(Math.min(ls,t-a));return this}push(){for(let t=0;t<arguments.length;t++)this.setElement(this.length,arguments[t])}slice(t,a){const e=new Array(a-t);for(let o=t;o<a;o++)e[o-t]=this.getElement(o);return e}getElement(t){t=parseInt(t);const a=Math.floor(t/ls),e=t%ls;return this.arr[a]?this.arr[a][e]:void 0}setElement(t,a){t=parseInt(t);const e=Math.floor(t/ls);this.arr[e]||(this.arr[e]=new Array(ls));const o=t%ls;return this.arr[e][o]=a,t>=this.length&&(this.length=t+1),!0}getKeys(){const t=new rs;for(let a=0;a<this.arr.length;a++)if(this.arr[a])for(let e=0;e<this.arr[a].length;e++)void 0!==this.arr[a][e]&&t.push(a*ls+e);return t}}class rs{constructor(t){const a=new ss(t);return new Proxy(a,cs)}}const ds=4,us=5;async function _s(t,a,e){let o;o="object"==typeof e?e:void 0===e?{singleThread:!1}:{singleThread:e};const i={};if(await Qe(t,a,1),i.n8=await t.readULE32(),i.prime=await Ne(t,i.n8),o.F){if(o.F.p!=i.prime)throw new Error("Different Prime");i.F=o.F}else if(o.getFieldFromPrime)i.F=await o.getFieldFromPrime(i.prime,o.singleThread);else if(o.getCurveFromPrime)i.curve=await o.getCurveFromPrime(i.prime,o.singleThread),i.F=i.curve.Fr;else try{i.curve=await ue(i.prime,o.singleThread),i.F=i.curve.Fr}catch(t){i.F=new j(i.prime)}return i.nVars=await t.readULE32(),i.nOutputs=await t.readULE32(),i.nPubInputs=await t.readULE32(),i.nPrvInputs=await t.readULE32(),i.nLabels=await t.readULE64(),i.nConstraints=await t.readULE32(),i.useCustomGates=void 0!==a[ds]&&null!==a[ds]&&void 0!==a[us]&&null!==a[us],await ke(t),i}async function gs(t,a,e){if("object"!=typeof e)throw new Error("readR1csFd: options must be an object");e.loadConstraints=!("loadConstraints"in e)||e.loadConstraints,e.loadMap="loadMap"in e&&e.loadMap,e.loadCustomGates=!("loadCustomGates"in e)||e.loadCustomGates;const o=await _s(t,a,e);return e.loadConstraints&&(o.constraints=await async function(t,a,e,o,i){let n;n="object"==typeof o?o:void 0===o?{}:{logger:o,loggerCtx:i};const l=await $e(t,a,2);let c,s=0;c=e.nConstraints>1<<20?new rs:[];for(let t=0;t<e.nConstraints;t++){n.logger&&t%1e5==0&&n.logger.info(`${n.loggerCtx}: Loading constraints: ${t}/${e.nConstraints}`);const a=r();c.push(a)}return c;function r(){const t=[];return t[0]=d(),t[1]=d(),t[2]=d(),t}function d(){const t={},a=l.slice(s,s+4);s+=4;const o=new DataView(a.buffer).getUint32(0,!0),i=l.slice(s,s+(4+e.n8)*o);s+=(4+e.n8)*o;const n=new DataView(i.buffer);for(let a=0;a<o;a++){const o=n.getUint32(a*(4+e.n8),!0),l=e.F.fromRprLE(i,a*(4+e.n8)+4);t[o]=l}return t}}(t,a,o,e)),e.loadMap&&(o.map=await async function(t,a,e,o,i){let n;n="object"==typeof o?o:void 0===o?{}:{logger:o,loggerCtx:i};const l=await $e(t,a,3);let c,s=0;c=e.nVars>1<<20?new rs:[];for(let t=0;t<e.nVars;t++){n.logger&&t%1e4==0&&n.logger.info(`${n.loggerCtx}: Loading map: ${t}/${e.nVars}`);const a=r();c.push(a)}return c;function r(){const t=l.slice(s,s+8);s+=8;const a=new DataView(t.buffer),e=a.getUint32(0,!0);return 4294967296*a.getUint32(4,!0)+e}}(t,a,o,e)),e.loadCustomGates&&(o.useCustomGates?(o.customGates=await async function(t,a,e){await Qe(t,a,ds);let o=await t.readULE32(),i=[];for(let a=0;a<o;a++){let a={};a.templateName=await t.readString();let o=await t.readULE32();a.parameters=Array(o);let n=await t.read(e.n8*o);for(let t=0;t<o;t++)a.parameters[t]=e.F.fromRprLE(n,t*e.n8,e.n8);i.push(a)}return await ke(t),i}(t,a,o),o.customGatesUses=await async function(t,a,e){const o=await $e(t,a,us),i=new Uint32Array(o.buffer,o.byteOffset,o.byteLength/4),n=i[0];let l,c=1;l=n>1<<20?new rs:[];for(let t=0;t<n;t++){e.logger&&t%1e5==0&&e.logger.info(`${e.loggerCtx}: Loading custom gate uses: ${t}/${n}`);let a={};a.id=i[c++];let o=i[c++];a.signals=[];for(let t=0;t<o;t++){const t=i[c++],e=i[c++];a.signals.push(4294967296*e+t)}l.push(a)}return l}(t,a,e)):(o.customGates=[],o.customGatesUses=[])),o}async function fs(t,a,e,o,i,n){let l;l="object"==typeof a?a:void 0===a?{loadConstraints:!0,loadMap:!1,loadCustomGates:!0}:{loadConstraints:a,loadMap:e,singleThread:o,logger:i,loggerCtx:n};const{fd:c,sections:s}=await ze(t,"r1cs",1),r=await gs(c,s,l);return await c.close(),r}const ps=Dn.e("73eda753299d7d483339d80809a1d80553bda402fffe5bfeffffffff00000001",16),hs=Dn.e("21888242871839275222246405745257275088548364400416034343698204186575808495617");var ms=Object.freeze({__proto__:null,print:function(t,a,e){for(let a=0;a<t.constraints.length;a++)o(t.constraints[a]);function o(o){const i=e=>{let o="";return Object.keys(e).forEach((i=>{let n=a.varIdx2Name[i];"one"==n&&(n="1");let l=t.curve.Fr.toString(e[i]);"1"==l&&(l=""),"-1"==l&&(l="-"),""!=o&&"-"!=l[0]&&(l="+"+l),""!=o&&(l=" "+l),o=o+l+n})),o},n=`[ ${i(o[0])} ] * [ ${i(o[1])} ] - [ ${i(o[2])} ] = 0`;e&&e.info(n)}},info:async function(t,a){const e=await fs(t);return Dn.eq(e.prime,hs)?a&&a.info("Curve: bn-128"):Dn.eq(e.prime,ps)?a&&a.info("Curve: bls12-381"):a&&a.info(`Unknown Curve. Prime: ${Dn.toString(e.prime)}`),a&&a.info(`# of Wires: ${e.nVars}`),a&&a.info(`# of Constraints: ${e.nConstraints}`),a&&a.info(`# of Private Inputs: ${e.nPrvInputs}`),a&&a.info(`# of Public Inputs: ${e.nPubInputs}`),a&&a.info(`# of Labels: ${e.nLabels}`),a&&a.info(`# of Outputs: ${e.nOutputs}`),e},exportJson:async function(t,a){const e=await fs(t,!0,!0,!0,a),o=e.curve.Fr;return delete e.curve,delete e.F,$l(o,e)}});async function Ls(t){const a={labelIdx2Name:["one"],varIdx2Name:["one"],componentIdx2Name:[]},e=await Ge(t),o=await e.read(e.totalSize),i=new TextDecoder("utf-8").decode(o).split("\n");for(let t=0;t<i.length;t++){const e=i[t].split(",");4==e.length&&(a.varIdx2Name[e[1]]?a.varIdx2Name[e[1]]+="|"+e[3]:a.varIdx2Name[e[1]]=e[3],a.labelIdx2Name[e[0]]=e[3],a.componentIdx2Name[e[2]]||(a.componentIdx2Name[e[2]]=n(e[3])))}return await e.close(),a;function n(t){const a=t.split(".");return a.pop(),a.join(".")}}const{unstringifyBigInts:bs}=$n;var ws=Object.freeze({__proto__:null,calculate:zc,debug:async function(t,a,e,o,i,n){const l=bs(t),c=await Ge(a),s=await c.read(c.totalSize);await c.close();let r={sanityCheck:!0},d=await Ls(o);i.set&&(d||(d=await Ls(o)),r.logSetSignal=function(t,a){n&&n.info("SET "+d.labelIdx2Name[t]+" <-- "+a.toString())}),i.get&&(d||(d=await Ls(o)),r.logGetSignal=function(t,a){n&&n.info("GET "+d.labelIdx2Name[t]+" --\x3e "+a.toString())}),i.trigger&&(d||(d=await Ls(o)),r.logStartComponent=function(t){n&&n.info("START: "+d.componentIdx2Name[t])},r.logFinishComponent=function(t){n&&n.info("FINISH: "+d.componentIdx2Name[t])}),r.sym=d;const u=await Pc(s,r),_=await u.calculateWitness(l),g=await Te(e,"wtns",2,2);await async function(t,a,e){await Me(t,1);const o=8*(Math.floor((Dn.bitLength(e)-1)/64)+1);await t.writeULE32(o),await Re(t,e,o),await t.writeULE32(a.length),await Ue(t),await Me(t,2);for(let e=0;e<a.length;e++)await Re(t,a[e],o);await Ue(t)}(g,_,u.prime),await g.close()},exportJson:async function(t){return await async function(t){const{fd:a,sections:e}=await ze(t,"wtns",2),{n8:o,nWitness:i}=await Fc(a,e);await Qe(a,e,2);const n=[];for(let t=0;t<i;t++){const t=await Ne(a,o);n.push(t)}return await ke(a),await a.close(),n}(t)},check:async function(t,a,e){e&&e.info("WITNESS CHECKING STARTED"),e&&e.info("> Reading r1cs file");const{fd:o,sections:i}=await ze(t,"r1cs",1),n=await gs(o,i,{loadConstraints:!1,loadCustomGates:!1});e&&e.info("> Reading witness file");const{fd:l,sections:c}=await ze(a,"wtns",2),s=await Fc(l,c);if(!Dn.eq(n.prime,s.q))throw new Error("Curve of the witness does not match the curve of the proving key");const r=await $e(l,c,2);await l.close();const d=(await async function(t){let a;if(Dn.eq(t,Vn))a=await Rn();else{if(!Dn.eq(t,jn))throw new Error(`Curve not supported: ${Dn.toString(t)}`);a=await Nn()}return a}(n.prime)).Fr,u=d.n8,_=await $e(o,i,2);e&&(e.info("----------------------------"),e.info("  WITNESS CHECK"),e.info(`  Curve:          ${n.curve.name}`),e.info(`  Vars (wires):   ${n.nVars}`),e.info(`  Ouputs:         ${n.nOutputs}`),e.info(`  Public Inputs:  ${n.nPubInputs}`),e.info(`  Private Inputs: ${n.nPrvInputs}`),e.info(`  Labels:         ${n.nLabels}`),e.info(`  Constraints:    ${n.nConstraints}`),e.info(`  Custom Gates:   ${n.useCustomGates}`),e.info("----------------------------")),e&&e.info("> Checking witness correctness");let g=0,f=!0;for(let t=0;t<n.nConstraints;t++){e&&0!==t&&t%5e5==0&&e.info(`··· processing r1cs constraints ${t}/${n.nConstraints}`);const a=h(),o=h(),i=h(),l=p(a),c=p(o),s=p(i);if(!d.eq(d.sub(d.mul(l,c),s),d.zero)){e.warn("··· aborting checking process at constraint "+t),f=!1;break}}return o.close(),e&&(f?(e.info("WITNESS IS CORRECT"),e.info("WITNESS CHECKING FINISHED SUCCESSFULLY")):(e.warn("WITNESS IS NOT CORRECT"),e.warn("WITNESS CHECKING FINISHED UNSUCCESSFULLY"))),f;function p(t){let a=d.zero;return Object.keys(t).forEach((e=>{const o=function(t){return d.fromRprLE(r.slice(t*u,t*u+u))}(e),i=t[e];a=d.add(a,d.mul(o,i))})),a}function h(){const t={},a=_.slice(g,g+4);g+=4;const e=new DataView(a.buffer).getUint32(0,!0),o=_.slice(g,g+(4+n.n8)*e);g+=(4+n.n8)*e;const i=new DataView(o.buffer);for(let a=0;a<e;a++){const e=i.getUint32(a*(4+n.n8),!0),l=n.F.fromRprLE(o,a*(4+n.n8)+4);t[e]=l}return t}}});const ys=262144,As={get:function(t,a){return isNaN(a)?t[a]:t.getElement(a)},set:function(t,a,e){return isNaN(a)?(t[a]=e,!0):t.setElement(a,e)}};class Cs{constructor(t){this.length=t||0,this.arr=new Array(ys);for(let a=0;a<t;a+=ys)this.arr[a/ys]=new Array(Math.min(ys,t-a));return this}push(){for(let t=0;t<arguments.length;t++)this.setElement(this.length,arguments[t])}slice(t,a){const e=new Array(a-t);for(let o=t;o<a;o++)e[o-t]=this.getElement(o);return e}getElement(t){t=parseInt(t);const a=Math.floor(t/ys),e=t%ys;return this.arr[a]?this.arr[a][e]:void 0}setElement(t,a){t=parseInt(t);const e=Math.floor(t/ys);this.arr[e]||(this.arr[e]=new Array(ys));const o=t%ys;return this.arr[e][o]=a,t>=this.length&&(this.length=t+1),!0}getKeys(){const t=new xs;for(let a=0;a<this.arr.length;a++)if(this.arr[a])for(let e=0;e<this.arr[a].length;e++)void 0!==this.arr[a][e]&&t.push(a*ys+e);return t}}class xs{constructor(t){const a=new Cs(t);return new Proxy(a,As)}}async function Fs(t,a,e,o){const i=0,n=1,l=2,c=3;await Yn.exports.ready();const s=Yn.exports(64),{fd:r,sections:d}=await ze(a,"ptau",1),{curve:u,power:_}=await Vc(r,d),{fd:g,sections:f}=await ze(t,"r1cs",1),p=await _s(g,f,!1),h=await Te(e,"zkey",1,10,1<<22,1<<24),m=2*u.G1.F.n8,L=2*u.G2.F.n8;if(p.prime!=u.r)return o&&o.error("r1cs curve does not match powers of tau ceremony curve"),-1;const b=Ol(p.nConstraints+p.nPubInputs+p.nOutputs+1-1)+1;if(b>_)return o&&o.error(`circuit too big for this power of tau ceremony. ${p.nConstraints}*2 > 2**${_}`),-1;if(!d[12])return o&&o.error("Powers of tau is not prepared."),-1;const w=p.nOutputs+p.nPubInputs,y=2**b;await Me(h,1),await h.writeULE32(1),await Ue(h),await Me(h,2);const A=u.q,C=8*(Math.floor((Dn.bitLength(A)-1)/64)+1),x=u.r,F=8*(Math.floor((Dn.bitLength(x)-1)/64)+1),I=Dn.mod(Dn.shl(1,8*F),x),B=u.Fr.e(Dn.mod(Dn.mul(I,I),x));let E,v,S;await h.writeULE32(C),await Re(h,A,C),await h.writeULE32(F),await Re(h,x,F),await h.writeULE32(p.nVars),await h.writeULE32(w),await h.writeULE32(y),E=await r.read(m,d[4][0].p),await h.write(E),E=await u.G1.batchLEMtoU(E),s.update(E),v=await r.read(m,d[5][0].p),await h.write(v),v=await u.G1.batchLEMtoU(v),s.update(v),S=await r.read(L,d[6][0].p),await h.write(S),S=await u.G2.batchLEMtoU(S),s.update(S);const P=new Uint8Array(m);u.G1.toRprLEM(P,0,u.G1.g);const O=new Uint8Array(L);u.G2.toRprLEM(O,0,u.G2.g);const q=new Uint8Array(m);u.G1.toRprUncompressed(q,0,u.G1.g);const G=new Uint8Array(L);u.G2.toRprUncompressed(G,0,u.G2.g),await h.write(O),await h.write(P),await h.write(O),s.update(G),s.update(q),s.update(G),await Ue(h),o&&o.info("Reading r1cs");let z=await $e(g,f,2);const T=new xs(p.nVars),M=new xs(p.nVars),U=new xs(p.nVars),Q=new xs(p.nVars-w-1),k=new Array(w+1);o&&o.info("Reading tauG1");let R=await $e(r,d,12,(y-1)*m,y*m);o&&o.info("Reading tauG2");let N=await $e(r,d,13,(y-1)*L,y*L);o&&o.info("Reading alphatauG1");let D=await $e(r,d,14,(y-1)*m,y*m);o&&o.info("Reading betatauG1");let $=await $e(r,d,15,(y-1)*m,y*m);await async function(){const t=new Uint8Array(12+u.Fr.n8),a=new DataView(t.buffer),e=new Uint8Array(u.Fr.n8);u.Fr.toRprLE(e,0,u.Fr.e(1));let s=0;function r(){const t=z.slice(s,s+4);s+=4;return new DataView(t.buffer).getUint32(0,!0)}const d=new xs;for(let t=0;t<p.nConstraints;t++){o&&t%1e4==0&&o.debug(`processing constraints: ${t}/${p.nConstraints}`);const a=r();for(let e=0;e<a;e++){const a=r(),e=s;s+=u.Fr.n8;const o=i,n=m*t,l=c,_=m*t;void 0===T[a]&&(T[a]=[]),T[a].push([o,n,e]),a<=w?(void 0===k[a]&&(k[a]=[]),k[a].push([l,_,e])):(void 0===Q[a-w-1]&&(Q[a-w-1]=[]),Q[a-w-1].push([l,_,e])),d.push([0,t,a,e])}const e=r();for(let a=0;a<e;a++){const a=r(),e=s;s+=u.Fr.n8;const o=i,c=m*t,_=n,g=L*t,f=l,p=m*t;void 0===M[a]&&(M[a]=[]),M[a].push([o,c,e]),void 0===U[a]&&(U[a]=[]),U[a].push([_,g,e]),a<=w?(void 0===k[a]&&(k[a]=[]),k[a].push([f,p,e])):(void 0===Q[a-w-1]&&(Q[a-w-1]=[]),Q[a-w-1].push([f,p,e])),d.push([1,t,a,e])}const _=r();for(let a=0;a<_;a++){const a=r(),e=s;s+=u.Fr.n8;const o=i,n=m*t;a<=w?(void 0===k[a]&&(k[a]=[]),k[a].push([o,n,e])):(void 0===Q[a-w-1]&&(Q[a-w-1]=[]),Q[a-w-1].push([o,n,e]))}}for(let t=0;t<=w;t++){const a=i,e=m*(p.nConstraints+t),o=c,n=m*(p.nConstraints+t);void 0===T[t]&&(T[t]=[]),T[t].push([a,e,-1]),void 0===k[t]&&(k[t]=[]),k[t].push([o,n,-1]),d.push([0,p.nConstraints+t,t,-1])}await Me(h,4);const _=new xn(d.length*(12+u.Fr.n8)+4),g=new Uint8Array(4);new DataView(g.buffer).setUint32(0,d.length,!0),_.set(g);let f=4;for(let t=0;t<d.length;t++)o&&t%1e5==0&&o.debug(`writing coeffs: ${t}/${d.length}`),b(d[t]);function b(o){let i;a.setUint32(0,o[0],!0),a.setUint32(4,o[1],!0),a.setUint32(8,o[2],!0),i=o[3]>=0?u.Fr.fromRprLE(z.slice(o[3],o[3]+u.Fr.n8),0):u.Fr.fromRprLE(e,0);const n=u.Fr.mul(i,B);u.Fr.toRprLE(t,12,n),_.set(t,f),f+=t.length}await h.write(_),await Ue(h)}(),await V(3,"G1",k,"IC"),await async function(){await Me(h,9);const t=new xn(y*m);if(b<u.Fr.s){let a=await $e(r,d,12,(2*y-1)*m,2*y*m);for(let e=0;e<y;e++){o&&e%1e4==0&&o.debug(`spliting buffer: ${e}/${y}`);const i=a.slice((2*e+1)*m,(2*e+1)*m+m);t.set(i,e*m)}}else{if(b!=u.Fr.s)throw o&&o.error("Circuit too big"),new Error("Circuit too big for this curve");{const a=d[12][0].p+(2**(b+1)-1)*m;await r.readToBuffer(t,0,y*m,a+y*m)}}await h.write(t),await Ue(h)}(),await async function(){W(y-1);for(let t=0;t<y-1;t+=16384){o&&o.debug(`HashingHPoints: ${t}/${y}`);const a=Math.min(y-1,16384);await H(t,a)}}(),await V(8,"G1",Q,"C"),await V(5,"G1",T,"A"),await V(6,"G1",M,"B1"),await V(7,"G2",U,"B2");const j=s.digest();return await Me(h,10),await h.write(j),await h.writeULE32(0),await Ue(h),o&&o.info(ql(j,"Circuit hash: ")),await h.close(),await g.close(),await r.close(),j;async function V(t,a,e,i){const n=u[a];W(e.length),await Me(h,t);let l=[],c=0;for(;c<e.length;){let t=0;for(;c<e.length&&t<u.tm.concurrency;){o&&o.debug(`Writing points start ${i}: ${c}/${e.length}`);let n=1,s=e[c]?e[c].length:0;for(;c+n<e.length&&s+(e[c+n]?e[c+n].length:0)<32768&&n<32768;)s+=e[c+n]?e[c+n].length:0,n++;const r=e.slice(c,c+n),d=c;l.push(K(a,r,o,i).then((t=>(o&&o.debug(`Writing points end ${i}: ${d}/${e.length}`),t)))),c+=n,t++}const r=await Promise.all(l);for(let t=0;t<r.length;t++){await h.write(r[t][0]);const a=await n.batchLEMtoU(r[t][0]);s.update(a)}l=[]}await Ue(h)}async function K(t,a,e,o){const i=u[t],n=2*i.F.n8,l=3*i.F.n8,c=2*i.F.n8;let s,r,d,_;if("G1"==t)s="g1m_timesScalarAffine",r="g1m_multiexpAffine",d="g1m_batchToAffine",_="g1m_zero";else{if("G2"!=t)throw new Error("Invalid group");s="g2m_timesScalarAffine",r="g2m_multiexpAffine",d="g2m_batchToAffine",_="g2m_zero"}let g,f,p=0;for(let t=0;t<a.length;t++)p+=a[t]?a[t].length:0;p>32768?(g=new xn(p*n),f=new xn(p*u.Fr.n8)):(g=new Uint8Array(p*n),f=new Uint8Array(p*u.Fr.n8));let h=0,m=0;const L=[R,N,D,$],b=new Uint8Array(u.Fr.n8);u.Fr.toRprLE(b,0,u.Fr.e(1));let w=0;for(let t=0;t<a.length;t++)if(a[t])for(let i=0;i<a[t].length;i++)e&&i&&i%1e4==0&&e.debug(`Configuring big array ${o}: ${i}/${a[t].length}`),g.set(L[a[t][i][0]].slice(a[t][i][1],a[t][i][1]+n),w*n),a[t][i][2]>=0?f.set(z.slice(a[t][i][2],a[t][i][2]+u.Fr.n8),w*u.Fr.n8):f.set(b,w*u.Fr.n8),w++;if(a.length>1){const t=[];t.push({cmd:"ALLOCSET",var:0,buff:g}),t.push({cmd:"ALLOCSET",var:1,buff:f}),t.push({cmd:"ALLOC",var:2,len:a.length*l}),h=0,m=0;let e=0;for(let o=0;o<a.length;o++)a[o]?(1==a[o].length?t.push({cmd:"CALL",fnName:s,params:[{var:0,offset:h},{var:1,offset:m},{val:u.Fr.n8},{var:2,offset:e}]}):t.push({cmd:"CALL",fnName:r,params:[{var:0,offset:h},{var:1,offset:m},{val:u.Fr.n8},{val:a[o].length},{var:2,offset:e}]}),h+=n*a[o].length,m+=u.Fr.n8*a[o].length,e+=l):(t.push({cmd:"CALL",fnName:_,params:[{var:2,offset:e}]}),e+=l);t.push({cmd:"CALL",fnName:d,params:[{var:2},{val:a.length},{var:2}]}),t.push({cmd:"GET",out:0,var:2,len:a.length*c});return await u.tm.queueAction(t)}{let t=await i.multiExpAffine(g,f,e,o);return t=[i.toAffine(t)],t}}async function H(t,a){const e=await r.read(a*m,d[2][0].p+(t+y)*m),o=await r.read(a*m,d[2][0].p+t*m),i=u.tm.concurrency,n=Math.floor(a/i),l=[];for(let t=0;t<i;t++){let c;if(c=t<i-1?n:a-t*n,0==c)continue;const s=e.slice(t*n*m,(t*n+c)*m),r=o.slice(t*n*m,(t*n+c)*m);l.push(Z(s,r))}const c=await Promise.all(l);for(let t=0;t<c.length;t++)s.update(c[t][0])}async function Z(t,a){const e=t.byteLength/m,o=3*u.G1.F.n8,i=[];i.push({cmd:"ALLOCSET",var:0,buff:t}),i.push({cmd:"ALLOCSET",var:1,buff:a}),i.push({cmd:"ALLOC",var:2,len:e*o});for(let t=0;t<e;t++)i.push({cmd:"CALL",fnName:"g1m_subAffine",params:[{var:0,offset:t*m},{var:1,offset:t*m},{var:2,offset:t*o}]});i.push({cmd:"CALL",fnName:"g1m_batchToAffine",params:[{var:2},{val:e},{var:2}]}),i.push({cmd:"CALL",fnName:"g1m_batchLEMtoU",params:[{var:2},{val:e},{var:2}]}),i.push({cmd:"GET",out:0,var:2,len:e*m});return await u.tm.queueAction(i)}function W(t){const a=new Uint8Array(4);new DataView(a.buffer,a.byteOffset,a.byteLength).setUint32(0,t,!1),s.update(a)}}const Is=Tl;async function Bs(t,a,e,o){let i;await Yn.exports.ready();const{fd:n,sections:l}=await ze(e,"zkey",2),c=await Lc(n,l,!1);if("groth16"!=c.protocol)throw new Error("zkey file is not groth16");const s=await Zn(c.q),r=2*s.G1.F.n8,d=await wc(n,s,l),u=Yn.exports(64);u.update(d.csHash);let _=s.G1.g;for(let t=0;t<d.contributions.length;t++){const a=d.contributions[t],e=zl(u);if(Cc(e,s,a.delta.g1_s),Cc(e,s,a.delta.g1_sx),!Gl(e.digest(),a.transcript))return console.log(`INVALID(${t}): Inconsistent transcript `),!1;const o=Rc(s,a.transcript);if(i=await Is(s,a.delta.g1_s,a.delta.g1_sx,o,a.delta.g2_spx),!0!==i)return console.log(`INVALID(${t}): public key G1 and G2 do not have the same ration `),!1;if(i=await Is(s,_,a.deltaAfter,o,a.delta.g2_spx),!0!==i)return console.log(`INVALID(${t}): deltaAfter does not fillow the public key `),!1;if(1==a.type){const e=await Rl(a.beaconHash,a.numIterationsExp),o=s.Fr.fromRng(e),i=s.G1.toAffine(s.G1.fromRng(e)),n=s.G1.toAffine(s.G1.timesFr(i,o));if(!0!==s.G1.eq(i,a.delta.g1_s))return console.log(`INVALID(${t}): Key of the beacon does not match. g1_s `),!1;if(!0!==s.G1.eq(n,a.delta.g1_sx))return console.log(`INVALID(${t}): Key of the beacon does not match. g1_sx `),!1}xc(u,s,a);const n=Yn.exports(64);xc(n,s,a),a.contributionHash=n.digest(),_=a.deltaAfter}const{fd:g,sections:f}=await ze(t,"zkey",2),p=await Lc(g,f,!1);if("groth16"!=p.protocol)throw new Error("zkeyinit file is not groth16");if(!Dn.eq(p.q,c.q)||!Dn.eq(p.r,c.r)||p.n8q!=c.n8q||p.n8r!=c.n8r)return o&&o.error("INVALID:  Different curves"),!1;if(p.nVars!=c.nVars||p.nPublic!=c.nPublic||p.domainSize!=c.domainSize)return o&&o.error("INVALID:  Different circuit parameters"),!1;if(!s.G1.eq(c.vk_alpha_1,p.vk_alpha_1))return o&&o.error("INVALID:  Invalid alpha1"),!1;if(!s.G1.eq(c.vk_beta_1,p.vk_beta_1))return o&&o.error("INVALID:  Invalid beta1"),!1;if(!s.G2.eq(c.vk_beta_2,p.vk_beta_2))return o&&o.error("INVALID:  Invalid beta2"),!1;if(!s.G2.eq(c.vk_gamma_2,p.vk_gamma_2))return o&&o.error("INVALID:  Invalid gamma2"),!1;if(!s.G1.eq(c.vk_delta_1,_))return o&&o.error("INVALID:  Invalid delta1"),!1;if(i=await Is(s,s.G1.g,_,s.G2.g,c.vk_delta_2),!0!==i)return o&&o.error("INVALID:  Invalid delta2"),!1;const h=await wc(g,s,f);if(!Gl(d.csHash,h.csHash))return o&&o.error("INVALID:  Circuit does not match"),!1;if(l[8][0].size!=r*(c.nVars-c.nPublic-1))return o&&o.error("INVALID:  Invalid L section size"),!1;if(l[9][0].size!=r*c.domainSize)return o&&o.error("INVALID:  Invalid H section size"),!1;let m;if(m=await je(n,l,g,f,3),!m)return o&&o.error("INVALID:  IC section is not identical"),!1;if(m=await je(n,l,g,f,4),!m)return o&&o.error("Coeffs section is not identical"),!1;if(m=await je(n,l,g,f,5),!m)return o&&o.error("A section is not identical"),!1;if(m=await je(n,l,g,f,6),!m)return o&&o.error("B1 section is not identical"),!1;if(m=await je(n,l,g,f,7),!m)return o&&o.error("B2 section is not identical"),!1;if(i=await async function(t,a,e,n,l,c,r,d,u){const _=1<<20,g=s[t],f=2*g.F.n8;await Qe(a,e,c),await Qe(n,l,c);let p=g.zero,h=g.zero;const m=e[c][0].size/f;for(let t=0;t<m;t+=_){o&&o.debug(`Same ratio check ${u}:  ${t}/${m}`);const e=Math.min(m-t,_),i=await a.read(e*f),l=await n.read(e*f),c=Ml(4*e),s=await g.multiExpAffine(i,c),r=await g.multiExpAffine(l,c);p=g.add(p,s),h=g.add(h,r)}return await ke(a),await ke(n),0==m||(i=await Is(s,p,h,r,d),!0===i)}("G1",g,f,n,l,8,c.vk_delta_2,p.vk_delta_2,"L section"),!0!==i)return o&&o.error("L section does not match"),!1;if(i=await async function(){const t=1<<20,e=s.G1,r=s.Fr,d=2*e.F.n8,{fd:u,sections:_}=await ze(a,"ptau",1);let g=new xn(c.domainSize*c.n8r);const f=new Array(8);for(let t=0;t<8;t++)f[t]=Ql(Ml(4),0);const h=new vo(f);for(let t=0;t<c.domainSize-1;t++){const a=r.fromRng(h);r.toRprLE(g,t*c.n8r,a)}r.toRprLE(g,(c.domainSize-1)*c.n8r,r.zero);let m,b=e.zero;for(let a=0;a<c.domainSize;a+=t){o&&o.debug(`H Verificaition(tau):  ${a}/${c.domainSize}`);const i=Math.min(c.domainSize-a,t),n=await u.read(d*i,_[2][0].p+c.domainSize*d+a*d),l=await u.read(d*i,_[2][0].p+a*d),s=await L(n,l),r=g.slice(a*c.n8r,(a+i)*c.n8r),f=await e.multiExpAffine(s,r);b=e.add(b,f)}if(g=await r.batchToMontgomery(g),c.power<r.s)m=r.neg(r.e(2));else{const t=2**r.s,a=r.exp(r.shift,t);m=r.sub(a,r.one)}const w=c.power<r.s?r.w[c.power+1]:r.shift;g=await r.batchApplyKey(g,m,w),g=await r.fft(g),g=await r.batchFromMontgomery(g),await Qe(n,l,9);let y=e.zero;for(let a=0;a<c.domainSize;a+=t){o&&o.debug(`H Verificaition(lagrange):  ${a}/${c.domainSize}`);const i=Math.min(c.domainSize-a,t),l=await n.read(d*i),s=g.slice(a*c.n8r,(a+i)*c.n8r),r=await e.multiExpAffine(l,s);y=e.add(y,r)}return await ke(n),i=await Is(s,b,y,c.vk_delta_2,p.vk_delta_2),!0===i}(),!0!==i)return o&&o.error("H section does not match"),!1;o&&o.info(ql(d.csHash,"Circuit Hash: ")),await n.close(),await g.close();for(let t=d.contributions.length-1;t>=0;t--){const a=d.contributions[t];o&&o.info("-------------------------"),o&&o.info(ql(a.contributionHash,`contribution #${t+1} ${a.name?a.name:""}:`)),1==a.type&&(o&&o.info(`Beacon generator: ${Dl(a.beaconHash)}`),o&&o.info(`Beacon iterations Exp: ${a.numIterationsExp}`))}return o&&o.info("-------------------------"),o&&o.info("ZKey Ok!"),!0;async function L(t,a){const e=2*s.G1.F.n8,o=t.byteLength/e,i=s.tm.concurrency,n=Math.floor(o/i),l=[];for(let e=0;e<i;e++){let c;if(c=e<i-1?n:o-e*n,0==c)continue;const s=t.slice(e*n*r,(e*n+c)*r),d=a.slice(e*n*r,(e*n+c)*r);l.push(b(s,d))}const c=await Promise.all(l),d=new Uint8Array(o*e);let u=0;for(let t=0;t<c.length;t++)d.set(c[t][0],u),u+=c[t][0].byteLength;return d}async function b(t,a){const e=2*s.G1.F.n8,o=3*s.G1.F.n8,i=t.byteLength/e,n=[];n.push({cmd:"ALLOCSET",var:0,buff:t}),n.push({cmd:"ALLOCSET",var:1,buff:a}),n.push({cmd:"ALLOC",var:2,len:i*o});for(let t=0;t<i;t++)n.push({cmd:"CALL",fnName:"g1m_subAffine",params:[{var:0,offset:t*e},{var:1,offset:t*e},{var:2,offset:t*o}]});n.push({cmd:"CALL",fnName:"g1m_batchToAffine",params:[{var:2},{val:i},{var:2}]}),n.push({cmd:"GET",out:0,var:2,len:i*e});return await s.tm.queueAction(n)}}const{stringifyBigInts:Es}=$n;async function vs(t,a){a&&a.info("EXPORT VERIFICATION KEY STARTED");const{fd:e,sections:o}=await ze(t,"zkey",2),i=await Lc(e,o);let n;if(a&&a.info("> Detected protocol: "+i.protocol),"groth16"===i.protocol)n=await async function(t,a,e){const o=await Zn(t.q),i=2*o.G1.F.n8,n=await o.pairing(t.vk_alpha_1,t.vk_beta_2);let l={protocol:t.protocol,curve:o.name,nPublic:t.nPublic,vk_alpha_1:o.G1.toObject(t.vk_alpha_1),vk_beta_2:o.G2.toObject(t.vk_beta_2),vk_gamma_2:o.G2.toObject(t.vk_gamma_2),vk_delta_2:o.G2.toObject(t.vk_delta_2),vk_alphabeta_12:o.Gt.toObject(n)};await Qe(a,e,3),l.IC=[];for(let e=0;e<=t.nPublic;e++){const t=await a.read(i),e=o.G1.toObject(t);l.IC.push(e)}return await ke(a),l=Es(l),l}(i,e,o);else if("plonk"===i.protocol)n=await async function(t){const a=await Zn(t.q);let e={protocol:t.protocol,curve:a.name,nPublic:t.nPublic,power:t.power,k1:a.Fr.toObject(t.k1),k2:a.Fr.toObject(t.k2),Qm:a.G1.toObject(t.Qm),Ql:a.G1.toObject(t.Ql),Qr:a.G1.toObject(t.Qr),Qo:a.G1.toObject(t.Qo),Qc:a.G1.toObject(t.Qc),S1:a.G1.toObject(t.S1),S2:a.G1.toObject(t.S2),S3:a.G1.toObject(t.S3),X_2:a.G2.toObject(t.X_2),w:a.Fr.toObject(a.Fr.w[t.power])};return e=Es(e),e}(i);else{if(!i.protocolId||i.protocolId!==Hl)throw new Error("zkey file protocol unrecognized");n=await async function(t,a){const e=await Zn(t.q);let o={protocol:t.protocol,curve:e.name,nPublic:t.nPublic,power:t.power,k1:e.Fr.toObject(t.k1),k2:e.Fr.toObject(t.k2),w:e.Fr.toObject(e.Fr.w[t.power]),w3:e.Fr.toObject(t.w3),w4:e.Fr.toObject(t.w4),w8:e.Fr.toObject(t.w8),wr:e.Fr.toObject(t.wr),X_2:e.G2.toObject(t.X_2),C0:e.G1.toObject(t.C0)};return Es(o)}(i)}return await e.close(),a&&a.info("EXPORT VERIFICATION KEY FINISHED"),n}var Ss={};const{unstringifyBigInts:Ps,stringifyBigInts:Os}=$n;async function qs(t,a,e){e&&e.info("FFLONK EXPORT SOLIDITY VERIFIER STARTED");const o=await Wn(t.curve);let i=r(t.w3);t.w3_2=d(o.Fr.square(i));let n=r(t.w4);t.w4_2=d(o.Fr.square(n)),t.w4_3=d(o.Fr.mul(o.Fr.square(n),n));let l=r(t.w8),c=o.Fr.one;for(let a=1;a<8;a++)c=o.Fr.mul(c,l),t["w8_"+a]=d(c);let s=a[t.protocol];return e&&e.info("FFLONK EXPORT SOLIDITY VERIFIER FINISHED"),Ss.render(s,t);function r(t){const a=Ps(t);return o.Fr.fromObject(a)}function d(t){const a=o.Fr.toObject(t);return Os(a)}}const{stringifyBigInts:Gs}=$n;async function zs(t,a){a&&a.info("EXPORT VERIFICATION KEY STARTED");const{fd:e,sections:o}=await ze(t,"zkey",2),i=await Lc(e,o);let n;if(a&&a.info("> Detected protocol: "+i.protocol),"plonk"!==i.protocol)throw new Error("zkey file protocol "+i.protocol+" not supported");return n=await async function(t){const a=await Zn(t.q);let e={protocol:t.protocol,curve:a.name,nPublic:t.nPublic,power:t.power,k1:a.Fr.toObject(t.k1),k2:a.Fr.toObject(t.k2),Qm:Ts(a.G1,t.Qm),Ql:Ts(a.G1,t.Ql),Qr:Ts(a.G1,t.Qr),Qo:Ts(a.G1,t.Qo),Qc:Ts(a.G1,t.Qc),S1:Ts(a.G1,t.S1),S2:Ts(a.G1,t.S2),S3:Ts(a.G1,t.S3),X_2:Ts(a.G2,t.X_2),w:a.Fr.toObject(a.Fr.w[t.power])};return e=Gs(e),e}(i),await e.close(),a&&a.info("EXPORT VERIFICATION KEY FINISHED"),n}function Ts(t,a){const e=new Uint8Array(t.F.n8);return t.toBlstCompressed(e,0,a),Buffer.from(e).toString("hex")}var Ms=Object.freeze({__proto__:null,newZKey:Fs,exportBellman:async function(t,a,e){const{fd:o,sections:i}=await ze(t,"zkey",2),n=await Lc(o,i);if("groth16"!=n.protocol)throw new Error("zkey file is not groth16");const l=await Zn(n.q),c=2*l.G1.F.n8,s=2*l.G2.F.n8,r=await wc(o,l,i),d=await qe(a);let u;await L(n.vk_alpha_1),await L(n.vk_beta_1),await b(n.vk_beta_2),await b(n.vk_gamma_2),await L(n.vk_delta_1),await b(n.vk_delta_2),u=await $e(o,i,3),u=await l.G1.batchLEMtoU(u),await w("G1",u);const _=await $e(o,i,9);let g,f,p,h,m;g=await l.G1.fft(_,"affine","jacobian",e),g=await l.G1.batchApplyKey(g,l.Fr.neg(l.Fr.e(2)),l.Fr.w[n.power+1],"jacobian","affine",e),g=g.slice(0,g.byteLength-c),g=await l.G1.batchLEMtoU(g),await w("G1",g),f=await $e(o,i,8),f=await l.G1.batchLEMtoU(f),await w("G1",f),p=await $e(o,i,5),p=await l.G1.batchLEMtoU(p),await w("G1",p),h=await $e(o,i,6),h=await l.G1.batchLEMtoU(h),await w("G1",h),m=await $e(o,i,7),m=await l.G2.batchLEMtoU(m),await w("G2",m),await d.write(r.csHash),await async function(t){const a=new Uint8Array(4);new DataView(a.buffer,a.byteOffset,a.byteLength).setUint32(0,t,!1),await d.write(a)}(r.contributions.length);for(let t=0;t<r.contributions.length;t++){const a=r.contributions[t];await L(a.deltaAfter),await L(a.delta.g1_s),await L(a.delta.g1_sx),await b(a.delta.g2_spx),await d.write(a.transcript)}async function L(t){const a=new Uint8Array(c);l.G1.toRprUncompressed(a,0,t),await d.write(a)}async function b(t){const a=new Uint8Array(s);l.G2.toRprUncompressed(a,0,t),await d.write(a)}async function w(t,a){let e;e="G1"==t?c:s;const o=new Uint8Array(4);new DataView(o.buffer,o.byteOffset,o.byteLength).setUint32(0,a.byteLength/e,!1),await d.write(o),await d.write(a)}await o.close(),await d.close()},importBellman:async function(t,a,e,o,i){const{fd:n,sections:l}=await ze(t,"zkey",2),c=await Lc(n,l,!1);if("groth16"!=c.protocol)throw new Error("zkey file is not groth16");const s=await Zn(c.q),r=2*s.G1.F.n8,d=2*s.G2.F.n8,u=await wc(n,s,l),_={},g=await Ge(a);g.pos=3*r+3*d+8+r*c.nVars+4+r*(c.domainSize-1)+4+r*c.nVars+4+r*c.nVars+4+d*c.nVars,_.csHash=await g.read(64);const f=await g.readUBE32();_.contributions=[];for(let t=0;t<f;t++){const a={delta:{}};a.deltaAfter=await A(g),a.delta.g1_s=await A(g),a.delta.g1_sx=await A(g),a.delta.g2_spx=await C(g),a.transcript=await g.read(64),t<u.contributions.length&&(a.type=u.contributions[t].type,1==a.type&&(a.beaconHash=u.contributions[t].beaconHash,a.numIterationsExp=u.contributions[t].numIterationsExp),u.contributions[t].name&&(a.name=u.contributions[t].name)),_.contributions.push(a)}if(!Gl(_.csHash,u.csHash))return i&&i.error("Hash of the original circuit does not match with the MPC one"),!1;if(u.contributions.length>_.contributions.length)return i&&i.error("The impoerted file does not include new contributions"),!1;for(let t=0;t<u.contributions.length;t++)if(!x(u.contributions[t],_.contributions[t]))return i&&i.error(`Previos contribution ${t} does not match`),!1;if(o)for(let t=u.contributions.length;t<_.contributions.length;t++)_.contributions[t].name=o;const p=await Te(e,"zkey",1,10);if(g.pos=0,g.pos+=r,g.pos+=r,g.pos+=d,g.pos+=d,c.vk_delta_1=await A(g),c.vk_delta_2=await C(g),await gc(p,c),await g.readUBE32()!=c.nPublic+1)return i&&i.error("Invalid number of points in IC"),await p.discard(),!1;if(g.pos+=r*(c.nPublic+1),await De(n,l,p,3),await De(n,l,p,4),await g.readUBE32()!=c.domainSize-1)return i&&i.error("Invalid number of points in H"),await p.discard(),!1;let h;const m=await g.read(r*(c.domainSize-1)),L=await s.G1.batchUtoLEM(m);h=new Uint8Array(c.domainSize*r),h.set(L),s.G1.toRprLEM(h,r*(c.domainSize-1),s.G1.zeroAffine);const b=s.Fr.neg(s.Fr.inv(s.Fr.e(2))),w=s.Fr.inv(s.Fr.w[c.power+1]);if(h=await s.G1.batchApplyKey(h,b,w,"affine","jacobian",i),h=await s.G1.ifft(h,"jacobian","affine",i),await Me(p,9),await p.write(h),await Ue(p),await g.readUBE32()!=c.nVars-c.nPublic-1)return i&&i.error("Invalid number of points in L"),await p.discard(),!1;let y;return y=await g.read(r*(c.nVars-c.nPublic-1)),y=await s.G1.batchUtoLEM(y),await Me(p,8),await p.write(y),await Ue(p),await g.readUBE32()!=c.nVars?(i&&i.error("Invalid number of points in A"),await p.discard(),!1):(g.pos+=r*c.nVars,await De(n,l,p,5),await g.readUBE32()!=c.nVars?(i&&i.error("Invalid number of points in B1"),await p.discard(),!1):(g.pos+=r*c.nVars,await De(n,l,p,6),await g.readUBE32()!=c.nVars?(i&&i.error("Invalid number of points in B2"),await p.discard(),!1):(g.pos+=d*c.nVars,await De(n,l,p,7),await Ac(p,s,_),await g.close(),await p.close(),await n.close(),!0)));async function A(t){const a=await t.read(2*s.G1.F.n8);return s.G1.fromRprUncompressed(a,0)}async function C(t){const a=await t.read(2*s.G2.F.n8);return s.G2.fromRprUncompressed(a,0)}function x(t,a){return!!s.G1.eq(t.deltaAfter,a.deltaAfter)&&(!!s.G1.eq(t.delta.g1_s,a.delta.g1_s)&&(!!s.G1.eq(t.delta.g1_sx,a.delta.g1_sx)&&(!!s.G2.eq(t.delta.g2_spx,a.delta.g2_spx)&&!!Gl(t.transcript,a.transcript))))}},verifyFromR1cs:async function(t,a,e,o){const i={type:"bigMem"};return await Fs(t,a,i,o),await Bs(i,a,e,o)},verifyFromInit:Bs,contribute:async function(t,a,e,o,i){await Yn.exports.ready();const{fd:n,sections:l}=await ze(t,"zkey",2),c=await Lc(n,l);if("groth16"!=c.protocol)throw new Error("zkey file is not groth16");const s=await Zn(c.q),r=await wc(n,s,l),d=await Te(a,"zkey",1,10),u=await kl(o),_=Yn.exports(64);_.update(r.csHash);for(let t=0;t<r.contributions.length;t++)xc(_,s,r.contributions[t]);const g={delta:{}};g.delta.prvKey=s.Fr.fromRng(u),g.delta.g1_s=s.G1.toAffine(s.G1.fromRng(u)),g.delta.g1_sx=s.G1.toAffine(s.G1.timesFr(g.delta.g1_s,g.delta.prvKey)),Cc(_,s,g.delta.g1_s),Cc(_,s,g.delta.g1_sx),g.transcript=_.digest(),g.delta.g2_sp=Rc(s,g.transcript),g.delta.g2_spx=s.G2.toAffine(s.G2.timesFr(g.delta.g2_sp,g.delta.prvKey)),c.vk_delta_1=s.G1.timesFr(c.vk_delta_1,g.delta.prvKey),c.vk_delta_2=s.G2.timesFr(c.vk_delta_2,g.delta.prvKey),g.deltaAfter=c.vk_delta_1,g.type=0,e&&(g.name=e),r.contributions.push(g),await gc(d,c),await De(n,l,d,3),await De(n,l,d,4),await De(n,l,d,5),await De(n,l,d,6),await De(n,l,d,7);const f=s.Fr.inv(g.delta.prvKey);await os(n,l,d,8,s,"G1",f,s.Fr.e(1),"L Section",i),await os(n,l,d,9,s,"G1",f,s.Fr.e(1),"H Section",i),await Ac(d,s,r),await n.close(),await d.close();const p=Yn.exports(64);xc(p,s,g);const h=p.digest();return i&&i.info(ql(r.csHash,"Circuit Hash: ")),i&&i.info(ql(h,"Contribution Hash: ")),h},beacon:async function(t,a,e,o,i,n){await Yn.exports.ready();const l=Nl(o);if(0==l.byteLength||2*l.byteLength!=o.length)return n&&n.error("Invalid Beacon Hash. (It must be a valid hexadecimal sequence)"),!1;if(l.length>=256)return n&&n.error("Maximum lenght of beacon hash is 255 bytes"),!1;if((i=parseInt(i))<10||i>63)return n&&n.error("Invalid numIterationsExp. (Must be between 10 and 63)"),!1;const{fd:c,sections:s}=await ze(t,"zkey",2),r=await Lc(c,s);if("groth16"!=r.protocol)throw new Error("zkey file is not groth16");const d=await Zn(r.q),u=await wc(c,d,s),_=await Te(a,"zkey",1,10),g=await Rl(l,i),f=Yn.exports(64);f.update(u.csHash);for(let t=0;t<u.contributions.length;t++)xc(f,d,u.contributions[t]);const p={delta:{}};p.delta.prvKey=d.Fr.fromRng(g),p.delta.g1_s=d.G1.toAffine(d.G1.fromRng(g)),p.delta.g1_sx=d.G1.toAffine(d.G1.timesFr(p.delta.g1_s,p.delta.prvKey)),Cc(f,d,p.delta.g1_s),Cc(f,d,p.delta.g1_sx),p.transcript=f.digest(),p.delta.g2_sp=Rc(d,p.transcript),p.delta.g2_spx=d.G2.toAffine(d.G2.timesFr(p.delta.g2_sp,p.delta.prvKey)),r.vk_delta_1=d.G1.timesFr(r.vk_delta_1,p.delta.prvKey),r.vk_delta_2=d.G2.timesFr(r.vk_delta_2,p.delta.prvKey),p.deltaAfter=r.vk_delta_1,p.type=1,p.numIterationsExp=i,p.beaconHash=l,e&&(p.name=e),u.contributions.push(p),await gc(_,r),await De(c,s,_,3),await De(c,s,_,4),await De(c,s,_,5),await De(c,s,_,6),await De(c,s,_,7);const h=d.Fr.inv(p.delta.prvKey);await os(c,s,_,8,d,"G1",h,d.Fr.e(1),"L Section",n),await os(c,s,_,9,d,"G1",h,d.Fr.e(1),"H Section",n),await Ac(_,d,u),await c.close(),await _.close();const m=Yn.exports(64);xc(m,d,p);const L=m.digest();return n&&n.info(ql(L,"Contribution Hash: ")),L},exportJson:async function(t){const a=await async function(t,a){const{fd:e,sections:o}=await ze(t,"zkey",1),i=await Lc(e,o,a),n=new To(i.r),l=Dn.mod(Dn.shl(1,8*i.n8r),i.r),c=n.inv(l),s=n.mul(c,c);let r=await Zn(i.q);await Qe(e,o,3),i.IC=[];for(let t=0;t<=i.nPublic;t++){const t=await hc(e,r,a);i.IC.push(t)}await ke(e),await Qe(e,o,4);const d=await e.readULE32();i.ccoefs=[];for(let t=0;t<d;t++){const t=await e.readULE32(),a=await e.readULE32(),o=await e.readULE32(),n=await u();i.ccoefs.push({matrix:t,constraint:a,signal:o,value:n})}await ke(e),await Qe(e,o,5),i.A=[];for(let t=0;t<i.nVars;t++){const o=await hc(e,r,a);i.A[t]=o}await ke(e),await Qe(e,o,6),i.B1=[];for(let t=0;t<i.nVars;t++){const o=await hc(e,r,a);i.B1[t]=o}await ke(e),await Qe(e,o,7),i.B2=[];for(let t=0;t<i.nVars;t++){const o=await mc(e,r,a);i.B2[t]=o}await ke(e),await Qe(e,o,8),i.C=[];for(let t=i.nPublic+1;t<i.nVars;t++){const o=await hc(e,r,a);i.C[t]=o}await ke(e),await Qe(e,o,9),i.hExps=[];for(let t=0;t<i.domainSize;t++){const t=await hc(e,r,a);i.hExps.push(t)}return await ke(e),await e.close(),i;async function u(){const t=await Ne(e,i.n8r);return n.mul(t,s)}}(t,!0);return delete a.curve,delete a.F,$n.stringifyBigInts(a)},bellmanContribute:async function(t,a,e,o,i){await Yn.exports.ready();const n=await kl(o),l=t.Fr.fromRng(n),c=t.Fr.inv(l),s=2*t.G1.F.n8,r=2*t.G2.F.n8,d=await Ge(a),u=await qe(e);await E(s),await E(s),await E(r),await E(r);const _=await v(),g=t.G1.timesFr(_,l);await P(g);const f=await S(),p=t.G2.timesFr(f,l);await O(p);const h=await d.readUBE32();await u.writeUBE32(h),await E(h*s);const m=await d.readUBE32();await u.writeUBE32(m),await is(d,u,null,t,"G1",m,c,t.Fr.e(1),"UNCOMPRESSED","H",i);const L=await d.readUBE32();await u.writeUBE32(L),await is(d,u,null,t,"G1",L,c,t.Fr.e(1),"UNCOMPRESSED","L",i);const b=await d.readUBE32();await u.writeUBE32(b),await E(b*s);const w=await d.readUBE32();await u.writeUBE32(w),await E(w*s);const y=await d.readUBE32();await u.writeUBE32(y),await E(y*r);const A=Yn.exports(64),C={};C.csHash=await d.read(64),A.update(C.csHash);const x=await d.readUBE32();C.contributions=[];for(let a=0;a<x;a++){const a={delta:{}};a.deltaAfter=await v(),a.delta.g1_s=await v(),a.delta.g1_sx=await v(),a.delta.g2_spx=await S(),a.transcript=await d.read(64),C.contributions.push(a),xc(A,t,a)}const F={delta:{}};F.delta.prvKey=l,F.delta.g1_s=t.G1.toAffine(t.G1.fromRng(n)),F.delta.g1_sx=t.G1.toAffine(t.G1.timesFr(F.delta.g1_s,l)),Cc(A,t,F.delta.g1_s),Cc(A,t,F.delta.g1_sx),F.transcript=A.digest(),F.delta.g2_sp=Rc(t,F.transcript),F.delta.g2_spx=t.G2.toAffine(t.G2.timesFr(F.delta.g2_sp,l)),F.deltaAfter=g,F.type=0,C.contributions.push(F),await u.write(C.csHash),await u.writeUBE32(C.contributions.length);for(let t=0;t<C.contributions.length;t++){const a=C.contributions[t];await P(a.deltaAfter),await P(a.delta.g1_s),await P(a.delta.g1_sx),await O(a.delta.g2_spx),await u.write(a.transcript)}const I=Yn.exports(64);xc(I,t,F);const B=I.digest();return i&&i.info(ql(B,"Contribution Hash: ")),await u.close(),await d.close(),B;async function E(t){const a=2*d.pageSize;for(let e=0;e<t;e+=a){const o=Math.min(t-e,a),i=await d.read(o);await u.write(i)}}async function v(){const a=await d.read(2*t.G1.F.n8);return t.G1.fromRprUncompressed(a,0)}async function S(){const a=await d.read(2*t.G2.F.n8);return t.G2.fromRprUncompressed(a,0)}async function P(a){const e=new Uint8Array(s);t.G1.toRprUncompressed(e,0,a),await u.write(e)}async function O(a){const e=new Uint8Array(r);t.G2.toRprUncompressed(e,0,a),await u.write(e)}},exportVerificationKey:vs,exportSolidityVerifier:async function(t,a,e){const o=await vs(t,e);if("fflonk"===o.protocol)return qs(o,a,e);let i=a[o.protocol];return Ss.render(i,o)},exportFuncVerifier:async function(t,a,e){const o=await zs(t,e);let i=a[o.protocol];return Ss.render(i,o)}});class Us{constructor(t,a){this.curve=t,this.logger=a,this.resetProof()}resetProof(){this.polynomials={},this.evaluations={}}addPolynomial(t,a){t in this.polynomials&&this.logger.warn(`proof: polynomial.${t} already exist in proof`),this.polynomials[t]=a}getPolynomial(t){return t in this.polynomials||this.logger.warn(`proof: polynomial ${t} does not exist in proof`),this.polynomials[t]}addEvaluation(t,a){t in this.evaluations&&this.logger.warn(`proof: evaluations.${t} already exist in proof`),this.evaluations[t]=a}getEvaluation(t){return t in this.evaluations||this.logger.warn(`proof: evaluation ${t} does not exist in proof`),this.evaluations[t]}toObjectProof(t=!0){let a=t?{polynomials:{},evaluations:{}}:{};return Object.keys(this.polynomials).forEach((e=>{const o=this.curve.G1.toObject(this.polynomials[e]);t?a.polynomials[e]=o:a[e]=o})),Object.keys(this.evaluations).forEach((e=>{const o=this.curve.Fr.toObject(this.evaluations[e]);t?a.evaluations[e]=o:a[e]=o})),a}fromObjectProof(t){this.resetProof(),Object.keys(t.polynomials).forEach((a=>{this.polynomials[a]=this.curve.G1.fromObject(t.polynomials[a])})),Object.keys(t.evaluations).forEach((a=>{this.evaluations[a]=this.curve.Fr.fromObject(t.evaluations[a])}))}}class Qs{static getZ1(t){return[t.zero,t.add(t.e(-1),t.w[2]),t.e(-2),t.sub(t.e(-1),t.w[2])]}static getZ2(t){return[t.zero,t.add(t.zero,t.mul(t.e(-2),t.w[2])),t.e(4),t.sub(t.zero,t.mul(t.e(-2),t.w[2]))]}static getZ3(t){return[t.zero,t.add(t.e(2),t.mul(t.e(2),t.w[2])),t.e(-8),t.sub(t.e(2),t.mul(t.e(2),t.w[2]))]}static mul2(t,a,e,o,i,n){const l=this.getZ1(n);let c,s;const r=n.mul(t,a),d=n.mul(t,o),u=n.mul(e,a);c=r;let _=n.mul(e,o);return s=n.add(d,u),i&&(s=n.add(s,n.mul(l[i],_))),[c,s]}static mul3(t,a,e,o,i,n,l,c){const s=this.getZ1(c),r=this.getZ2(c);let d,u;const _=c.mul(t,a),g=c.mul(t,i),f=c.mul(o,a),p=c.mul(o,i);d=c.mul(_,e);let h=c.mul(f,e);h=c.add(h,c.mul(g,e)),h=c.add(h,c.mul(_,n));let m=c.mul(p,e);if(m=c.add(m,c.mul(g,n)),m=c.add(m,c.mul(f,n)),u=h,l){const t=c.mul(p,n);u=c.add(u,c.mul(s[l],m)),u=c.add(u,c.mul(r[l],t))}return[d,u]}static mul4(t,a,e,o,i,n,l,c,s,r){const d=this.getZ1(r),u=this.getZ2(r),_=this.getZ3(r);let g,f;const p=r.mul(t,a),h=r.mul(t,n),m=r.mul(i,a),L=r.mul(i,n),b=r.mul(e,o),w=r.mul(e,c),y=r.mul(l,o),A=r.mul(l,c);g=r.mul(p,b);let C=r.mul(m,b);C=r.add(C,r.mul(h,b)),C=r.add(C,r.mul(p,y)),C=r.add(C,r.mul(p,w));let x=r.mul(L,b);x=r.add(x,r.mul(m,y)),x=r.add(x,r.mul(m,w)),x=r.add(x,r.mul(h,y)),x=r.add(x,r.mul(h,w)),x=r.add(x,r.mul(p,A));let F=r.mul(h,A);F=r.add(F,r.mul(m,A)),F=r.add(F,r.mul(L,w)),F=r.add(F,r.mul(L,y));let I=r.mul(L,A);return f=C,s&&(f=r.add(f,r.mul(d[s],x)),f=r.add(f,r.mul(u[s],F)),f=r.add(f,r.mul(_[s],I))),[g,f]}}const ks=3,Rs=4,Ns=5,Ds=6,$s=7,js=8,Vs=9,Ks=10,Hs=11,Zs=12,Ws=13,Ys=14;class Js{constructor(t,a,e){this.coef=t,this.curve=a,this.Fr=a.Fr,this.G1=a.G1,this.logger=e}static async fromEvaluations(t,a,e){let o=await a.Fr.ifft(t);return new Js(o,a,e)}static fromCoefficientsArray(t,a,e){const o=a.Fr;let i=t.length>32768?new xn(t.length*o.n8):new Uint8Array(t.length*o.n8);for(let a=0;a<t.length;a++)i.set(t[a],a*o.n8);return new Js(i,a,e)}static fromPolynomial(t,a,e){let o=t.length(),i=a.Fr,n=o>32768?new xn(o*i.n8):new Uint8Array(o*i.n8);return n.set(t.coef.slice(),0),new Js(n,a,e)}isEqual(t){const a=this.degree();if(a!==t.degree())return!1;for(let e=0;e<a+1;e++)if(!this.Fr.eq(this.getCoef(e),t.getCoef(e)))return!1;return!0}blindCoefficients(t){t=t||[];const a=this.length()+t.length>32768?new xn((this.length()+t.length)*this.Fr.n8):new Uint8Array((this.length()+t.length)*this.Fr.n8);a.set(this.coef,0);for(let e=0;e<t.length;e++)a.set(this.Fr.add(a.slice((this.length()+e)*this.Fr.n8,(this.length()+e+1)*this.Fr.n8),t[e]),(this.length()+e)*this.Fr.n8),a.set(this.Fr.sub(a.slice(e*this.Fr.n8,(e+1)*this.Fr.n8),t[e]),e*this.Fr.n8);this.coef=a}getCoef(t){const a=t*this.Fr.n8;return a+this.Fr.n8>this.coef.byteLength?this.Fr.zero:this.coef.slice(a,a+this.Fr.n8)}setCoef(t,a){if(t>this.length()-1)throw new Error("Coef index is not available");this.coef.set(a,t*this.Fr.n8)}static async to4T(t,a,e,o){e=e||[];let i=await o.ifft(t);const n=4*a>32768?new xn(4*a*o.n8):new Uint8Array(4*a*o.n8);n.set(i,0);const l=await o.fft(n);if(0===e.length)return[i,l];const c=a+e.length>32768?new xn((a+e.length)*o.n8):new Uint8Array((a+e.length)*o.n8);c.set(i,0);for(let t=0;t<e.length;t++)c.set(o.add(c.slice((a+t)*o.n8,(a+t+1)*o.n8),e[t]),(a+t)*o.n8),c.set(o.sub(c.slice(t*o.n8,(t+1)*o.n8),e[t]),t*o.n8);return[c,l]}length(){let t=this.coef.byteLength/this.Fr.n8;if(t!==Math.floor(this.coef.byteLength/this.Fr.n8))throw new Error("Polynomial coefficients buffer has incorrect size");return 0===t&&this.logger&&this.logger.warn("Polynomial has length zero"),t}degree(){for(let t=this.length()-1;t>0;t--){const a=t*this.Fr.n8;if(!this.Fr.eq(this.Fr.zero,this.coef.slice(a,a+this.Fr.n8)))return t}return 0}evaluate(t){let a=this.Fr.zero;for(let e=this.degree()+1;e>0;e--){let o=e*this.Fr.n8;const i=this.coef.slice(o-this.Fr.n8,o);a=this.Fr.add(i,this.Fr.mul(a,t))}return a}fastEvaluate(t){const a=this.Fr;let e=this.degree()+1,o=parseInt(e/3),i=e-3*o,n=[],l=[];l[0]=a.one;for(let e=0;e<3;e++){n[e]=a.zero;for(let c=2===e?o+i:o;c>0;c--)n[e]=a.add(this.getCoef(e*o+c-1),a.mul(n[e],t)),0===e&&(l[0]=a.mul(l[0],t))}for(let t=1;t<3;t++)n[0]=a.add(n[0],a.mul(l[t-1],n[t])),l[t]=a.mul(l[t-1],l[0]);return n[0]}add(t,a){let e=!1;t.length()>this.length()&&(e=!0);const o=this.length(),i=t.length();for(let n=0;n<Math.max(o,i);n++){const l=n*this.Fr.n8,c=n<o?this.coef.slice(l,l+this.Fr.n8):this.Fr.zero;let s=n<i?t.coef.slice(l,l+this.Fr.n8):this.Fr.zero;void 0!==a&&(s=this.Fr.mul(s,a)),e?t.coef.set(this.Fr.add(c,s),l):this.coef.set(this.Fr.add(c,s),l)}e&&(delete this.coef,this.coef=t.coef)}sub(t,a){let e=!1;t.length()>this.length()&&(e=!0);const o=this.length(),i=t.length();for(let n=0;n<Math.max(o,i);n++){const l=n*this.Fr.n8,c=n<o?this.coef.slice(l,l+this.Fr.n8):this.Fr.zero;let s=n<i?t.coef.slice(l,l+this.Fr.n8):this.Fr.zero;void 0!==a&&(s=this.Fr.mul(s,a)),e?t.coef.set(this.Fr.sub(c,s),l):this.coef.set(this.Fr.sub(c,s),l)}e&&(delete this.coef,this.coef=t.coef)}mulScalar(t){for(let a=0;a<this.length();a++){const e=a*this.Fr.n8;this.coef.set(this.Fr.mul(this.coef.slice(e,e+this.Fr.n8),t),e)}}addScalar(t){const a=0===this.length()?this.Fr.zero:this.coef.slice(0,this.Fr.n8);this.coef.set(this.Fr.add(a,t),0)}subScalar(t){const a=0===this.length()?this.Fr.zero:this.coef.slice(0,this.Fr.n8);this.coef.set(this.Fr.sub(a,t),0)}byXSubValue(t){const a=this.Fr,e=!a.eq(a.zero,this.getCoef(this.length()-1))?this.length()+1:this.length(),o=e>32768?new xn(e*a.n8):new Uint8Array(e*a.n8);let i=new Js(o,this.curve,this.logger);i.coef.set(this.coef.slice(0,(e-1)*a.n8),32),this.mulScalar(a.neg(t)),i.add(this),this.coef=i.coef}byXNSubValue(t,a){const e=this.Fr,o=!(this.length()-t-1>=this.degree())?this.length()+t:this.length(),i=o>32768?new xn(o*e.n8):new Uint8Array(o*e.n8);let n=new Js(i,this.curve,this.logger);n.coef.set(this.coef.slice(0,32*(this.degree()+1)),32*t),this.mulScalar(a),n.add(this),this.coef=n.coef}divBy(t){const a=this.Fr,e=this.degree(),o=t.degree();let i=new Js(this.coef,this.curve,this.logger);this.coef=this.length()>32768?new xn(this.length()*a.n8):new Uint8Array(this.length()*a.n8);for(let n=e-o;n>=0;n--){this.setCoef(n,a.div(i.getCoef(n+o),t.getCoef(o)));for(let e=0;e<=o;e++)i.setCoef(n+e,a.sub(i.getCoef(n+e),a.mul(this.getCoef(n),t.getCoef(e))))}return i}divByMonic(t,a){const e=this.Fr;let o=this.degree(),i=this.length()>32768?new xn(this.length()*e.n8):new Uint8Array(this.length()*e.n8),n=new Js(i,this.curve,this.logger),l=[];for(let a=0;a<t;a++)n.setCoef(o-a-t,this.getCoef(o-a)),l[a]=this.getCoef(o-a);let c=t;for(let i=0;i<c;i++)for(let s=o-2*t-i;s>=0&&!(s<0);s-=c){let o=i;l[o]=e.add(this.getCoef(s+t),e.mul(l[o],a)),n.setCoef(s,l[o])}this.coef=n.coef}divByVanishing(t,a){if(this.degree()<t)throw new Error("divByVanishing polynomial divisor must be of degree lower than the dividend polynomial");const e=this.Fr;let o=new Js(this.coef,this.curve,this.logger);this.coef=this.length()>32768?new xn(this.length()*e.n8):new Uint8Array(this.length()*e.n8);for(let i=this.length()-1;i>=t;i--){let n=o.getCoef(i);e.eq(e.zero,n)||(o.setCoef(i,e.zero),o.setCoef(i-t,e.add(o.getCoef(i-t),e.mul(a,n))),this.setCoef(i-t,e.add(this.getCoef(i-t),n)))}return o}divByVanishing2(t,a){if(this.degree()<t)throw new Error("divByVanishing polynomial divisor must be of degree lower than the dividend polynomial");const e=this.Fr;let o=new Js(this.coef,this.curve,this.logger);this.coef=this.length()>32768?new xn(this.length()*e.n8):new Uint8Array(this.length()*e.n8);let i=this.length()-t,n=Math.floor(i/3),l=i-2*n;console.log(i),console.log(n+"  "+l);for(let i=0;i<3;i++){console.log("> Thread "+i);for(let c=0===i?l:n;c>0;c--){let s=c-1;0!==i&&(s+=(i-1)*n+l);let r=s+t,d=o.getCoef(r);e.eq(e.zero,d)||(o.setCoef(r,e.zero),o.setCoef(s,e.add(o.getCoef(s),e.mul(a,d))),this.setCoef(s,e.add(this.getCoef(s),d)),console.log(s+" <-- "+r))}}return this.print(),o}fastDivByVanishing(t){const a=this.Fr;for(let e=0;e<t.length;e++){let o=t[e][0],i=t[e][1];if(this.degree()<o)throw new Error("divByVanishing polynomial divisor must be of degree lower than the dividend polynomial");let n=5,l=this.length()-o,c=Math.floor(l/n/o),s=c*o,r=l-n*s,d=new Js(this.length()>32768?new xn(this.length()*a.n8):new Uint8Array(this.length()*a.n8),this.curve,this.logger),u=this.coef;this.coef=d.coef,d.coef=u;for(let t=0;t<n;t++){let e=(t+1)*s+r;for(let t=0;t<o;t++)this.setCoef(e+t-o,d.getCoef(e+t));for(let t=0;t<s-o;t++){let n=e-t-1,l=a.add(d.getCoef(n),a.mul(i,this.getCoef(n)));this.setCoef(n-o,l)}}let _=r,g=r;for(let t=0;t<o&&g;t++)this.setCoef(_-t-1,d.getCoef(_+o-t-1)),g--;for(let t=0;t<g;t++){let e=_-t-1,n=a.add(d.getCoef(e),a.mul(i,this.getCoef(e)));this.setCoef(e-o,n)}let f=[],p=a.one;for(let t=0;t<c;t++)p=a.mul(p,i);let h=a.one;for(let t=n;t>0;t--){let e=t-1,i=e*s+r;f[e]=[];for(let l=0;l<o;l++)f[e][l]=this.getCoef(i+l),t!==n&&(f[e][l]=a.add(f[e][l],a.mul(p,f[e+1][l])));h=a.mul(h,p)}for(let t=0;t<n;t++){let e=t*s+r,n=i,l=o-1,c=0===t?r:s;for(let s=0;s<c;s++){let c=e-s-1,r=a.add(this.getCoef(c),a.mul(n,f[t][l]));this.setCoef(c,r),0===l?(l=o-1,n=a.mul(n,i)):l--}}}}divByXSubValue(t){const a=this.length()>32768?new xn(this.length()*this.Fr.n8):new Uint8Array(this.length()*this.Fr.n8);a.set(this.Fr.zero,(this.length()-1)*this.Fr.n8),a.set(this.coef.slice((this.length()-1)*this.Fr.n8,this.length()*this.Fr.n8),(this.length()-2)*this.Fr.n8);for(let e=this.length()-3;e>=0;e--){let o=e*this.Fr.n8;a.set(this.Fr.add(this.coef.slice(o+this.Fr.n8,o+2*this.Fr.n8),this.Fr.mul(t,a.slice(o+this.Fr.n8,o+2*this.Fr.n8))),e*this.Fr.n8)}if(!this.Fr.eq(this.coef.slice(0,this.Fr.n8),this.Fr.mul(this.Fr.neg(t),a.slice(0,this.Fr.n8))))throw new Error("Polynomial does not divide");this.coef=a}divZh(t,a=4){for(let a=0;a<t;a++){const t=a*this.Fr.n8;this.coef.set(this.Fr.neg(this.coef.slice(t,t+this.Fr.n8)),t)}const e=this.coef.byteLength/this.Fr.n8;for(let o=t;o<e;o++){const e=o*this.Fr.n8,i=this.Fr.sub(this.coef.slice((o-t)*this.Fr.n8,(o-t)*this.Fr.n8+this.Fr.n8),this.coef.slice(e,e+this.Fr.n8));if(this.coef.set(i,e),o>t*(a-1)-a&&!this.Fr.isZero(i))throw new Error("Polynomial is not divisible")}return this}divByZerofier(t,a){let e=this.Fr;const o=e.inv(a),i=e.neg(o);let n=e.eq(e.one,i),l=e.eq(e.negone,i);if(!n)for(let a=0;a<t;a++){const t=a*this.Fr.n8;let o;o=l?e.neg(this.coef.slice(t,t+this.Fr.n8)):e.mul(i,this.coef.slice(t,t+this.Fr.n8)),this.coef.set(o,t)}n=e.eq(e.one,o),l=e.eq(e.negone,o);for(let a=t;a<this.length();a++){const i=a*this.Fr.n8,c=(a-t)*this.Fr.n8;let s=this.Fr.sub(this.coef.slice(c,c+this.Fr.n8),this.coef.slice(i,i+this.Fr.n8));if(n||(s=l?e.neg(s):e.mul(o,s)),this.coef.set(s,i),a>this.length()-t-1&&!this.Fr.isZero(s))throw new Error("Polynomial is not divisible")}return this}byX(){const t=this.length()+1>32768?new xn(this.coef.byteLength+this.Fr.n8):new Uint8Array(this.coef.byteLength+this.Fr.n8);t.set(this.Fr.zero,0),t.set(this.coef,this.Fr.n8),this.coef=t}static async expX(t,a,e=!1){const o=t.Fr;if(a<1)throw new Error("Compute a new polynomial to a zero or negative number is not allowed");if(1===a)return await Js.fromEvaluations(t.coef,curve,t.logger);const i=e?t.degree():t.length()-1,n=i*a+1>32768?new xn((i*a+1)*o.n8):new Uint8Array((i*a+1)*o.n8);n.set(t.getCoef(0),0);for(let e=1;e<=i;e++){const i=e*o.n8,l=t.getCoef(e);n.set(l,i*a)}return new Js(n,t.curve,t.logger)}split(t,a,e){if(t<1)throw new Error(`Polynomials can't be split in ${t} parts`);if(1===t)return[this];if(0!==e.length&&e.length<t-1)throw new Error("Blinding factors length must be "+(t-1));const o=(a+1)*this.Fr.n8;let i=[];const n=Math.ceil((this.degree()+1)*this.Fr.n8/o);if(n<t)for(let a=n;a<t;a++)i[a]=new Js(new Uint8Array(this.Fr.n8),this.curve,this.logger);t=Math.min(t,n);for(let a=0;a<t;a++){const n=t-1===a,l=n?this.coef.byteLength-(t-1)*o:o+this.Fr.n8;let c=l/this.Fr.n8>32768?new xn(l):new Uint8Array(l);i[a]=new Js(c,this.curve,this.logger);const s=a*o,r=n?this.coef.byteLength:(a+1)*o;if(i[a].coef.set(this.coef.slice(s,r),0),n||i[a].coef.set(e[a],o),0!==a){const t=this.Fr.sub(i[a].coef.slice(0,this.Fr.n8),e[a-1]);i[a].coef.set(t,0)}n&&i[a].truncate()}return i}truncate(){const t=this.degree();if(t+1<this.coef.byteLength/this.Fr.n8){const a=t+1>32768?new xn((t+1)*this.Fr.n8):new Uint8Array((t+1)*this.Fr.n8);a.set(this.coef.slice(0,(t+1)*this.Fr.n8),0),this.coef=a}}static lagrangePolynomialInterpolation(t,a,e){const o=e.Fr;let i=n(0);for(let a=1;a<t.length;a++)i.add(n(a));return i;function n(i){let n;for(let a=0;a<t.length;a++)if(a!==i)if(void 0===n){let i=t.length>32768?new xn(t.length*o.n8):new Uint8Array(t.length*o.n8);n=new Js(i,e),n.setCoef(0,o.neg(t[a])),n.setCoef(1,o.one)}else n.byXSubValue(t[a]);let l=n.evaluate(t[i]);l=o.inv(l);const c=o.mul(a[i],l);return n.mulScalar(c),n}}static zerofierPolynomial(t,a){const e=a.Fr;let o=t.length+1>32768?new xn((t.length+1)*e.n8):new Uint8Array((t.length+1)*e.n8),i=new Js(o,a);i.setCoef(0,e.neg(t[0])),i.setCoef(1,e.one);for(let a=1;a<t.length;a++)i.byXSubValue(t[a]);return i}print(){const t=this.Fr;let a="";for(let e=this.degree();e>=0;e--){const o=this.getCoef(e);t.eq(t.zero,o)||(t.isNegative(o)?a+=" - ":e!==this.degree()&&(a+=" + "),a+=t.toString(o),e>0&&(a+=e>1?"x^"+e:"x"))}console.log(a)}async multiExponentiation(t,a){const e=this.coef.byteLength/this.Fr.n8,o=t.slice(0,e*this.G1.F.n8*2),i=await this.Fr.batchFromMontgomery(this.coef);let n=await this.G1.multiExpAffine(o,i,this.logger,a);return n=this.G1.toAffine(n),n}}class Xs{constructor(t,a,e){this.eval=t,this.curve=a,this.Fr=a.Fr,this.logger=e}static async fromPolynomial(t,a,e,o){const i=new xn(t.length()*a*e.Fr.n8);i.set(t.coef,0);const n=await e.Fr.fft(i);return new Xs(n,e,o)}getEvaluation(t){const a=t*this.Fr.n8;if(a+this.Fr.n8>this.eval.byteLength)throw new Error("Evaluations.getEvaluation() out of bounds");return this.eval.slice(a,a+this.Fr.n8)}length(){let t=this.eval.byteLength/this.Fr.n8;if(t!==Math.floor(this.eval.byteLength/this.Fr.n8))throw new Error("Polynomial evaluations buffer has incorrect size");return 0===t&&this.logger.warn("Polynomial has length zero"),t}}const{stringifyBigInts:tr}=$n;async function ar(t,a,e,o){const{fd:i,sections:n}=await ze(a,"wtns",2);e&&e.debug("> Reading witness file");const l=await Fc(i,n);e&&e.debug("> Reading zkey file");const{fd:c,sections:s}=await ze(t,"zkey",2),r=await Lc(c,s);if("plonk"!=r.protocol)throw new Error("zkey file is not plonk");if(!Dn.eq(r.r,l.q))throw new Error("Curve of the witness does not match the curve of the proving key");if(l.nWitness!=r.nVars-r.nAdditions)throw new Error(`Invalid witness length. Circuit: ${r.nVars}, witness: ${l.nWitness}, ${r.nAdditions}`);const d=r.curve,u=d.Fr,_=d.Fr.n8,g=r.domainSize*_;e&&(e.debug("----------------------------"),e.debug("  PLONK PROVE SETTINGS"),e.debug(`  Curve:         ${d.name}`),e.debug(`  Circuit power: ${r.power}`),e.debug(`  Domain size:   ${r.domainSize}`),e.debug(`  Vars:          ${r.nVars}`),e.debug(`  Public vars:   ${r.nPublic}`),e.debug(`  Constraints:   ${r.nConstraints}`),e.debug(`  Additions:     ${r.nAdditions}`),e.debug("----------------------------")),e&&e.debug("> Reading witness file data");const f=await $e(i,n,2);f.set(u.zero,0);const p=new xn(_*r.nAdditions);let h={},m={},L={},b={},w=new Us(d,e);const y=new o(d);e&&e.debug(`> Reading Section ${ks}. Additions`),await async function(){e&&e.debug("··· Computing additions");const t=await $e(c,s,ks),a=8+2*_;for(let o=0;o<r.nAdditions;o++){e&&0!==o&&o%1e5==0&&e.debug(`    addition ${o}/${r.nAdditions}`);let i=o*a;const n=F(t,i);i+=4;const l=F(t,i);i+=4;const c=t.slice(i,i+_);i+=_;const s=t.slice(i,i+_),d=I(n),g=I(l),f=u.add(u.mul(c,d),u.mul(s,g));p.set(f,_*o)}}(),e&&e.debug(`> Reading Section ${Zs}. Sigma1, Sigma2 & Sigma 3`),e&&e.debug("··· Reading Sigma polynomials "),m.Sigma1=new Js(new xn(g),d,e),m.Sigma2=new Js(new xn(g),d,e),m.Sigma3=new Js(new xn(g),d,e),await c.readToBuffer(m.Sigma1.coef,0,g,s[Zs][0].p),await c.readToBuffer(m.Sigma2.coef,0,g,s[Zs][0].p+5*g),await c.readToBuffer(m.Sigma3.coef,0,g,s[Zs][0].p+10*g),e&&e.debug("··· Reading Sigma evaluations"),L.Sigma1=new Xs(new xn(4*g),d,e),L.Sigma2=new Xs(new xn(4*g),d,e),L.Sigma3=new Xs(new xn(4*g),d,e),await c.readToBuffer(L.Sigma1.eval,0,4*g,s[Zs][0].p+g),await c.readToBuffer(L.Sigma2.eval,0,4*g,s[Zs][0].p+6*g),await c.readToBuffer(L.Sigma3.eval,0,4*g,s[Zs][0].p+11*g),e&&e.debug(`> Reading Section ${Ys}. Powers of Tau`);const A=await $e(c,s,Ys);let C=[];for(let t=1;t<=r.nPublic;t++){const a=f.slice(t*u.n8,t*u.n8+u.n8);C.push(Dn.fromRprLE(a))}e&&e.debug(""),e&&e.debug("> ROUND 1"),await async function(){b.b=[];for(let t=1;t<=11;t++)b.b[t]=d.Fr.random();e&&e.debug("> Computing A, B, C wire polynomials");await async function(){e&&e.debug("··· Reading data from zkey file");h.A=new xn(g),h.B=new xn(g),h.C=new xn(g);const t=await $e(c,s,Rs),a=await $e(c,s,Ns),o=await $e(c,s,Ds);for(let e=0;e<r.nConstraints;e++){const i=e*_,n=4*e,l=F(t,n);h.A.set(I(l),i);const c=F(a,n);h.B.set(I(c),i);const s=F(o,n);h.C.set(I(s),i)}h.A=await u.batchToMontgomery(h.A),h.B=await u.batchToMontgomery(h.B),h.C=await u.batchToMontgomery(h.C),e&&e.debug("··· Computing A ifft");m.A=await Js.fromEvaluations(h.A,d,e),e&&e.debug("··· Computing B ifft");m.B=await Js.fromEvaluations(h.B,d,e),e&&e.debug("··· Computing C ifft");m.C=await Js.fromEvaluations(h.C,d,e),e&&e.debug("··· Computing A fft");L.A=await Xs.fromPolynomial(m.A,4,d,e),e&&e.debug("··· Computing B fft");L.B=await Xs.fromPolynomial(m.B,4,d,e),e&&e.debug("··· Computing C fft");if(L.C=await Xs.fromPolynomial(m.C,4,d,e),m.A.blindCoefficients([b.b[2],b.b[1]]),m.B.blindCoefficients([b.b[4],b.b[3]]),m.C.blindCoefficients([b.b[6],b.b[5]]),m.A.degree()>=r.domainSize+2)throw new Error("A Polynomial is not well calculated");if(m.B.degree()>=r.domainSize+2)throw new Error("B Polynomial is not well calculated");if(m.C.degree()>=r.domainSize+2)throw new Error("C Polynomial is not well calculated")}(),e&&e.debug("> Computing A, B, C MSM");let t=await m.A.multiExponentiation(A,"A"),a=await m.B.multiExponentiation(A,"B"),o=await m.C.multiExponentiation(A,"C");return w.addPolynomial("A",t),w.addPolynomial("B",a),w.addPolynomial("C",o),0}(),e&&e.debug("> ROUND 2"),await async function(){e&&e.debug("> Computing challenges beta and gamma");y.reset(),y.addPolCommitment(r.Qm),y.addPolCommitment(r.Ql),y.addPolCommitment(r.Qr),y.addPolCommitment(r.Qo),y.addPolCommitment(r.Qc),y.addPolCommitment(r.S1),y.addPolCommitment(r.S2),y.addPolCommitment(r.S3);for(let t=0;t<r.nPublic;t++)y.addScalar(h.A.slice(t*_,t*_+_));y.addPolCommitment(w.getPolynomial("A")),y.addPolCommitment(w.getPolynomial("B")),y.addPolCommitment(w.getPolynomial("C")),b.beta=y.getChallenge(),e&&e.debug("··· challenges.beta: "+u.toString(b.beta,16));y.reset(),y.addScalar(b.beta),b.gamma=y.getChallenge(),e&&e.debug("··· challenges.gamma: "+u.toString(b.gamma,16));e&&e.debug("> Computing Z polynomial");await async function(){e&&e.debug("··· Computing Z evaluations");let t=new xn(g),a=new xn(g);t.set(u.one,0),a.set(u.one,0);let o=u.one;for(let e=0;e<r.domainSize;e++){const i=e*_,n=h.A.slice(i,i+_),l=h.B.slice(i,i+_),c=h.C.slice(i,i+_),s=u.mul(b.beta,o);let d=u.add(n,s);d=u.add(d,b.gamma);let g=u.add(l,u.mul(r.k1,s));g=u.add(g,b.gamma);let f=u.add(c,u.mul(r.k2,s));f=u.add(f,b.gamma);let p=u.mul(d,u.mul(g,f)),m=u.add(n,u.mul(L.Sigma1.getEvaluation(4*e),b.beta));m=u.add(m,b.gamma);let w=u.add(l,u.mul(L.Sigma2.getEvaluation(4*e),b.beta));w=u.add(w,b.gamma);let y=u.add(c,u.mul(L.Sigma3.getEvaluation(4*e),b.beta));y=u.add(y,b.gamma);let A=u.mul(m,u.mul(w,y));p=u.mul(t.slice(i,i+_),p),t.set(p,(e+1)%r.domainSize*_),A=u.mul(a.slice(i,i+_),A),a.set(A,(e+1)%r.domainSize*_),o=u.mul(o,u.w[r.power])}a=await u.batchInverse(a);for(let e=0;e<r.domainSize;e++){const o=e*_,i=u.mul(t.slice(o,o+_),a.slice(o,o+_));t.set(i,o)}if(h.Z=t,!u.eq(t.slice(0,_),u.one))throw new Error("Copy constraints does not match");e&&e.debug("··· Computing Z ifft");m.Z=await Js.fromEvaluations(h.Z,d,e),e&&e.debug("··· Computing Z fft");if(L.Z=await Xs.fromPolynomial(m.Z,4,d,e),m.Z.blindCoefficients([b.b[9],b.b[8],b.b[7]]),m.Z.degree()>=r.domainSize+3)throw new Error("Z Polynomial is not well calculated");delete h.Z}(),e&&e.debug("> Computing Z MSM");let t=await m.Z.multiExponentiation(A,"Z");w.addPolynomial("Z",t)}(),e&&e.debug("> ROUND 3"),await async function(){e&&e.debug("> Computing challenge alpha");y.reset(),y.addScalar(b.beta),y.addScalar(b.gamma),y.addPolCommitment(w.getPolynomial("Z")),b.alpha=y.getChallenge(),b.alpha2=u.square(b.alpha),e&&e.debug("··· challenges.alpha: "+u.toString(b.alpha,16));e&&e.debug("> Computing T polynomial");await async function(){e&&e.debug(`··· Reading sections ${js}, ${Vs}, ${$s}, ${Ks}, ${Hs}. Q selectors`);L.QL=new Xs(new xn(4*g),d,e),L.QR=new Xs(new xn(4*g),d,e),L.QM=new Xs(new xn(4*g),d,e),L.QO=new Xs(new xn(4*g),d,e),L.QC=new Xs(new xn(4*g),d,e),await c.readToBuffer(L.QL.eval,0,4*g,s[js][0].p+g),await c.readToBuffer(L.QR.eval,0,4*g,s[Vs][0].p+g),await c.readToBuffer(L.QM.eval,0,4*g,s[$s][0].p+g),await c.readToBuffer(L.QO.eval,0,4*g,s[Ks][0].p+g),await c.readToBuffer(L.QC.eval,0,4*g,s[Hs][0].p+g),L.Lagrange=new Xs(new xn(4*g*r.nPublic),d,e);for(let t=0;t<r.nPublic;t++)await c.readToBuffer(L.Lagrange.eval,t*g*4,4*g,s[Ws][0].p+5*t*g+g);h.T=new xn(4*g),h.Tz=new xn(4*g),e&&e.debug("··· Computing T evaluations");let t=u.one;for(let a=0;a<4*r.domainSize;a++){e&&0!==a&&a%1e5==0&&e.debug(`      T evaluation ${a}/${4*r.domainSize}`);const o=L.A.getEvaluation(a),i=L.B.getEvaluation(a),n=L.C.getEvaluation(a),l=L.Z.getEvaluation(a),c=L.Z.getEvaluation((4*r.domainSize+4+a)%(4*r.domainSize)),s=L.QM.getEvaluation(a),d=L.QL.getEvaluation(a),g=L.QR.getEvaluation(a),f=L.QO.getEvaluation(a),p=L.QC.getEvaluation(a),m=L.Sigma1.getEvaluation(a),w=L.Sigma2.getEvaluation(a),y=L.Sigma3.getEvaluation(a),A=u.add(b.b[2],u.mul(b.b[1],t)),C=u.add(b.b[4],u.mul(b.b[3],t)),x=u.add(b.b[6],u.mul(b.b[5],t)),F=u.square(t),I=u.add(u.add(u.mul(b.b[7],F),u.mul(b.b[8],t)),b.b[9]),B=u.mul(t,u.w[r.power]),E=u.square(B),v=u.add(u.add(u.mul(b.b[7],E),u.mul(b.b[8],B)),b.b[9]);let S=u.zero;for(let t=0;t<r.nPublic;t++){const e=4*t*r.domainSize+a,o=L.Lagrange.getEvaluation(e),i=h.A.slice(t*_,(t+1)*_);S=u.sub(S,u.mul(o,i))}let[P,O]=Qs.mul2(o,i,A,C,a%4,u);P=u.mul(P,s),O=u.mul(O,s),P=u.add(P,u.mul(o,d)),O=u.add(O,u.mul(A,d)),P=u.add(P,u.mul(i,g)),O=u.add(O,u.mul(C,g)),P=u.add(P,u.mul(n,f)),O=u.add(O,u.mul(x,f)),P=u.add(P,S),P=u.add(P,p);const q=u.mul(b.beta,t);let G=o;G=u.add(G,q),G=u.add(G,b.gamma);let z=i;z=u.add(z,u.mul(q,r.k1)),z=u.add(z,b.gamma);let T=n;T=u.add(T,u.mul(q,r.k2)),T=u.add(T,b.gamma);let M=l,[U,Q]=Qs.mul4(G,z,T,M,A,C,x,I,a%4,u);U=u.mul(U,b.alpha),Q=u.mul(Q,b.alpha);let k=o;k=u.add(k,u.mul(b.beta,m)),k=u.add(k,b.gamma);let R=i;R=u.add(R,u.mul(b.beta,w)),R=u.add(R,b.gamma);let N=n;N=u.add(N,u.mul(b.beta,y)),N=u.add(N,b.gamma);let D=c,[$,j]=Qs.mul4(k,R,N,D,A,C,x,v,a%4,u);$=u.mul($,b.alpha),j=u.mul(j,b.alpha);let V=u.sub(l,u.one);V=u.mul(V,L.Lagrange.getEvaluation(a)),V=u.mul(V,b.alpha2);let K=u.mul(I,L.Lagrange.getEvaluation(a));K=u.mul(K,b.alpha2);let H=u.add(u.sub(u.add(P,U),$),V),Z=u.add(u.sub(u.add(O,Q),j),K);h.T.set(H,a*_),h.Tz.set(Z,a*_),t=u.mul(t,u.w[r.power+2])}e&&e.debug("··· Computing T ifft");m.T=await Js.fromEvaluations(h.T,d,e),e&&e.debug("··· Computing T / ZH");m.T.divZh(r.domainSize,4),e&&e.debug("··· Computing Tz ifft");if(m.Tz=await Js.fromEvaluations(h.Tz,d,e),m.T.add(m.Tz),m.T.degree()>=3*r.domainSize+6)throw new Error("T Polynomial is not well calculated");e&&e.debug("··· Computing T1, T2, T3 polynomials");m.T1=new Js(new xn((r.domainSize+1)*_),d,e),m.T2=new Js(new xn((r.domainSize+1)*_),d,e),m.T3=new Js(new xn((r.domainSize+6)*_),d,e),m.T1.coef.set(m.T.coef.slice(0,g),0),m.T2.coef.set(m.T.coef.slice(g,2*g),0),m.T3.coef.set(m.T.coef.slice(2*g,3*g+6*_),0),m.T1.setCoef(r.domainSize,b.b[10]);const a=u.sub(m.T2.getCoef(0),b.b[10]);m.T2.setCoef(0,a),m.T2.setCoef(r.domainSize,b.b[11]);const o=u.sub(m.T3.getCoef(0),b.b[11]);m.T3.setCoef(0,o)}(),e&&e.debug("> Computing T MSM");let t=await m.T1.multiExponentiation(A,"T1"),a=await m.T2.multiExponentiation(A,"T2"),o=await m.T3.multiExponentiation(A,"T3");w.addPolynomial("T1",t),w.addPolynomial("T2",a),w.addPolynomial("T3",o)}(),e&&e.debug("> ROUND 4"),await async function(){e&&e.debug("> Computing challenge xi");y.reset(),y.addScalar(b.alpha),y.addPolCommitment(w.getPolynomial("T1")),y.addPolCommitment(w.getPolynomial("T2")),y.addPolCommitment(w.getPolynomial("T3")),b.xi=y.getChallenge(),b.xiw=u.mul(b.xi,u.w[r.power]),e&&e.debug("··· challenges.xi: "+u.toString(b.xi,16));w.addEvaluation("eval_a",m.A.evaluate(b.xi)),w.addEvaluation("eval_b",m.B.evaluate(b.xi)),w.addEvaluation("eval_c",m.C.evaluate(b.xi)),w.addEvaluation("eval_s1",m.Sigma1.evaluate(b.xi)),w.addEvaluation("eval_s2",m.Sigma2.evaluate(b.xi)),w.addEvaluation("eval_zw",m.Z.evaluate(b.xiw))}(),e&&e.debug("> ROUND 5"),await async function(){e&&e.debug("> Computing challenge v");y.reset(),y.addScalar(b.xi),y.addScalar(w.getEvaluation("eval_a")),y.addScalar(w.getEvaluation("eval_b")),y.addScalar(w.getEvaluation("eval_c")),y.addScalar(w.getEvaluation("eval_s1")),y.addScalar(w.getEvaluation("eval_s2")),y.addScalar(w.getEvaluation("eval_zw")),b.v=[],b.v[1]=y.getChallenge(),e&&e.debug("··· challenges.v: "+u.toString(b.v[1],16));for(let t=2;t<6;t++)b.v[t]=u.mul(b.v[t-1],b.v[1]);e&&e.debug("> Computing linearisation polynomial R(X)");await async function(){const t=d.Fr;m.QL=new Js(new xn(g),d,e),m.QR=new Js(new xn(g),d,e),m.QM=new Js(new xn(g),d,e),m.QO=new Js(new xn(g),d,e),m.QC=new Js(new xn(g),d,e),await c.readToBuffer(m.QL.coef,0,g,s[js][0].p),await c.readToBuffer(m.QR.coef,0,g,s[Vs][0].p),await c.readToBuffer(m.QM.coef,0,g,s[$s][0].p),await c.readToBuffer(m.QO.coef,0,g,s[Ks][0].p),await c.readToBuffer(m.QC.coef,0,g,s[Hs][0].p),b.xin=b.xi;for(let a=0;a<r.power;a++)b.xin=t.square(b.xin);b.zh=t.sub(b.xin,t.one);const a=[],o=t.e(r.domainSize);let i=t.one;for(let e=1;e<=Math.max(1,r.nPublic);e++)a[e]=t.div(t.mul(i,b.zh),t.mul(o,t.sub(b.xi,i))),i=t.mul(i,t.w[r.power]);const n=t.div(t.sub(b.xin,t.one),t.mul(o,t.sub(b.xi,t.one)));if(e){e.debug("Lagrange Evaluations: ");for(let o=1;o<a.length;o++)e.debug(`L${o}(xi)=`+t.toString(a[o],16))}let l=t.zero;for(let e=0;e<C.length;e++){const o=t.e(C[e]);l=t.sub(l,t.mul(o,a[e+1]))}e&&e.debug("PI: "+t.toString(l,16));const u=t.mul(w.evaluations.eval_a,w.evaluations.eval_b);let f=w.evaluations.eval_a;const p=t.mul(b.beta,b.xi);f=t.add(f,p),f=t.add(f,b.gamma);let h=w.evaluations.eval_b;h=t.add(h,t.mul(p,r.k1)),h=t.add(h,b.gamma);let L=w.evaluations.eval_c;L=t.add(L,t.mul(p,r.k2)),L=t.add(L,b.gamma);const y=t.mul(t.mul(t.mul(f,h),L),b.alpha);let A=w.evaluations.eval_a;A=t.add(A,t.mul(b.beta,w.evaluations.eval_s1)),A=t.add(A,b.gamma);let x=w.evaluations.eval_b;x=t.add(x,t.mul(b.beta,w.evaluations.eval_s2)),x=t.add(x,b.gamma);let F=t.mul(A,x);F=t.mul(F,w.evaluations.eval_zw),F=t.mul(F,b.alpha);const I=t.mul(n,b.alpha2);m.R=new Js(new xn((r.domainSize+6)*_),d,e),m.R.add(m.QM,u),m.R.add(m.QL,w.evaluations.eval_a),m.R.add(m.QR,w.evaluations.eval_b),m.R.add(m.QO,w.evaluations.eval_c),m.R.add(m.QC),m.R.add(m.Z,y),m.R.sub(m.Sigma3,t.mul(F,b.beta)),m.R.add(m.Z,I);let B=Js.fromPolynomial(m.T3,d,e);B.mulScalar(t.square(b.xin)),B.add(m.T2,b.xin),B.add(m.T1),B.mulScalar(b.zh),m.R.sub(B);let E=t.sub(l,t.mul(F,t.add(w.evaluations.eval_c,b.gamma)));E=t.sub(E,I),e&&e.debug("r0: "+t.toString(E,16));m.R.addScalar(E)}(),e&&e.debug("> Computing opening proof polynomial Wxi(X) polynomial");m.Wxi=new Js(new xn(g+6*_),d,e),m.Wxi.add(m.R),m.Wxi.add(m.A,b.v[1]),m.Wxi.add(m.B,b.v[2]),m.Wxi.add(m.C,b.v[3]),m.Wxi.add(m.Sigma1,b.v[4]),m.Wxi.add(m.Sigma2,b.v[5]),m.Wxi.subScalar(u.mul(b.v[1],w.evaluations.eval_a)),m.Wxi.subScalar(u.mul(b.v[2],w.evaluations.eval_b)),m.Wxi.subScalar(u.mul(b.v[3],w.evaluations.eval_c)),m.Wxi.subScalar(u.mul(b.v[4],w.evaluations.eval_s1)),m.Wxi.subScalar(u.mul(b.v[5],w.evaluations.eval_s2)),void m.Wxi.divByZerofier(1,b.xi),e&&e.debug("> Computing opening proof polynomial Wxiw(X) polynomial");(async function(){m.Wxiw=Js.fromPolynomial(m.Z,d,e),m.Wxiw.subScalar(w.evaluations.eval_zw),m.Wxiw.divByZerofier(1,b.xiw)})(),e&&e.debug("> Computing Wxi, Wxiw MSM");let t=await m.Wxi.multiExponentiation(A,"Wxi"),a=await m.Wxiw.multiExponentiation(A,"Wxiw");w.addPolynomial("Wxi",t),w.addPolynomial("Wxiw",a)}(),await c.close(),await i.close();let x=w.toObjectProof(!1);return x.protocol="plonk",x.curve=d.name,e&&e.debug("PLONK PROVER FINISHED"),{proof:tr(x),publicSignals:tr(C)};function F(t,a){const e=t.slice(a,a+4);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint32(0,!0)}function I(t){return t<r.nVars-r.nAdditions?f.slice(t*_,t*_+_):t<r.nVars?p.slice((t-(r.nVars-r.nAdditions))*_,(t-(r.nVars-r.nAdditions))*_+_):d.Fr.zero}}const{unstringifyBigInts:er}=$n;const{unstringifyBigInts:or}=$n;const{unstringifyBigInts:ir}=$n;function nr(t){let a=t.toString(16);for(;a.length<64;)a="0"+a;return a=`"0x${a}"`,a}const{unstringifyBigInts:lr}=$n;function cr(t,a){const e=new Uint8Array(t.F.n8);return t.toBlstCompressed(e,0,a),Buffer.from(e).toString("hex")}var sr=Object.freeze({__proto__:null,setup:async function(t,a,e,o){globalThis.gc&&globalThis.gc(),await Yn.exports.ready();const{fd:i,sections:n}=await ze(a,"ptau",1),{curve:l,power:c}=await Vc(i,n),{fd:s,sections:r}=await ze(t,"r1cs",1),d=await gs(s,r,{loadConstraints:!0,loadCustomGates:!0}),u=2*l.G1.F.n8,_=l.G1,g=2*l.G2.F.n8,f=l.Fr,p=l.Fr.n8;o&&o.info("Reading r1cs"),await $e(s,r,2);const h=new xs,m=new xs;let L=d.nVars;const b=d.nOutputs+d.nPubInputs;await async function(t,a,e){function o(t){const a=Object.keys(t);for(let e=0;e<a.length;e++)0n==t[a[e]]&&delete t[a[e]]}function i(a,e,i){const n={};for(let o in a)void 0===n[o]?n[o]=t.mul(e,a[o]):n[o]=t.add(n[o],t.mul(e,a[o]));for(let a in i)void 0===n[a]?n[a]=i[a]:n[a]=t.add(n[a],i[a]);return o(n),n}function n(a,e){const o={k:t.zero,s:[],coefs:[]},i=[];for(let e in a)0==e?o.k=t.add(o.k,a[e]):0n!=a[e]&&i.push([Number(e),a[e]]);for(;i.length>e;){const a=i.shift(),e=i.shift(),o=a[0],n=e[0],l=L++,c=t.zero,s=t.neg(a[1]),r=t.neg(e[1]),d=t.one,u=t.zero;h.push([o,n,l,c,s,r,d,u]),m.push([o,n,a[1],e[1]]),i.push([l,t.one])}for(let t=0;t<i.length;t++)o.s[t]=i[t][0],o.coefs[t]=i[t][1];for(;o.coefs.length<e;)o.s.push(0),o.coefs.push(t.zero);return o}function l(a){const e=n(a,3),o=e.s[0],i=e.s[1],l=e.s[2],c=t.zero,s=e.coefs[0],r=e.coefs[1],d=e.coefs[2],u=e.k;h.push([o,i,l,c,s,r,d,u])}function c(a){let e=t.zero,o=0;const i=Object.keys(a);for(let n=0;n<i.length;n++)0n==a[i[n]]?delete a[i[n]]:0==i[n]?e=t.add(e,a[i[n]]):o++;return o>0?o.toString():e!=t.zero?"k":"0"}function s(a,e,s){const r=c(a),d=c(e);if("0"===r||"0"===d)o(s),l(s);else if("k"===r){l(i(e,a[0],s))}else if("k"===d){l(i(a,e[0],s))}else!function(a,e,o){const i=n(a,1),l=n(e,1),c=n(o,1),s=i.s[0],r=l.s[0],d=c.s[0],u=t.mul(i.coefs[0],l.coefs[0]),_=t.mul(i.coefs[0],l.k),g=t.mul(i.k,l.coefs[0]),f=t.neg(c.coefs[0]),p=t.sub(t.mul(i.k,l.k),c.k);h.push([s,r,d,u,_,g,f,p])}(a,e,s)}for(let a=1;a<=b;a++){const e=a,o=0,i=0,n=t.zero,l=t.one,c=t.zero,s=t.zero,r=t.zero;h.push([e,o,i,n,l,c,s,r])}for(let t=0;t<a.constraints.length;t++)e&&t%1e4==0&&e.debug(`processing constraints: ${t}/${a.nConstraints}`),s(...a.constraints[t])}(l.Fr,d,o),globalThis.gc&&globalThis.gc();const w=await Te(e,"zkey",1,14,1<<22,1<<24);if(d.prime!=l.r)return o&&o.error("r1cs curve does not match powers of tau ceremony curve"),-1;let y=Ol(h.length-1)+1;y<3&&(y=3);const A=2**y;if(o&&o.info("Plonk constraints: "+h.length),y>c)return o&&o.error(`circuit too big for this power of tau ceremony. ${h.length} > 2**${c}`),-1;if(!n[12])return o&&o.error("Powers of tau is not prepared."),-1;const C=new xn(A*u),x=n[12][0].p+(2**y-1)*u;await i.readToBuffer(C,0,A*u,x);const[F,I]=function(){let t=f.two;for(;e(t,[],y);)f.add(t,f.one);let a=f.add(t,f.one);for(;e(a,[t],y);)f.add(a,f.one);return[t,a];function e(t,a,e){const o=2**e;let i=f.one;for(let n=0;n<o;n++){if(f.eq(t,i))return!0;for(let e=0;e<a.length;e++)if(f.eq(t,f.mul(a[e],i)))return!0;i=f.mul(i,f.w[e])}return!1}}(),B={};await async function(t,a){await Me(w,t);const e=new Uint8Array(8+2*p),i=new DataView(e.buffer);for(let t=0;t<m.length;t++){const n=m[t];let l=0;i.setUint32(l,n[0],!0),l+=4,i.setUint32(l,n[1],!0),l+=4,e.set(n[2],l),l+=p,e.set(n[3],l),l+=p,await w.write(e),o&&t%1e6==0&&o.debug(`writing ${a}: ${t}/${m.length}`)}await Ue(w)}(3,"Additions"),globalThis.gc&&globalThis.gc(),await v(4,0,"Amap"),globalThis.gc&&globalThis.gc(),await v(5,1,"Bmap"),globalThis.gc&&globalThis.gc(),await v(6,2,"Cmap"),globalThis.gc&&globalThis.gc(),await S(7,3,"Qm"),globalThis.gc&&globalThis.gc(),await S(8,4,"Ql"),globalThis.gc&&globalThis.gc(),await S(9,5,"Qr"),globalThis.gc&&globalThis.gc(),await S(10,6,"Qo"),globalThis.gc&&globalThis.gc(),await S(11,7,"Qc"),globalThis.gc&&globalThis.gc(),await async function(t,a){const e=new xn(p*A*3),i=new xs(L),n=new xs(L);let c=f.one;for(let t=0;t<A;t++)t<h.length?(u(h[t][0],t),u(h[t][1],A+t),u(h[t][2],2*A+t)):(u(0,t),u(0,A+t),u(0,2*A+t)),c=f.mul(c,f.w[y]),o&&t%1e6==0&&o.debug(`writing ${a} phase1: ${t}/${h.length}`);for(let t=0;t<L;t++)void 0!==n[t]?e.set(i[t],n[t]*p):console.log("Variable not used"),o&&t%1e6==0&&o.debug(`writing ${a} phase2: ${t}/${L}`);globalThis.gc&&globalThis.gc();await Me(w,t);let s=e.slice(0,A*p);await P(s),globalThis.gc&&globalThis.gc();let r=e.slice(A*p,A*p*2);await P(r),globalThis.gc&&globalThis.gc();let d=e.slice(A*p*2,A*p*3);await P(d),globalThis.gc&&globalThis.gc();await Ue(w),s=await f.batchFromMontgomery(s),r=await f.batchFromMontgomery(r),d=await f.batchFromMontgomery(d),B.S1=await l.G1.multiExpAffine(C,s,o,"multiexp S1"),globalThis.gc&&globalThis.gc();B.S2=await l.G1.multiExpAffine(C,r,o,"multiexp S2"),globalThis.gc&&globalThis.gc();B.S3=await l.G1.multiExpAffine(C,d,o,"multiexp S3"),globalThis.gc&&globalThis.gc();function u(t,a){let o;void 0===i[t]?n[t]=a:e.set(i[t],a*p),o=a<A?c:a<2*A?f.mul(c,F):f.mul(c,I),i[t]=o}}(12,"sigma"),globalThis.gc&&globalThis.gc(),await async function(t,a){await Me(w,t);const e=Math.max(b,1);for(let t=0;t<e;t++){let i=new xn(A*p);i.set(f.one,t*p),await P(i),o&&o.debug(`writing ${a} ${t}/${e}`)}await Ue(w)}(13,"lagrange polynomials"),globalThis.gc&&globalThis.gc(),await Me(w,14);const E=new xn((A+6)*u);return await i.readToBuffer(E,0,(A+6)*u,n[2][0].p),await w.write(E),await Ue(w),globalThis.gc&&globalThis.gc(),await async function(){await Me(w,1),await w.writeULE32(2),await Ue(w),await Me(w,2);const t=l.q,a=8*(Math.floor((Dn.bitLength(t)-1)/64)+1),e=l.r,o=8*(Math.floor((Dn.bitLength(e)-1)/64)+1);let c;await w.writeULE32(a),await Re(w,t,a),await w.writeULE32(o),await Re(w,e,o),await w.writeULE32(L),await w.writeULE32(b),await w.writeULE32(A),await w.writeULE32(m.length),await w.writeULE32(h.length),await w.write(F),await w.write(I),await w.write(_.toAffine(B.Qm)),await w.write(_.toAffine(B.Ql)),await w.write(_.toAffine(B.Qr)),await w.write(_.toAffine(B.Qo)),await w.write(_.toAffine(B.Qc)),await w.write(_.toAffine(B.S1)),await w.write(_.toAffine(B.S2)),await w.write(_.toAffine(B.S3)),c=await i.read(g,n[3][0].p+g),await w.write(c),await Ue(w)}(),await w.close(),await s.close(),await i.close(),void(o&&o.info("Setup Finished"));async function v(t,a,e){await Me(w,t);for(let t=0;t<h.length;t++)await w.writeULE32(h[t][a]),o&&t%1e6==0&&o.debug(`writing ${e}: ${t}/${h.length}`);await Ue(w)}async function S(t,a,e){let i=new xn(A*p);for(let t=0;t<h.length;t++)i.set(h[t][a],t*p),o&&t%1e6==0&&o.debug(`writing ${e}: ${t}/${h.length}`);await Me(w,t),await P(i),await Ue(w),i=await f.batchFromMontgomery(i),B[e]=await l.G1.multiExpAffine(C,i,o,"multiexp "+e)}async function P(t){const a=await f.ifft(t),e=new xn(A*p*4);e.set(a,0);const o=await f.fft(e);await w.write(a),await w.write(o)}},fullProve:async function(t,a,e,o,i){const n=er(t),l={type:"mem"};return await zc(n,a,l),await ar(e,l,o,i)},prove:ar,verify:async function(t,a,e,o,i){let n=or(t);e=or(e);let l=or(a);const c=await Wn(n.curve),s=c.Fr,r=c.G1;o&&o.info("PLONK VERIFIER STARTED");let d=function(t,a){const e=t.G1,o=t.Fr,i={};return i.A=e.fromObject(a.A),i.B=e.fromObject(a.B),i.C=e.fromObject(a.C),i.Z=e.fromObject(a.Z),i.T1=e.fromObject(a.T1),i.T2=e.fromObject(a.T2),i.T3=e.fromObject(a.T3),i.eval_a=o.fromObject(a.eval_a),i.eval_b=o.fromObject(a.eval_b),i.eval_c=o.fromObject(a.eval_c),i.eval_zw=o.fromObject(a.eval_zw),i.eval_s1=o.fromObject(a.eval_s1),i.eval_s2=o.fromObject(a.eval_s2),i.Wxi=e.fromObject(a.Wxi),i.Wxiw=e.fromObject(a.Wxiw),i}(c,e);if(n=function(t,a){const e=t.G1,o=t.G2,i=t.Fr,n=a;return n.Qm=e.fromObject(a.Qm),n.Ql=e.fromObject(a.Ql),n.Qr=e.fromObject(a.Qr),n.Qo=e.fromObject(a.Qo),n.Qc=e.fromObject(a.Qc),n.S1=e.fromObject(a.S1),n.S2=e.fromObject(a.S2),n.S3=e.fromObject(a.S3),n.k1=i.fromObject(a.k1),n.k2=i.fromObject(a.k2),n.X_2=o.fromObject(a.X_2),n}(c,n),!function(t,a){const e=t.G1;return!!e.isValid(a.A)&&(!!e.isValid(a.B)&&(!!e.isValid(a.C)&&(!!e.isValid(a.Z)&&(!!e.isValid(a.T1)&&(!!e.isValid(a.T2)&&(!!e.isValid(a.T3)&&(!!e.isValid(a.Wxi)&&!!e.isValid(a.Wxiw))))))))}(c,d))return o.error("Proof is not well constructed"),!1;if(l.length!=n.nPublic)return o.error("Invalid number of public inputs"),!1;const u=function(t,a,e,o,i){const n=t.Fr,l={},c=new i(t);c.addPolCommitment(o.Qm),c.addPolCommitment(o.Ql),c.addPolCommitment(o.Qr),c.addPolCommitment(o.Qo),c.addPolCommitment(o.Qc),c.addPolCommitment(o.S1),c.addPolCommitment(o.S2),c.addPolCommitment(o.S3);for(let t=0;t<e.length;t++)c.addScalar(n.e(e[t]));c.addPolCommitment(a.A),c.addPolCommitment(a.B),c.addPolCommitment(a.C),l.beta=c.getChallenge(),c.reset(),c.addScalar(l.beta),l.gamma=c.getChallenge(),c.reset(),c.addScalar(l.beta),c.addScalar(l.gamma),c.addPolCommitment(a.Z),l.alpha=c.getChallenge(),c.reset(),c.addScalar(l.alpha),c.addPolCommitment(a.T1),c.addPolCommitment(a.T2),c.addPolCommitment(a.T3),l.xi=c.getChallenge(),c.reset(),c.addScalar(l.xi),c.addScalar(a.eval_a),c.addScalar(a.eval_b),c.addScalar(a.eval_c),c.addScalar(a.eval_s1),c.addScalar(a.eval_s2),c.addScalar(a.eval_zw),l.v=[],l.v[1]=c.getChallenge();for(let t=2;t<6;t++)l.v[t]=n.mul(l.v[t-1],l.v[1]);return c.reset(),c.addPolCommitment(a.Wxi),c.addPolCommitment(a.Wxiw),l.u=c.getChallenge(),l}(c,d,l,n,i);if(o){o.debug("beta: "+s.toString(u.beta,16)),o.debug("gamma: "+s.toString(u.gamma,16)),o.debug("alpha: "+s.toString(u.alpha,16)),o.debug("xi: "+s.toString(u.xi,16));for(let t=1;t<6;t++)o&&o.debug("v: "+s.toString(u.v[t],16));o.debug("u: "+s.toString(u.u,16))}const _=function(t,a,e){const o=t.Fr;let i=a.xi,n=1;for(let t=0;t<e.power;t++)i=o.square(i),n*=2;a.xin=i,a.zh=o.sub(i,o.one);const l=[],c=o.e(n);let s=o.one;for(let t=1;t<=Math.max(1,e.nPublic);t++)l[t]=o.div(o.mul(s,a.zh),o.mul(c,o.sub(a.xi,s))),s=o.mul(s,o.w[e.power]);return l}(c,u,n);if(o)for(let t=1;t<_.length;t++)o.debug(`L${t}(xi)=`+s.toString(_[t],16));if(l.length!=n.nPublic)return o.error("Number of public signals does not match with vk"),!1;const g=function(t,a,e){const o=t.Fr;let i=o.zero;for(let t=0;t<a.length;t++){const n=o.e(a[t]);i=o.sub(i,o.mul(n,e[t+1]))}return i}(c,l,_);o&&o.debug("PI(xi): "+s.toString(g,16));const f=function(t,a,e,o,i){const n=t.Fr,l=o,c=n.mul(i,n.square(e.alpha));let s=n.add(a.eval_a,n.mul(e.beta,a.eval_s1));s=n.add(s,e.gamma);let r=n.add(a.eval_b,n.mul(e.beta,a.eval_s2));r=n.add(r,e.gamma);let d=n.add(a.eval_c,e.gamma),u=n.mul(n.mul(s,r),d);u=n.mul(u,a.eval_zw),u=n.mul(u,e.alpha);const _=n.sub(n.sub(l,c),u);return _}(c,d,u,g,_[1]);o&&o.debug("r0: "+s.toString(f,16));const p=function(t,a,e,o,i){const n=t.G1,l=t.Fr;let c=n.timesFr(o.Qm,l.mul(a.eval_a,a.eval_b));c=n.add(c,n.timesFr(o.Ql,a.eval_a)),c=n.add(c,n.timesFr(o.Qr,a.eval_b)),c=n.add(c,n.timesFr(o.Qo,a.eval_c)),c=n.add(c,o.Qc);const s=l.mul(e.beta,e.xi),r=l.add(l.add(a.eval_a,s),e.gamma),d=l.add(l.add(a.eval_b,l.mul(s,o.k1)),e.gamma),u=l.add(l.add(a.eval_c,l.mul(s,o.k2)),e.gamma),_=l.mul(l.mul(l.mul(r,d),u),e.alpha),g=l.mul(i,l.square(e.alpha)),f=n.timesFr(a.Z,l.add(l.add(_,g),e.u)),p=l.add(l.add(a.eval_a,l.mul(e.beta,a.eval_s1)),e.gamma),h=l.add(l.add(a.eval_b,l.mul(e.beta,a.eval_s2)),e.gamma),m=l.mul(l.mul(e.alpha,e.beta),a.eval_zw),L=n.timesFr(o.S3,l.mul(l.mul(p,h),m)),b=a.T1,w=n.timesFr(a.T2,e.xin),y=n.timesFr(a.T3,l.square(e.xin));let A=n.add(b,n.add(w,y));A=n.timesFr(A,e.zh);const C=n.sub(n.sub(n.add(c,f),L),A);return C}(c,d,u,n,_[1]);o&&o.debug("D: "+r.toString(r.toAffine(p),16));const h=function(t,a,e,o,i){const n=t.G1;let l=n.add(i,n.timesFr(a.A,e.v[1]));return l=n.add(l,n.timesFr(a.B,e.v[2])),l=n.add(l,n.timesFr(a.C,e.v[3])),l=n.add(l,n.timesFr(o.S1,e.v[4])),l=n.add(l,n.timesFr(o.S2,e.v[5])),l}(c,d,u,n,p);o&&o.debug("F: "+r.toString(r.toAffine(h),16));const m=function(t,a,e,o){const i=t.G1,n=t.Fr;let l=n.add(n.neg(o),n.mul(e.v[1],a.eval_a));l=n.add(l,n.mul(e.v[2],a.eval_b)),l=n.add(l,n.mul(e.v[3],a.eval_c)),l=n.add(l,n.mul(e.v[4],a.eval_s1)),l=n.add(l,n.mul(e.v[5],a.eval_s2)),l=n.add(l,n.mul(e.u,a.eval_zw));const c=i.timesFr(i.one,l);return c}(c,d,u,f);o&&o.debug("E: "+r.toString(r.toAffine(m),16));const L=await async function(t,a,e,o,i,n){const l=t.G1,c=t.Fr;let s=a.Wxi;s=l.add(s,l.timesFr(a.Wxiw,e.u));let r=l.timesFr(a.Wxi,e.xi);const d=c.mul(c.mul(e.u,e.xi),c.w[o.power]);r=l.add(r,l.timesFr(a.Wxiw,d)),r=l.add(r,n),r=l.sub(r,i);const u=await t.pairingEq(l.neg(s),o.X_2,r,t.G2.one);return u}(c,d,u,n,m,h);return o&&(L?o.info("OK!"):o.warn("Invalid Proof")),L},exportSolidityCallData:async function(t,a){const e=ir(t),o=ir(a),i=await Wn(e.curve);i.G1,i.Fr;let n="";for(let t=0;t<o.length;t++)""!=n&&(n+=","),n+=nr(o[t]);return`[${nr(e.A[0])}, ${nr(e.A[1])},${nr(e.B[0])},${nr(e.B[1])},${nr(e.C[0])},${nr(e.C[1])},${nr(e.Z[0])},${nr(e.Z[1])},${nr(e.T1[0])},${nr(e.T1[1])},${nr(e.T2[0])},${nr(e.T2[1])},${nr(e.T3[0])},${nr(e.T3[1])},${nr(e.Wxi[0])},${nr(e.Wxi[1])},${nr(e.Wxiw[0])},${nr(e.Wxiw[1])},${nr(e.eval_a)},${nr(e.eval_b)},${nr(e.eval_c)},${nr(e.eval_s1)},${nr(e.eval_s2)},${nr(e.eval_zw)}][${n}]`},exportFuncCallData:async function(t,a){let e=lr(t);const o=lr(a);return e=function(t,a){const e=t.G1,o=a;return o.A=cr(t.G1,e.fromObject(a.A)),o.B=cr(t.G1,e.fromObject(a.B)),o.C=cr(t.G1,e.fromObject(a.C)),o.Z=cr(t.G1,e.fromObject(a.Z)),o.T1=cr(t.G1,e.fromObject(a.T1)),o.T2=cr(t.G1,e.fromObject(a.T2)),o.T3=cr(t.G1,e.fromObject(a.T3)),o.Wxi=cr(t.G1,e.fromObject(a.Wxi)),o.Wxiw=cr(t.G1,e.fromObject(a.Wxiw)),o}(await Wn(e.curve),e),`[\n    { type: 'slice', cell: beginCell().storeBuffer(Buffer.from('${e.A}', 'hex')).endCell() },\n    { type: 'slice', cell: beginCell().storeBuffer(Buffer.from('${e.B}', 'hex')).endCell() },\n    { type: 'slice', cell: beginCell().storeBuffer(Buffer.from('${e.C}', 'hex')).endCell() },\n    { type: 'slice', cell: beginCell().storeBuffer(Buffer.from('${e.Z}', 'hex')).endCell() },\n    { type: 'slice', cell: beginCell().storeBuffer(Buffer.from('${e.T1}', 'hex')).endCell() },\n    { type: 'slice', cell: beginCell().storeBuffer(Buffer.from('${e.T2}', 'hex')).endCell() },\n    { type: 'slice', cell: beginCell().storeBuffer(Buffer.from('${e.T3}', 'hex')).endCell() },\n    { type: 'int', value: ${e.eval_a.toString(10)}n },\n    { type: 'int', value: ${e.eval_b.toString(10)}n },\n    { type: 'int', value: ${e.eval_c.toString(10)}n },\n    { type: 'int', value: ${e.eval_s1.toString(10)}n },\n    { type: 'int', value: ${e.eval_s2.toString(10)}n },\n    { type: 'int', value: ${e.eval_zw.toString(10)}n },\n    { type: 'slice', cell: beginCell().storeBuffer(Buffer.from('${e.Wxi}', 'hex')).endCell() },\n    { type: 'slice', cell: beginCell().storeBuffer(Buffer.from('${e.Wxiw}', 'hex')).endCell() },\n    { type: 'cell', cell: publicInputsToDict([${o.map((t=>t.toString(10)+"n")).join(", ")}]) }\n]`}});function rr(t,a){return[t,0,0,a.one,a.zero,a.zero,a.zero,a.zero]}function dr(t,a,e,o,i,n,l,c){return[t,a,e,o,i,n,l,c]}function ur(t,a,e,o,i,n,l,c,s){return[t,a,e,o,i,n,l,c]}class _r{constructor(t,a,e,o,i){this.Fr=t,this.logger=i,this.fnGetAdditionConstraint=e,this.fnGetMultiplicationConstraint=o}processR1csConstraint(t,a,e,o){this.normalizeLinearCombination(a),this.normalizeLinearCombination(e),this.normalizeLinearCombination(o);const i=this.getLinearCombinationType(a),n=this.getLinearCombinationType(e);if(0===i||0===n)return this.processR1csAdditionConstraint(t,o);if(1===i){const i=this.joinLinearCombinations(e,o,a[0]);return this.processR1csAdditionConstraint(t,i)}if(1===n){const i=this.joinLinearCombinations(a,o,e[0]);return this.processR1csAdditionConstraint(t,i)}return this.processR1csMultiplicationConstraint(t,a,e,o)}getLinearCombinationType(t){let a=this.Fr.zero,e=0;const o=Object.keys(t);for(let i=0;i<o.length;i++)0n==t[o[i]]?delete t[o[i]]:0==o[i]?a=this.Fr.add(a,t[o[i]]):e++;return e>0?2:this.Fr.isZero(a)?0:1}normalizeLinearCombination(t){const a=Object.keys(t);for(let e=0;e<a.length;e++)this.Fr.isZero(t[a[e]])&&delete t[a[e]];return t}joinLinearCombinations(t,a,e){const o={};for(let a in t)void 0===o[a]?o[a]=this.Fr.mul(e,t[a]):o[a]=this.Fr.add(o[a],this.Fr.mul(e,t[a]));for(let t in a)void 0===o[t]?o[t]=a[t]:o[t]=this.Fr.add(o[t],a[t]);return this.normalizeLinearCombination(o)}reduceCoefs(t,a,e,o,i){const n={k:this.Fr.zero,signals:[],coefs:[]},l=[];for(let t in o)0==t?n.k=this.Fr.add(n.k,o[t]):0n!=o[t]&&l.push([Number(t),o[t]]);for(;l.length>i;){const o=l.shift(),i=l.shift(),n=t.nVars++,c=this.fnGetAdditionConstraint(o[0],i[0],n,this.Fr.neg(o[1]),this.Fr.neg(i[1]),this.Fr.zero,this.Fr.one,this.Fr.zero);a.push(c),e.push([o[0],i[0],o[1],i[1]]),l.push([n,this.Fr.one])}for(let t=0;t<l.length;t++)n.signals[t]=l[t][0],n.coefs[t]=l[t][1];for(;n.coefs.length<i;)n.signals.push(0),n.coefs.push(this.Fr.zero);return n}processR1csAdditionConstraint(t,a){const e=[],o=[],i=this.reduceCoefs(t,e,o,a,3),n=this.fnGetAdditionConstraint(i.signals[0],i.signals[1],i.signals[2],i.coefs[0],i.coefs[1],this.Fr.zero,i.coefs[2],i.k);return e.push(n),[e,o]}processR1csMultiplicationConstraint(t,a,e,o){const i=[],n=[],l=this.reduceCoefs(t,i,n,a,1),c=this.reduceCoefs(t,i,n,e,1),s=this.reduceCoefs(t,i,n,o,1),r=this.fnGetMultiplicationConstraint(l.signals[0],c.signals[0],s.signals[0],this.Fr.mul(l.coefs[0],c.k),this.Fr.mul(l.k,c.coefs[0]),this.Fr.mul(l.coefs[0],c.coefs[0]),this.Fr.neg(s.coefs[0]),this.Fr.sub(this.Fr.mul(l.k,c.k),s.k));return i.push(r),[i,n]}}class gr{constructor(t,a,e){this.n=t,this.polynomials=Array(t).fill(void 0),this.curve=a,this.Fr=a.Fr,this.G1=a.G1,this.logger=e}addPolynomial(t,a){if(t>this.n-1)throw new Error("CPolynomial:addPolynomial, cannot add a polynomial to a position greater than n-1");this.polynomials[t]=a}degree(){let t=this.polynomials.map(((t,a)=>void 0===t?0:t.degree()*this.n+a));return Math.max(...t)}getPolynomial(){let t=this.polynomials.map((t=>void 0===t?0:t.degree()));const a=this.degree(),e=2**(Ol(a-1)+1),o=this.Fr.n8;let i=new Js(new xn(e*o),this.curve,this.logger);for(let e=0;e<a;e++){const a=e*o,n=a*this.n;for(let l=0;l<this.n;l++)void 0!==this.polynomials[l]&&e<=t[l]&&i.coef.set(this.polynomials[l].coef.slice(a,a+o),n+l*o)}return i}async multiExponentiation(t,a){let e=this.getPolynomial();const o=e.coef.byteLength/this.Fr.n8,i=t.slice(0,o*this.G1.F.n8*2),n=await this.Fr.batchFromMontgomery(e.coef);let l=await this.G1.multiExpAffine(i,n,this.logger,a);return l=this.G1.toAffine(l),l}}var fr,pr={exports:{}};
/**
     * [js-sha3]{@link https://github.com/emn178/js-sha3}
     *
     * @version 0.8.0
     * @author Chen, Yi-Cyuan [emn178@gmail.com]
     * @copyright Chen, Yi-Cyuan 2015-2018
     * @license MIT
     */fr=pr,function(){var t="input is invalid type",a="object"==typeof window,e=a?window:{};e.JS_SHA3_NO_WINDOW&&(a=!1);var o=!a&&"object"==typeof self;!e.JS_SHA3_NO_NODE_JS&&"object"==typeof process&&process.versions&&process.versions.node?e=V:o&&(e=self);var i=!e.JS_SHA3_NO_COMMON_JS&&fr.exports,n=!e.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!=typeof ArrayBuffer,l="0123456789abcdef".split(""),c=[4,1024,262144,67108864],s=[0,8,16,24],r=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],d=[224,256,384,512],u=[128,256],_=["hex","buffer","arrayBuffer","array","digest"],g={128:168,256:136};!e.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(t){return"[object Array]"===Object.prototype.toString.call(t)}),!n||!e.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(t){return"object"==typeof t&&t.buffer&&t.buffer.constructor===ArrayBuffer});for(var f=function(t,a,e){return function(o){return new v(t,a,t).update(o)[e]()}},p=function(t,a,e){return function(o,i){return new v(t,a,i).update(o)[e]()}},h=function(t,a,e){return function(a,o,i,n){return y["cshake"+t].update(a,o,i,n)[e]()}},m=function(t,a,e){return function(a,o,i,n){return y["kmac"+t].update(a,o,i,n)[e]()}},L=function(t,a,e,o){for(var i=0;i<_.length;++i){var n=_[i];t[n]=a(e,o,n)}return t},b=function(t,a){var e=f(t,a,"hex");return e.create=function(){return new v(t,a,t)},e.update=function(t){return e.create().update(t)},L(e,f,t,a)},w=[{name:"keccak",padding:[1,256,65536,16777216],bits:d,createMethod:b},{name:"sha3",padding:[6,1536,393216,100663296],bits:d,createMethod:b},{name:"shake",padding:[31,7936,2031616,520093696],bits:u,createMethod:function(t,a){var e=p(t,a,"hex");return e.create=function(e){return new v(t,a,e)},e.update=function(t,a){return e.create(a).update(t)},L(e,p,t,a)}},{name:"cshake",padding:c,bits:u,createMethod:function(t,a){var e=g[t],o=h(t,0,"hex");return o.create=function(o,i,n){return i||n?new v(t,a,o).bytepad([i,n],e):y["shake"+t].create(o)},o.update=function(t,a,e,i){return o.create(a,e,i).update(t)},L(o,h,t,a)}},{name:"kmac",padding:c,bits:u,createMethod:function(t,a){var e=g[t],o=m(t,0,"hex");return o.create=function(o,i,n){return new S(t,a,i).bytepad(["KMAC",n],e).bytepad([o],e)},o.update=function(t,a,e,i){return o.create(t,e,i).update(a)},L(o,m,t,a)}}],y={},A=[],C=0;C<w.length;++C)for(var x=w[C],F=x.bits,I=0;I<F.length;++I){var B=x.name+"_"+F[I];if(A.push(B),y[B]=x.createMethod(F[I],x.padding),"sha3"!==x.name){var E=x.name+F[I];A.push(E),y[E]=y[B]}}function v(t,a,e){this.blocks=[],this.s=[],this.padding=a,this.outputBits=e,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(t<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=e>>5,this.extraBytes=(31&e)>>3;for(var o=0;o<50;++o)this.s[o]=0}function S(t,a,e){v.call(this,t,a,e)}v.prototype.update=function(a){if(this.finalized)throw new Error("finalize already called");var e,o=typeof a;if("string"!==o){if("object"!==o)throw new Error(t);if(null===a)throw new Error(t);if(n&&a.constructor===ArrayBuffer)a=new Uint8Array(a);else if(!(Array.isArray(a)||n&&ArrayBuffer.isView(a)))throw new Error(t);e=!0}for(var i,l,c=this.blocks,r=this.byteCount,d=a.length,u=this.blockCount,_=0,g=this.s;_<d;){if(this.reset)for(this.reset=!1,c[0]=this.block,i=1;i<u+1;++i)c[i]=0;if(e)for(i=this.start;_<d&&i<r;++_)c[i>>2]|=a[_]<<s[3&i++];else for(i=this.start;_<d&&i<r;++_)(l=a.charCodeAt(_))<128?c[i>>2]|=l<<s[3&i++]:l<2048?(c[i>>2]|=(192|l>>6)<<s[3&i++],c[i>>2]|=(128|63&l)<<s[3&i++]):l<55296||l>=57344?(c[i>>2]|=(224|l>>12)<<s[3&i++],c[i>>2]|=(128|l>>6&63)<<s[3&i++],c[i>>2]|=(128|63&l)<<s[3&i++]):(l=65536+((1023&l)<<10|1023&a.charCodeAt(++_)),c[i>>2]|=(240|l>>18)<<s[3&i++],c[i>>2]|=(128|l>>12&63)<<s[3&i++],c[i>>2]|=(128|l>>6&63)<<s[3&i++],c[i>>2]|=(128|63&l)<<s[3&i++]);if(this.lastByteIndex=i,i>=r){for(this.start=i-r,this.block=c[u],i=0;i<u;++i)g[i]^=c[i];P(g),this.reset=!0}else this.start=i}return this},v.prototype.encode=function(t,a){var e=255&t,o=1,i=[e];for(e=255&(t>>=8);e>0;)i.unshift(e),e=255&(t>>=8),++o;return a?i.push(o):i.unshift(o),this.update(i),i.length},v.prototype.encodeString=function(a){var e,o=typeof a;if("string"!==o){if("object"!==o)throw new Error(t);if(null===a)throw new Error(t);if(n&&a.constructor===ArrayBuffer)a=new Uint8Array(a);else if(!(Array.isArray(a)||n&&ArrayBuffer.isView(a)))throw new Error(t);e=!0}var i=0,l=a.length;if(e)i=l;else for(var c=0;c<a.length;++c){var s=a.charCodeAt(c);s<128?i+=1:s<2048?i+=2:s<55296||s>=57344?i+=3:(s=65536+((1023&s)<<10|1023&a.charCodeAt(++c)),i+=4)}return i+=this.encode(8*i),this.update(a),i},v.prototype.bytepad=function(t,a){for(var e=this.encode(a),o=0;o<t.length;++o)e+=this.encodeString(t[o]);var i=a-e%a,n=[];return n.length=i,this.update(n),this},v.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var t=this.blocks,a=this.lastByteIndex,e=this.blockCount,o=this.s;if(t[a>>2]|=this.padding[3&a],this.lastByteIndex===this.byteCount)for(t[0]=t[e],a=1;a<e+1;++a)t[a]=0;for(t[e-1]|=2147483648,a=0;a<e;++a)o[a]^=t[a];P(o)}},v.prototype.toString=v.prototype.hex=function(){this.finalize();for(var t,a=this.blockCount,e=this.s,o=this.outputBlocks,i=this.extraBytes,n=0,c=0,s="";c<o;){for(n=0;n<a&&c<o;++n,++c)t=e[n],s+=l[t>>4&15]+l[15&t]+l[t>>12&15]+l[t>>8&15]+l[t>>20&15]+l[t>>16&15]+l[t>>28&15]+l[t>>24&15];c%a==0&&(P(e),n=0)}return i&&(t=e[n],s+=l[t>>4&15]+l[15&t],i>1&&(s+=l[t>>12&15]+l[t>>8&15]),i>2&&(s+=l[t>>20&15]+l[t>>16&15])),s},v.prototype.arrayBuffer=function(){this.finalize();var t,a=this.blockCount,e=this.s,o=this.outputBlocks,i=this.extraBytes,n=0,l=0,c=this.outputBits>>3;t=i?new ArrayBuffer(o+1<<2):new ArrayBuffer(c);for(var s=new Uint32Array(t);l<o;){for(n=0;n<a&&l<o;++n,++l)s[l]=e[n];l%a==0&&P(e)}return i&&(s[n]=e[n],t=t.slice(0,c)),t},v.prototype.buffer=v.prototype.arrayBuffer,v.prototype.digest=v.prototype.array=function(){this.finalize();for(var t,a,e=this.blockCount,o=this.s,i=this.outputBlocks,n=this.extraBytes,l=0,c=0,s=[];c<i;){for(l=0;l<e&&c<i;++l,++c)t=c<<2,a=o[l],s[t]=255&a,s[t+1]=a>>8&255,s[t+2]=a>>16&255,s[t+3]=a>>24&255;c%e==0&&P(o)}return n&&(t=c<<2,a=o[l],s[t]=255&a,n>1&&(s[t+1]=a>>8&255),n>2&&(s[t+2]=a>>16&255)),s},S.prototype=new v,S.prototype.finalize=function(){return this.encode(this.outputBits,!0),v.prototype.finalize.call(this)};var P=function(t){var a,e,o,i,n,l,c,s,d,u,_,g,f,p,h,m,L,b,w,y,A,C,x,F,I,B,E,v,S,P,O,q,G,z,T,M,U,Q,k,R,N,D,$,j,V,K,H,Z,W,Y,J,X,tt,at,et,ot,it,nt,lt,ct,st,rt,dt;for(o=0;o<48;o+=2)i=t[0]^t[10]^t[20]^t[30]^t[40],n=t[1]^t[11]^t[21]^t[31]^t[41],l=t[2]^t[12]^t[22]^t[32]^t[42],c=t[3]^t[13]^t[23]^t[33]^t[43],s=t[4]^t[14]^t[24]^t[34]^t[44],d=t[5]^t[15]^t[25]^t[35]^t[45],u=t[6]^t[16]^t[26]^t[36]^t[46],_=t[7]^t[17]^t[27]^t[37]^t[47],a=(g=t[8]^t[18]^t[28]^t[38]^t[48])^(l<<1|c>>>31),e=(f=t[9]^t[19]^t[29]^t[39]^t[49])^(c<<1|l>>>31),t[0]^=a,t[1]^=e,t[10]^=a,t[11]^=e,t[20]^=a,t[21]^=e,t[30]^=a,t[31]^=e,t[40]^=a,t[41]^=e,a=i^(s<<1|d>>>31),e=n^(d<<1|s>>>31),t[2]^=a,t[3]^=e,t[12]^=a,t[13]^=e,t[22]^=a,t[23]^=e,t[32]^=a,t[33]^=e,t[42]^=a,t[43]^=e,a=l^(u<<1|_>>>31),e=c^(_<<1|u>>>31),t[4]^=a,t[5]^=e,t[14]^=a,t[15]^=e,t[24]^=a,t[25]^=e,t[34]^=a,t[35]^=e,t[44]^=a,t[45]^=e,a=s^(g<<1|f>>>31),e=d^(f<<1|g>>>31),t[6]^=a,t[7]^=e,t[16]^=a,t[17]^=e,t[26]^=a,t[27]^=e,t[36]^=a,t[37]^=e,t[46]^=a,t[47]^=e,a=u^(i<<1|n>>>31),e=_^(n<<1|i>>>31),t[8]^=a,t[9]^=e,t[18]^=a,t[19]^=e,t[28]^=a,t[29]^=e,t[38]^=a,t[39]^=e,t[48]^=a,t[49]^=e,p=t[0],h=t[1],K=t[11]<<4|t[10]>>>28,H=t[10]<<4|t[11]>>>28,v=t[20]<<3|t[21]>>>29,S=t[21]<<3|t[20]>>>29,ct=t[31]<<9|t[30]>>>23,st=t[30]<<9|t[31]>>>23,D=t[40]<<18|t[41]>>>14,$=t[41]<<18|t[40]>>>14,z=t[2]<<1|t[3]>>>31,T=t[3]<<1|t[2]>>>31,m=t[13]<<12|t[12]>>>20,L=t[12]<<12|t[13]>>>20,Z=t[22]<<10|t[23]>>>22,W=t[23]<<10|t[22]>>>22,P=t[33]<<13|t[32]>>>19,O=t[32]<<13|t[33]>>>19,rt=t[42]<<2|t[43]>>>30,dt=t[43]<<2|t[42]>>>30,at=t[5]<<30|t[4]>>>2,et=t[4]<<30|t[5]>>>2,M=t[14]<<6|t[15]>>>26,U=t[15]<<6|t[14]>>>26,b=t[25]<<11|t[24]>>>21,w=t[24]<<11|t[25]>>>21,Y=t[34]<<15|t[35]>>>17,J=t[35]<<15|t[34]>>>17,q=t[45]<<29|t[44]>>>3,G=t[44]<<29|t[45]>>>3,F=t[6]<<28|t[7]>>>4,I=t[7]<<28|t[6]>>>4,ot=t[17]<<23|t[16]>>>9,it=t[16]<<23|t[17]>>>9,Q=t[26]<<25|t[27]>>>7,k=t[27]<<25|t[26]>>>7,y=t[36]<<21|t[37]>>>11,A=t[37]<<21|t[36]>>>11,X=t[47]<<24|t[46]>>>8,tt=t[46]<<24|t[47]>>>8,j=t[8]<<27|t[9]>>>5,V=t[9]<<27|t[8]>>>5,B=t[18]<<20|t[19]>>>12,E=t[19]<<20|t[18]>>>12,nt=t[29]<<7|t[28]>>>25,lt=t[28]<<7|t[29]>>>25,R=t[38]<<8|t[39]>>>24,N=t[39]<<8|t[38]>>>24,C=t[48]<<14|t[49]>>>18,x=t[49]<<14|t[48]>>>18,t[0]=p^~m&b,t[1]=h^~L&w,t[10]=F^~B&v,t[11]=I^~E&S,t[20]=z^~M&Q,t[21]=T^~U&k,t[30]=j^~K&Z,t[31]=V^~H&W,t[40]=at^~ot&nt,t[41]=et^~it&lt,t[2]=m^~b&y,t[3]=L^~w&A,t[12]=B^~v&P,t[13]=E^~S&O,t[22]=M^~Q&R,t[23]=U^~k&N,t[32]=K^~Z&Y,t[33]=H^~W&J,t[42]=ot^~nt&ct,t[43]=it^~lt&st,t[4]=b^~y&C,t[5]=w^~A&x,t[14]=v^~P&q,t[15]=S^~O&G,t[24]=Q^~R&D,t[25]=k^~N&$,t[34]=Z^~Y&X,t[35]=W^~J&tt,t[44]=nt^~ct&rt,t[45]=lt^~st&dt,t[6]=y^~C&p,t[7]=A^~x&h,t[16]=P^~q&F,t[17]=O^~G&I,t[26]=R^~D&z,t[27]=N^~$&T,t[36]=Y^~X&j,t[37]=J^~tt&V,t[46]=ct^~rt&at,t[47]=st^~dt&et,t[8]=C^~p&m,t[9]=x^~h&L,t[18]=q^~F&B,t[19]=G^~I&E,t[28]=D^~z&M,t[29]=$^~T&U,t[38]=X^~j&K,t[39]=tt^~V&H,t[48]=rt^~at&ot,t[49]=dt^~et&it,t[0]^=r[o],t[1]^=r[o+1]};if(i)fr.exports=y;else for(C=0;C<A.length;++C)e[A[C]]=y[A[C]]}();var hr=pr.exports;const{keccak256:mr}=hr;class Lr{constructor(t){this.G1=t.G1,this.Fr=t.Fr,this.reset()}reset(){this.data=[]}addPolCommitment(t){this.data.push({type:0,data:t})}addScalar(t){this.data.push({type:1,data:t})}getChallenge(){if(0===this.data.length)throw new Error("Keccak256Transcript: No data to generate a transcript");let t=0,a=0;this.data.forEach((e=>0===e.type?t++:a++));let e=new Uint8Array(a*this.Fr.n8+t*this.G1.F.n8*2),o=0;for(let t=0;t<this.data.length;t++)0===this.data[t].type?(this.G1.toRprUncompressed(e,o,this.data[t].data),o+=2*this.G1.F.n8):(this.Fr.toRprBE(e,o,this.data[t].data),o+=this.Fr.n8);const i=Dn.fromRprBE(new Uint8Array(mr.arrayBuffer(e)));return this.Fr.e(i)}}const{stringifyBigInts:br}=$n;async function wr(t,a,e){e&&e.info("FFLONK PROVER STARTED"),e&&e.info("> Reading witness file");const{fd:o,sections:i}=await ze(a,"wtns",2),n=await Fc(o,i);e&&e.info("> Reading zkey file");const{fd:l,sections:c}=await ze(t,"zkey",2),s=await Lc(l,c);if(s.protocolId!==Hl)throw new Error("zkey file is not fflonk");if(!Dn.eq(s.r,n.q))throw new Error("Curve of the witness does not match the curve of the proving key");if(n.nWitness!==s.nVars-s.nAdditions)throw new Error(`Invalid witness length. Circuit: ${s.nVars}, witness: ${n.nWitness}, ${s.nAdditions}`);const r=s.curve,d=r.Fr,u=r.Fr.n8,_=2*r.G1.F.n8,g=s.domainSize*u;e&&(e.info("----------------------------"),e.info("  FFLONK PROVE SETTINGS"),e.info(`  Curve:         ${r.name}`),e.info(`  Circuit power: ${s.power}`),e.info(`  Domain size:   ${s.domainSize}`),e.info(`  Vars:          ${s.nVars}`),e.info(`  Public vars:   ${s.nPublic}`),e.info(`  Constraints:   ${s.nConstraints}`),e.info(`  Additions:     ${s.nAdditions}`),e.info("----------------------------")),e&&e.info("> Reading witness file data");const f=await $e(o,i,2);await o.close(),f.set(d.zero,0);const p=new xn(s.nAdditions*u);let h={},m={},L={},b={},w={},y={},A=new Us(r,e);e&&e.info(`> Reading Section ${Jl}. Additions`),await async function(){e&&e.info("··· Computing additions");const t=await $e(l,c,Jl),a=8+2*u;for(let o=0;o<s.nAdditions;o++){e&&0!==o&&o%1e5==0&&e.info(`    addition ${o}/${s.nAdditions}`);let i=o*a;const n=I(t,i);i+=4;const l=I(t,i);i+=4;const c=t.slice(i,i+u);i+=u;const r=t.slice(i,i+u),_=B(n),g=B(l),f=d.add(d.mul(c,_),d.mul(r,g));p.set(f,u*o)}}(),e&&e.info(`> Reading Sections ${cc},${sc},${rc}. Sigma1, Sigma2 & Sigma 3`),e&&e.info("··· Reading Sigma polynomials "),m.Sigma1=new Js(new xn(g),r,e),m.Sigma2=new Js(new xn(g),r,e),m.Sigma3=new Js(new xn(g),r,e),await l.readToBuffer(m.Sigma1.coef,0,g,c[cc][0].p),await l.readToBuffer(m.Sigma2.coef,0,g,c[sc][0].p),await l.readToBuffer(m.Sigma3.coef,0,g,c[rc][0].p),e&&e.info("··· Reading Sigma evaluations"),L.Sigma1=new Xs(new xn(4*g),r,e),L.Sigma2=new Xs(new xn(4*g),r,e),L.Sigma3=new Xs(new xn(4*g),r,e),await l.readToBuffer(L.Sigma1.eval,0,4*g,c[cc][0].p+g),await l.readToBuffer(L.Sigma2.eval,0,4*g,c[sc][0].p+g),await l.readToBuffer(L.Sigma3.eval,0,4*g,c[rc][0].p+g),e&&e.info(`> Reading Section ${uc}. Powers of Tau`);const C=new xn(16*s.domainSize*_);await l.readToBuffer(C,0,(9*s.domainSize+18)*_,c[uc][0].p),globalThis.gc&&globalThis.gc(),e&&e.info(""),e&&e.info("> ROUND 1"),await async function(){w.b=[];for(let t=1;t<=9;t++)w.b[t]=d.random();e&&e.info("> Computing A, B, C wire polynomials");await async function(){e&&e.info("··· Reading data from zkey file");h.A=new xn(g),h.B=new xn(g),h.C=new xn(g);const t=await $e(l,c,Xl),a=await $e(l,c,tc),o=await $e(l,c,ac);for(let e=0;e<s.nConstraints;e++){const i=e*u,n=4*e,l=I(t,n);h.A.set(B(l),i);const c=I(a,n);h.B.set(B(c),i);const s=I(o,n);h.C.set(B(s),i)}h.A.set(w.b[1],g-64),h.A.set(w.b[2],g-32),h.B.set(w.b[3],g-64),h.B.set(w.b[4],g-32),h.C.set(w.b[5],g-64),h.C.set(w.b[6],g-32),h.A=await d.batchToMontgomery(h.A),h.B=await d.batchToMontgomery(h.B),h.C=await d.batchToMontgomery(h.C),e&&e.info("··· Computing A ifft");m.A=await Js.fromEvaluations(h.A,r,e),e&&e.info("··· Computing B ifft");m.B=await Js.fromEvaluations(h.B,r,e),e&&e.info("··· Computing C ifft");m.C=await Js.fromEvaluations(h.C,r,e),e&&e.info("··· Computing A fft");L.A=await Xs.fromPolynomial(m.A,4,r,e),e&&e.info("··· Computing B fft");L.B=await Xs.fromPolynomial(m.B,4,r,e),e&&e.info("··· Computing C fft");if(L.C=await Xs.fromPolynomial(m.C,4,r,e),m.A.degree()>=s.domainSize)throw new Error("A Polynomial is not well calculated");if(m.B.degree()>=s.domainSize)throw new Error("B Polynomial is not well calculated");if(m.C.degree()>=s.domainSize)throw new Error("C Polynomial is not well calculated")}(),e&&e.info("> Computing T0 polynomial");await async function(){e&&e.info(`··· Reading sections ${ec}, ${oc}, ${ic}, ${nc}, ${lc}. Q selectors`);L.QL=new Xs(new xn(4*g),r,e),L.QR=new Xs(new xn(4*g),r,e),L.QM=new Xs(new xn(4*g),r,e),L.QO=new Xs(new xn(4*g),r,e),L.QC=new Xs(new xn(4*g),r,e),await l.readToBuffer(L.QL.eval,0,4*g,c[ec][0].p+g),await l.readToBuffer(L.QR.eval,0,4*g,c[oc][0].p+g),await l.readToBuffer(L.QM.eval,0,4*g,c[ic][0].p+g),await l.readToBuffer(L.QO.eval,0,4*g,c[nc][0].p+g),await l.readToBuffer(L.QC.eval,0,4*g,c[lc][0].p+g);const t=await $e(l,c,dc);L.lagrange1=new Xs(t,r,e),h.T0=new xn(4*g),e&&e.info("··· Computing T0 evaluations");for(let t=0;t<4*s.domainSize;t++){e&&0!==t&&t%1e5==0&&e.info(`      T0 evaluation ${t}/${4*s.domainSize}`);const a=L.A.getEvaluation(t),o=L.B.getEvaluation(t),i=L.C.getEvaluation(t),n=L.QL.getEvaluation(t),l=L.QR.getEvaluation(t),c=L.QM.getEvaluation(t),r=L.QO.getEvaluation(t),_=L.QC.getEvaluation(t);let g=d.zero;for(let a=0;a<s.nPublic;a++){const e=5*a*s.domainSize+s.domainSize+t,o=L.lagrange1.getEvaluation(e),i=h.A.slice(a*u,(a+1)*u);g=d.sub(g,d.mul(o,i))}const f=d.mul(a,n),p=d.mul(o,l),m=d.mul(d.mul(a,o),c),b=d.mul(i,r),w=d.add(f,d.add(p,d.add(m,d.add(b,d.add(_,g)))));h.T0.set(w,t*u)}e&&e.info("buffer T0: "+h.T0.byteLength/u);e&&e.info("··· Computing T0 ifft");m.T0=await Js.fromEvaluations(h.T0,r,e),e&&e.info("T0 length: "+m.T0.length());e&&e.info("T0 degree: "+m.T0.degree());e&&e.info("··· Computing T0 / ZH");if(m.T0.divByZerofier(s.domainSize,d.one),m.T0.degree()>=2*s.domainSize-2)throw new Error(`T0 Polynomial is not well calculated (degree is ${m.T0.degree()} and must be less than ${2*s.domainSize+2}`);delete h.T0}(),e&&e.info("> Computing C1 polynomial");await async function(){let t=new gr(4,r,e);if(t.addPolynomial(0,m.A),t.addPolynomial(1,m.B),t.addPolynomial(2,m.C),t.addPolynomial(3,m.T0),m.C1=t.getPolynomial(),m.C1.degree()>=8*s.domainSize-8)throw new Error("C1 Polynomial is not well calculated")}(),e&&e.info("> Computing C1 multi exponentiation");let t=await m.C1.multiExponentiation(C,"C1");return A.addPolynomial("C1",t),0}(),delete m.T0,delete L.QL,delete L.QR,delete L.QM,delete L.QO,delete L.QC,globalThis.gc&&globalThis.gc(),e&&e.info("> ROUND 2"),await async function(){e&&e.info("> Computing challenges beta and gamma");const t=new Lr(r);t.addPolCommitment(s.C0);for(let a=0;a<s.nPublic;a++)t.addScalar(h.A.slice(a*u,a*u+u));t.addPolCommitment(A.getPolynomial("C1")),w.beta=t.getChallenge(),e&&e.info("··· challenges.beta: "+d.toString(w.beta));t.reset(),t.addScalar(w.beta),w.gamma=t.getChallenge(),e&&e.info("··· challenges.gamma: "+d.toString(w.gamma));e&&e.info("> Computing Z polynomial");await async function(){e&&e.info("··· Computing Z evaluations");let t=new xn(g),a=new xn(g);t.set(d.one,0),a.set(d.one,0);let o=d.one;for(let i=0;i<s.domainSize;i++){e&&0!==i&&i%1e5==0&&e.info(`    Z evaluation ${i}/${s.domainSize}`);const n=i*u,l=d.mul(w.beta,o);let c=h.A.slice(n,n+u);c=d.add(c,l),c=d.add(c,w.gamma);let r=h.B.slice(n,n+u);r=d.add(r,d.mul(s.k1,l)),r=d.add(r,w.gamma);let _=h.C.slice(n,n+u);_=d.add(_,d.mul(s.k2,l)),_=d.add(_,w.gamma);let g=d.mul(c,d.mul(r,_)),f=h.A.slice(n,n+u);f=d.add(f,d.mul(w.beta,L.Sigma1.getEvaluation(4*i))),f=d.add(f,w.gamma);let p=h.B.slice(n,n+u);p=d.add(p,d.mul(w.beta,L.Sigma2.getEvaluation(4*i))),p=d.add(p,w.gamma);let m=h.C.slice(n,n+u);m=d.add(m,d.mul(w.beta,L.Sigma3.getEvaluation(4*i))),m=d.add(m,w.gamma);let b=d.mul(f,d.mul(p,m));g=d.mul(t.slice(n,n+u),g),t.set(g,(i+1)%s.domainSize*u),b=d.mul(a.slice(n,n+u),b),a.set(b,(i+1)%s.domainSize*u),o=d.mul(o,d.w[s.power])}a=await d.batchInverse(a);for(let e=0;e<s.domainSize;e++){const o=e*u,i=d.mul(t.slice(o,o+u),a.slice(o,o+u));t.set(i,o)}if(h.Z=t,!d.eq(t.slice(0,u),d.one))throw new Error("Copy constraints does not match");e&&e.info("··· Computing Z ifft");m.Z=await Js.fromEvaluations(h.Z,r,e),e&&e.info("··· Computing Z fft");if(L.Z=await Xs.fromPolynomial(m.Z,4,r,e),m.Z.blindCoefficients([w.b[9],w.b[8],w.b[7]]),m.Z.degree()>=s.domainSize+3)throw new Error("Z Polynomial is not well calculated");delete h.Z}(),e&&e.info("> Computing T1 polynomial");await async function(){e&&e.info("··· Computing T1 evaluations");h.T1=new xn(2*g),h.T1z=new xn(2*g);let t=d.one;for(let a=0;a<2*s.domainSize;a++){e&&0!==a&&a%1e5==0&&e.info(`    T1 evaluation ${a}/${4*s.domainSize}`);const o=d.square(t),i=L.Z.getEvaluation(2*a),n=d.add(d.add(d.mul(w.b[7],o),d.mul(w.b[8],t)),w.b[9]),l=L.lagrange1.getEvaluation(s.domainSize+2*a);let c=d.mul(d.sub(i,d.one),l),r=d.mul(n,l);h.T1.set(c,a*u),h.T1z.set(r,a*u),t=d.mul(t,d.w[s.power+1])}e&&e.info("··· Computing T1 ifft");m.T1=await Js.fromEvaluations(h.T1,r,e),m.T1.divByZerofier(s.domainSize,d.one),e&&e.info("··· Computing T1z ifft");if(m.T1z=await Js.fromEvaluations(h.T1z,r,e),m.T1.add(m.T1z),m.T1.degree()>=s.domainSize+2)throw new Error("T1 Polynomial is not well calculated");delete h.T1,delete h.T1z,delete m.T1z}(),e&&e.info("> Computing T2 polynomial");await async function(){e&&e.info("··· Computing T2 evaluations");h.T2=new xn(4*g),h.T2z=new xn(4*g);let t=d.one;for(let a=0;a<4*s.domainSize;a++){e&&0!==a&&a%1e5==0&&e.info(`    T2 evaluation ${a}/${4*s.domainSize}`);const o=d.square(t),i=d.mul(t,d.w[s.power]),n=d.square(i),l=L.A.getEvaluation(a),c=L.B.getEvaluation(a),r=L.C.getEvaluation(a),_=L.Z.getEvaluation(a),g=L.Z.getEvaluation((4*s.domainSize+4+a)%(4*s.domainSize)),f=d.add(d.add(d.mul(w.b[7],o),d.mul(w.b[8],t)),w.b[9]),p=d.add(d.add(d.mul(w.b[7],n),d.mul(w.b[8],i)),w.b[9]),m=L.Sigma1.getEvaluation(a),b=L.Sigma2.getEvaluation(a),y=L.Sigma3.getEvaluation(a),A=d.mul(w.beta,t);let C=d.add(l,A);C=d.add(C,w.gamma);let x=d.add(c,d.mul(A,s.k1));x=d.add(x,w.gamma);let F=d.add(r,d.mul(A,s.k2));F=d.add(F,w.gamma);let I=d.mul(d.mul(d.mul(C,x),F),_),B=d.mul(d.mul(d.mul(C,x),F),f),E=d.add(l,d.mul(w.beta,m));E=d.add(E,w.gamma);let v=d.add(c,d.mul(w.beta,b));v=d.add(v,w.gamma);let S=d.add(r,d.mul(w.beta,y));S=d.add(S,w.gamma);let P=d.mul(d.mul(d.mul(E,v),S),g),O=d.mul(d.mul(d.mul(E,v),S),p),q=d.sub(I,P),G=d.sub(B,O);h.T2.set(q,a*u),h.T2z.set(G,a*u),t=d.mul(t,d.w[s.power+2])}e&&e.info("··· Computing T2 ifft");m.T2=await Js.fromEvaluations(h.T2,r,e),e&&e.info("··· Computing T2 / ZH");m.T2.divByZerofier(s.domainSize,d.one),e&&e.info("··· Computing T2z ifft");if(m.T2z=await Js.fromEvaluations(h.T2z,r,e),m.T2.add(m.T2z),m.T2.degree()>=3*s.domainSize)throw new Error("T2 Polynomial is not well calculated");delete h.T2,delete h.T2z,delete m.T2z}(),e&&e.info("> Computing C2 polynomial");await async function(){let t=new gr(3,r,e);if(t.addPolynomial(0,m.Z),t.addPolynomial(1,m.T1),t.addPolynomial(2,m.T2),m.C2=t.getPolynomial(),m.C2.degree()>=9*s.domainSize)throw new Error("C2 Polynomial is not well calculated")}(),e&&e.info("> Computing C2 multi exponentiation");let a=await m.C2.multiExponentiation(C,"C2");return A.addPolynomial("C2",a),0}(),delete h.A,delete h.B,delete h.C,delete L.A,delete L.B,delete L.C,delete L.Sigma1,delete L.Sigma2,delete L.Sigma3,delete L.lagrange1,delete L.Z,globalThis.gc&&globalThis.gc(),e&&e.info("> ROUND 3"),await async function(){e&&e.info("> Computing challenge xi");const t=new Lr(r);t.addScalar(w.gamma),t.addPolCommitment(A.getPolynomial("C2")),w.xiSeed=t.getChallenge();const a=d.square(w.xiSeed);y.w8=[],y.w8[0]=d.one;for(let t=1;t<8;t++)y.w8[t]=d.mul(y.w8[t-1],s.w8);y.w4=[],y.w4[0]=d.one;for(let t=1;t<4;t++)y.w4[t]=d.mul(y.w4[t-1],s.w4);y.w3=[],y.w3[0]=d.one,y.w3[1]=s.w3,y.w3[2]=d.square(s.w3),y.S0={},y.S0.h0w8=[],y.S0.h0w8[0]=d.mul(a,w.xiSeed);for(let t=1;t<8;t++)y.S0.h0w8[t]=d.mul(y.S0.h0w8[0],y.w8[t]);y.S1={},y.S1.h1w4=[],y.S1.h1w4[0]=d.square(y.S0.h0w8[0]);for(let t=1;t<4;t++)y.S1.h1w4[t]=d.mul(y.S1.h1w4[0],y.w4[t]);y.S2={},y.S2.h2w3=[],y.S2.h2w3[0]=d.mul(y.S1.h1w4[0],a),y.S2.h2w3[1]=d.mul(y.S2.h2w3[0],y.w3[1]),y.S2.h2w3[2]=d.mul(y.S2.h2w3[0],y.w3[2]),y.S2.h3w3=[],y.S2.h3w3[0]=d.mul(y.S2.h2w3[0],s.wr),y.S2.h3w3[1]=d.mul(y.S2.h3w3[0],y.w3[1]),y.S2.h3w3[2]=d.mul(y.S2.h3w3[0],y.w3[2]),w.xi=d.mul(d.square(y.S2.h2w3[0]),y.S2.h2w3[0]),e&&e.info("··· challenges.xi: "+d.toString(w.xi));m.QL=new Js(new xn(g),r,e),m.QR=new Js(new xn(g),r,e),m.QM=new Js(new xn(g),r,e),m.QO=new Js(new xn(g),r,e),m.QC=new Js(new xn(g),r,e),await l.readToBuffer(m.QL.coef,0,g,c[ec][0].p),await l.readToBuffer(m.QR.coef,0,g,c[oc][0].p),await l.readToBuffer(m.QM.coef,0,g,c[ic][0].p),await l.readToBuffer(m.QO.coef,0,g,c[nc][0].p),await l.readToBuffer(m.QC.coef,0,g,c[lc][0].p),e&&e.info("··· Computing evaluations");A.addEvaluation("ql",m.QL.evaluate(w.xi)),A.addEvaluation("qr",m.QR.evaluate(w.xi)),A.addEvaluation("qm",m.QM.evaluate(w.xi)),A.addEvaluation("qo",m.QO.evaluate(w.xi)),A.addEvaluation("qc",m.QC.evaluate(w.xi)),A.addEvaluation("s1",m.Sigma1.evaluate(w.xi)),A.addEvaluation("s2",m.Sigma2.evaluate(w.xi)),A.addEvaluation("s3",m.Sigma3.evaluate(w.xi)),A.addEvaluation("a",m.A.evaluate(w.xi)),A.addEvaluation("b",m.B.evaluate(w.xi)),A.addEvaluation("c",m.C.evaluate(w.xi)),A.addEvaluation("z",m.Z.evaluate(w.xi)),w.xiw=d.mul(w.xi,d.w[s.power]),A.addEvaluation("zw",m.Z.evaluate(w.xiw)),A.addEvaluation("t1w",m.T1.evaluate(w.xiw)),A.addEvaluation("t2w",m.T2.evaluate(w.xiw))}(),delete m.A,delete m.B,delete m.C,delete m.Z,delete m.T1,delete m.T2,delete m.Sigma1,delete m.Sigma2,delete m.Sigma3,delete m.QL,delete m.QR,delete m.QM,delete m.QC,delete m.QO,globalThis.gc&&globalThis.gc(),e&&e.info("> ROUND 4"),await async function(){e&&e.info("> Computing challenge alpha");const t=new Lr(r);t.addScalar(w.xiSeed),t.addScalar(A.getEvaluation("ql")),t.addScalar(A.getEvaluation("qr")),t.addScalar(A.getEvaluation("qm")),t.addScalar(A.getEvaluation("qo")),t.addScalar(A.getEvaluation("qc")),t.addScalar(A.getEvaluation("s1")),t.addScalar(A.getEvaluation("s2")),t.addScalar(A.getEvaluation("s3")),t.addScalar(A.getEvaluation("a")),t.addScalar(A.getEvaluation("b")),t.addScalar(A.getEvaluation("c")),t.addScalar(A.getEvaluation("z")),t.addScalar(A.getEvaluation("zw")),t.addScalar(A.getEvaluation("t1w")),t.addScalar(A.getEvaluation("t2w")),w.alpha=t.getChallenge(),e&&e.info("··· challenges.alpha: "+d.toString(w.alpha));e&&e.info("> Reading C0 polynomial");m.C0=new Js(new xn(8*g),r,e),await l.readToBuffer(m.C0.coef,0,8*g,c[_c][0].p),e&&e.info("> Computing R0 polynomial");(function(){if(m.R0=Js.lagrangePolynomialInterpolation([y.S0.h0w8[0],y.S0.h0w8[1],y.S0.h0w8[2],y.S0.h0w8[3],y.S0.h0w8[4],y.S0.h0w8[5],y.S0.h0w8[6],y.S0.h0w8[7]],[m.C0.evaluate(y.S0.h0w8[0]),m.C0.evaluate(y.S0.h0w8[1]),m.C0.evaluate(y.S0.h0w8[2]),m.C0.evaluate(y.S0.h0w8[3]),m.C0.evaluate(y.S0.h0w8[4]),m.C0.evaluate(y.S0.h0w8[5]),m.C0.evaluate(y.S0.h0w8[6]),m.C0.evaluate(y.S0.h0w8[7])],r),m.R0.degree()>7)throw new Error("R0 Polynomial is not well calculated")})(),e&&e.info("> Computing R1 polynomial");(function(){if(m.R1=Js.lagrangePolynomialInterpolation([y.S1.h1w4[0],y.S1.h1w4[1],y.S1.h1w4[2],y.S1.h1w4[3]],[m.C1.evaluate(y.S1.h1w4[0]),m.C1.evaluate(y.S1.h1w4[1]),m.C1.evaluate(y.S1.h1w4[2]),m.C1.evaluate(y.S1.h1w4[3])],r),m.R1.degree()>3)throw new Error("R1 Polynomial is not well calculated")})(),e&&e.info("> Computing R2 polynomial");(function(){if(m.R2=Js.lagrangePolynomialInterpolation([y.S2.h2w3[0],y.S2.h2w3[1],y.S2.h2w3[2],y.S2.h3w3[0],y.S2.h3w3[1],y.S2.h3w3[2]],[m.C2.evaluate(y.S2.h2w3[0]),m.C2.evaluate(y.S2.h2w3[1]),m.C2.evaluate(y.S2.h2w3[2]),m.C2.evaluate(y.S2.h3w3[0]),m.C2.evaluate(y.S2.h3w3[1]),m.C2.evaluate(y.S2.h3w3[2])],r),m.R2.degree()>5)throw new Error("R2 Polynomial is not well calculated")})(),e&&e.info("> Computing F polynomial");await async function(){e&&e.info("··· Computing F polynomial");m.F=Js.fromPolynomial(m.C0,r,e),m.F.sub(m.R0),m.F.divByZerofier(8,w.xi);let t=Js.fromPolynomial(m.C1,r,e);t.sub(m.R1),t.mulScalar(w.alpha),t.divByZerofier(4,w.xi);let a=Js.fromPolynomial(m.C2,r,e);if(a.sub(m.R2),a.mulScalar(d.square(w.alpha)),a.divByZerofier(3,w.xi),a.divByZerofier(3,w.xiw),m.F.add(t),m.F.add(a),m.F.degree()>=9*s.domainSize-6)throw new Error("F Polynomial is not well calculated")}(),e&&e.info("> Computing W1 multi exponentiation");let a=await m.F.multiExponentiation(C,"W1");return A.addPolynomial("W1",a),0}(),globalThis.gc&&globalThis.gc(),e&&e.info("> ROUND 5"),await async function(){e&&e.info("> Computing challenge y");const t=new Lr(r);t.addScalar(w.alpha),t.addPolCommitment(A.getPolynomial("W1")),w.y=t.getChallenge(),e&&e.info("··· challenges.y: "+d.toString(w.y));e&&e.info("> Computing L polynomial");await async function(){e&&e.info("··· Computing L polynomial");const t=m.R0.evaluate(w.y),a=m.R1.evaluate(w.y),o=m.R2.evaluate(w.y);let i=d.sub(w.y,y.S0.h0w8[0]);for(let t=1;t<8;t++)i=d.mul(i,d.sub(w.y,y.S0.h0w8[t]));let n=d.sub(w.y,y.S1.h1w4[0]);for(let t=1;t<4;t++)n=d.mul(n,d.sub(w.y,y.S1.h1w4[t]));let l=d.sub(w.y,y.S2.h2w3[0]);for(let t=1;t<3;t++)l=d.mul(l,d.sub(w.y,y.S2.h2w3[t]));for(let t=0;t<3;t++)l=d.mul(l,d.sub(w.y,y.S2.h3w3[t]));let c=d.mul(n,l),u=d.mul(w.alpha,d.mul(i,l)),_=d.mul(d.square(w.alpha),d.mul(i,n));b.denH1=n,b.denH2=l,m.L=Js.fromPolynomial(m.C0,r,e),m.L.subScalar(t),m.L.mulScalar(c);let g=Js.fromPolynomial(m.C1,r,e);g.subScalar(a),g.mulScalar(u);let f=Js.fromPolynomial(m.C2,r,e);f.subScalar(o),f.mulScalar(_),m.L.add(g),m.L.add(f),e&&e.info("> Computing ZT polynomial");await async function(){m.ZT=Js.zerofierPolynomial([y.S0.h0w8[0],y.S0.h0w8[1],y.S0.h0w8[2],y.S0.h0w8[3],y.S0.h0w8[4],y.S0.h0w8[5],y.S0.h0w8[6],y.S0.h0w8[7],y.S1.h1w4[0],y.S1.h1w4[1],y.S1.h1w4[2],y.S1.h1w4[3],y.S2.h2w3[0],y.S2.h2w3[1],y.S2.h2w3[2],y.S2.h3w3[0],y.S2.h3w3[1],y.S2.h3w3[2]],r)}();const p=m.ZT.evaluate(w.y);if(m.F.mulScalar(p),m.L.sub(m.F),m.L.degree()>=9*s.domainSize)throw new Error("L Polynomial is not well calculated");delete h.L}(),e&&e.info("> Computing ZTS2 polynomial");await async function(){m.ZTS2=Js.zerofierPolynomial([y.S1.h1w4[0],y.S1.h1w4[1],y.S1.h1w4[2],y.S1.h1w4[3],y.S2.h2w3[0],y.S2.h2w3[1],y.S2.h2w3[2],y.S2.h3w3[0],y.S2.h3w3[1],y.S2.h3w3[2]],r)}();let a=m.ZTS2.evaluate(w.y);a=d.inv(a),m.L.mulScalar(a);const o=Js.fromCoefficientsArray([d.neg(w.y),d.one],r);e&&e.info("> Computing W' = L / ZTS2 polynomial");const i=m.L.divBy(o);if(i.degree()>0)throw new Error(`Degree of L(X)/(ZTS2(y)(X-y)) remainder is ${i.degree()} and should be 0`);if(m.L.degree()>=9*s.domainSize-1)throw new Error("Degree of L(X)/(ZTS2(y)(X-y)) is not correct");e&&e.info("> Computing W' multi exponentiation");let n=await m.L.multiExponentiation(C,"W2");return A.addPolynomial("W2",n),0}(),delete m.C0,delete m.C1,delete m.C2,delete m.R1,delete m.R2,delete m.F,delete m.L,delete m.ZT,delete m.ZTS2,await l.close(),globalThis.gc&&globalThis.gc(),A.addEvaluation("inv",function(){let t=w.xi;for(let a=0;a<s.power;a++)t=d.square(t);b.zh=d.sub(t,d.one),function(t,a,e,o){const i=o.Fr,n=a.length,l=i.mul(i.e(n),i.exp(a[0],n-2)),c=[];for(let o=0;o<n;o++){const c=a[(n-1)*o%n],s=i.sub(e,a[o]);t[["LiS0_"+(o+1)]]=i.mul(i.mul(l,c),s)}}(b,y.S0.h0w8,w.y,r),function(t,a,e,o){const i=o.Fr,n=a.length,l=i.mul(i.e(n),i.exp(a[0],n-2)),c=[];for(let o=0;o<n;o++){const c=a[(n-1)*o%n],s=i.sub(e,a[o]);t[["LiS1_"+(o+1)]]=i.mul(i.mul(l,c),s)}}(b,y.S1.h1w4,w.y,r),function(t,a,e,o,i,n,l){const c=l.Fr,s=[],r=c.mul(c.e(3),a[0]),d=c.sub(i,n);let u=c.mul(r,d);for(let e=0;e<3;e++){const i=a[2*e%3],n=c.sub(o,a[e]);t[["LiS2_"+(e+1)]]=c.mul(u,c.mul(i,n))}const _=c.mul(c.e(3),e[0]),g=c.sub(n,i);u=c.mul(_,g);for(let a=0;a<3;a++){const i=e[2*a%3],n=c.sub(o,e[a]);t[["LiS2_"+(a+1+3)]]=c.mul(u,c.mul(i,n))}}(b,y.S2.h2w3,y.S2.h3w3,w.y,w.xi,w.xiw,r);const a=Math.max(1,s.nPublic);let e=d.one;for(let t=0;t<a;t++)b["Li_"+(t+1)]=d.mul(d.e(s.domainSize),d.sub(w.xi,e)),e=d.mul(e,d.w[s.power]);let o=d.one;for(const t of Object.values(b))if(Array.isArray(t))for(const a of t)o=d.mul(o,a);else o=d.mul(o,t);return d.inv(o)}());let x=A.toObjectProof();x.protocol="fflonk",x.curve=r.name;let F=[];for(let t=1;t<=s.nPublic;t++){const a=t*u,e=f.slice(a,a+u);F.push(Dn.fromRprLE(e))}return e&&e.info("FFLONK PROVER FINISHED"),{proof:br(x),publicSignals:br(F)};function I(t,a){const e=t.slice(a,a+4);return new DataView(e.buffer,e.byteOffset,e.byteLength).getUint32(0,!0)}function B(t){let a=s.nVars-s.nAdditions;if(t<a)return f.slice(t*u,t*u+u);if(t<s.nVars){const e=(t-a)*u;return p.slice(e,e+u)}return d.zero}}const{unstringifyBigInts:yr}=$n;const{unstringifyBigInts:Ar}=$n;function Cr(t,a){return Dn.lt(a,t.r)}function xr(t,a){return Cr(t,Dn.fromRprLE(a))}function Fr(t,a,e,o){const i=o.Fr,n=t.length,l=i.sub(i.exp(a,n),e),c=i.mul(i.e(n),i.exp(t[0],n-2)),s=[];for(let e=0;e<n;e++){const o=t[(n-1)*e%n],r=i.sub(a,t[e]);s[e]=i.div(l,i.mul(i.mul(c,o),r))}return s}const{unstringifyBigInts:Ir}=$n;function Br(t){let a=t.toString(16);for(;a.length<64;)a="0"+a;return a=`0x${a}`,a}var Er=Object.freeze({__proto__:null,setup:async function(t,a,e,o){o&&o.info("FFLONK SETUP STARTED"),globalThis.gc&&globalThis.gc(),o&&o.info("> Reading PTau file");const{fd:i,sections:n}=await ze(a,"ptau",1);if(!n[12])throw new Error("Powers of Tau is not well prepared. Section 12 missing.");o&&o.info("> Getting curve from PTau settings");const{curve:l}=await Vc(i,n);o&&o.info("> Reading r1cs file");const{fd:c,sections:s}=await ze(t,"r1cs",1),r=await gs(c,s,{loadConstraints:!1,loadCustomGates:!0});if(r.prime!==l.r)throw new Error("r1cs curve does not match powers of tau ceremony curve");const d=l.Fr,u=l.Fr.n8,_=2*l.G1.F.n8,g=2*l.G2.F.n8;let f,p={},h={},m={nVars:r.nVars,nPublic:r.nOutputs+r.nPubInputs};const L=new xs;let b=new xs;if(o&&o.info("> Processing FFlonk constraints"),await async function(t,a,e){for(let a=0;a<m.nPublic;a++)L.push(rr(a+1,t));const o=new _r(t,rr,dr,ur,e),i=await $e(c,s,2);let n=0;for(let t=0;t<a.nConstraints;t++){e&&0!==t&&t%5e5==0&&e.info(`    processing r1cs constraints ${t}/${a.nConstraints}`);const[i,n]=o.processR1csConstraint(m,...l());L.push(...i),b.push(...n)}function l(){const t=[];return t[0]=r(),t[1]=r(),t[2]=r(),t}function r(){const t={},e=i.slice(n,n+4);n+=4;const o=new DataView(e.buffer).getUint32(0,!0),l=i.slice(n,n+(4+a.n8)*o);n+=(4+a.n8)*o;const c=new DataView(l.buffer);for(let e=0;e<o;e++){const o=c.getUint32(e*(4+a.n8),!0),i=a.F.fromRprLE(l,e*(4+a.n8)+4);t[o]=i}return t}return 0}(l.Fr,r,o),globalThis.gc&&globalThis.gc(),m.cirPower=Math.max(Zl,Ol(L.length+2-1)+1),m.domainSize=2**m.cirPower,n[2][0].size<(9*m.domainSize+18)*_)throw new Error("Powers of Tau is not big enough for this circuit size. Section 2 too small.");if(n[3][0].size<g)throw new Error("Powers of Tau is not well prepared. Section 3 too small.");o&&(o.info("----------------------------"),o.info("  FFLONK SETUP SETTINGS"),o.info(`  Curve:         ${l.name}`),o.info(`  Circuit power: ${m.cirPower}`),o.info(`  Domain size:   ${m.domainSize}`),o.info(`  Vars:          ${m.nVars}`),o.info(`  Public vars:   ${m.nPublic}`),o.info(`  Constraints:   ${L.length}`),o.info(`  Additions:     ${b.length}`),o.info("----------------------------")),o&&o.info("> computing k1 and k2");const[w,y]=function(){let t=d.two;for(;e(t,[],m.cirPower);)d.add(t,d.one);let a=d.add(t,d.one);for(;e(a,[t],m.cirPower);)d.add(a,d.one);return[t,a];function e(t,a,e){const o=2**e;let i=d.one;for(let n=0;n<o;n++){if(d.eq(t,i))return!0;for(let e=0;e<a.length;e++)if(d.eq(t,d.mul(a[e],i)))return!0;i=d.mul(i,d.w[e])}return!1}}();o&&o.info("> computing w3");const A=function(){let t=d.e(31624),a=Dn.div(3648040478639879203707734290876212514758060733402672390616367364429301415936n,Dn.e(3));return d.exp(t,a)}();o&&o.info("> computing w4");const C=d.w[2];o&&o.info("> computing w8");const x=d.w[3];o&&o.info("> computing wr");const F=function(t,a){const e=a.e(467799165886069610036046866799264026481344299079011762026774533774345988080n);return a.exp(e,2**(28-t))}(m.cirPower,l.Fr);return await async function(){o&&o.info("> Writing the zkey file");const t=await Te(e,"zkey",1,Wl,1<<22,1<<24);o&&o.info(`··· Writing Section ${jl}. Zkey Header`);await async function(t){await Me(t,jl),await t.writeULE32(Hl),await Ue(t)}(t),o&&o.info(`··· Writing Section ${Jl}. Additions`);await async function(t){await Me(t,Jl);const a=new Uint8Array(8+2*u),e=new DataView(a.buffer);for(let i=0;i<b.length;i++){o&&0!==i&&i%5e5==0&&o.info(`      writing Additions: ${i}/${b.length}`);const n=b[i];e.setUint32(0,n[0],!0),e.setUint32(4,n[1],!0),a.set(n[2],8),a.set(n[3],8+u),await t.write(a)}await Ue(t)}(t),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${Xl}. A Map`);await I(t,Xl,0,"A map"),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${tc}. B Map`);await I(t,tc,1,"B map"),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${ac}. C Map`);await I(t,ac,2,"C map"),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${ec}. QL`);await B(t,ec,3,"QL"),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${oc}. QR`);await B(t,oc,4,"QR"),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${ic}. QM`);await B(t,ic,5,"QM"),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${nc}. QO`);await B(t,nc,6,"QO"),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${lc}. QC`);await B(t,lc,7,"QC"),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Sections ${cc},${sc},${rc}. Sigma1, Sigma2 & Sigma 3`);await async function(t){const a=new xn(u*m.domainSize*3),e=new xs(m.nVars),i=new xs(m.nVars);let n=d.one;for(let t=0;t<m.domainSize;t++)t<L.length?(c(L[t][0],t),c(L[t][1],m.domainSize+t),c(L[t][2],2*m.domainSize+t)):t<m.domainSize-2?(c(0,t),c(0,m.domainSize+t),c(0,2*m.domainSize+t)):(a.set(n,t*u),a.set(d.mul(n,w),(m.domainSize+t)*u),a.set(d.mul(n,y),(2*m.domainSize+t)*u)),n=d.mul(n,d.w[m.cirPower]),o&&0!==t&&t%5e5==0&&o.info(`      writing sigma phase1: ${t}/${L.length}`);for(let t=0;t<m.nVars;t++)void 0!==i[t]?a.set(e[t],i[t]*u):console.log("Variable not used"),o&&0!==t&&t%5e5==0&&o.info(`      writing sigma phase2: ${t}/${m.nVars}`);globalThis.gc&&globalThis.gc();for(let e=0;e<3;e++){const i=0===e?cc:1===e?sc:rc;let n="S"+(e+1);p[n]=await Js.fromEvaluations(a.slice(m.domainSize*u*e,m.domainSize*u*(e+1)),l,o),h[n]=await Xs.fromPolynomial(p[n],4,l,o),await Me(t,i),await t.write(p[n].coef),await t.write(h[n].eval),await Ue(t),globalThis.gc&&globalThis.gc()}return 0;function c(t,o){let l;void 0===e[t]?i[t]=o:a.set(e[t],o*u),l=o<m.domainSize?n:o<2*m.domainSize?d.mul(n,w):d.mul(n,y),e[t]=l}}(t),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${dc}. Lagrange Polynomials`);await async function(t){await Me(t,dc);const a=Math.max(m.nPublic,1);for(let e=0;e<a;e++){let a=new xn(m.domainSize*u);a.set(d.one,e*u),await E(t,a)}await Ue(t)}(t),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${uc}. Powers of Tau`);await async function(t){await Me(t,uc),f=new xn((9*m.domainSize+18)*_),await i.readToBuffer(f,0,(9*m.domainSize+18)*_,n[2][0].p),await t.write(f),await Ue(t)}(t),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${_c}. C0`);await async function(t){let a=new gr(8,l,o);if(a.addPolynomial(0,p.QL),a.addPolynomial(1,p.QR),a.addPolynomial(2,p.QO),a.addPolynomial(3,p.QM),a.addPolynomial(4,p.QC),a.addPolynomial(5,p.S1),a.addPolynomial(6,p.S2),a.addPolynomial(7,p.S3),p.C0=a.getPolynomial(),p.C0.degree()>=8*m.domainSize)throw new Error("C0 Polynomial is not well calculated");await Me(t,_c),await t.write(p.C0.coef),await Ue(t)}(t),globalThis.gc&&globalThis.gc();o&&o.info(`··· Writing Section ${Yl}. FFlonk Header`);await async function(t){await Me(t,Yl);const a=l.q,e=8*(Math.floor((Dn.bitLength(a)-1)/64)+1);await t.writeULE32(e),await Re(t,a,e);const o=l.r,c=8*(Math.floor((Dn.bitLength(o)-1)/64)+1);let s;await t.writeULE32(c),await Re(t,o,c),await t.writeULE32(m.nVars),await t.writeULE32(m.nPublic),await t.writeULE32(m.domainSize),await t.writeULE32(b.length),await t.writeULE32(L.length),await t.write(w),await t.write(y),await t.write(A),await t.write(C),await t.write(x),await t.write(F),s=await i.read(g,n[3][0].p+g),await t.write(s);let r=await p.C0.multiExponentiation(f,"C0");await t.write(r),await Ue(t)}(t),globalThis.gc&&globalThis.gc();o&&o.info("> Writing the zkey file finished");await t.close()}(),await c.close(),await i.close(),o&&o.info("FFLONK SETUP FINISHED"),0;async function I(t,a,e,i){await Me(t,a);for(let a=0;a<L.length;a++)o&&0!==a&&a%5e5==0&&o.info(`      writing witness ${i}: ${a}/${L.length}`),await t.writeULE32(L[a][e]);await Ue(t)}async function B(t,a,e,i){let n=new xn(m.domainSize*u);for(let t=0;t<L.length;t++)n.set(L[t][e],t*u),o&&0!==t&&t%5e5==0&&o.info(`      writing ${i}: ${t}/${L.length}`);p[i]=await Js.fromEvaluations(n,l,o),h[i]=await Xs.fromPolynomial(p[i],4,l,o),await Me(t,a),await t.write(p[i].coef),await t.write(h[i].eval),await Ue(t)}async function E(t,a){const[e,o]=await Js.to4T(a,m.domainSize,[],d);return await t.write(e),await t.write(o),[e,o]}},prove:wr,fullProve:async function(t,a,e,o){const i=yr(t),n={type:"mem"};return await zc(i,a,n),await wr(e,n,o)},verify:async function(t,a,e,o){o&&o.info("FFLONK VERIFIER STARTED"),t=Ar(t),e=Ar(e);const i=await Wn(t.curve),n=function(t,a){const e=a;return e.k1=t.Fr.fromObject(a.k1),e.k2=t.Fr.fromObject(a.k2),e.w=t.Fr.fromObject(a.w),e.w3=t.Fr.fromObject(a.w3),e.w4=t.Fr.fromObject(a.w4),e.w8=t.Fr.fromObject(a.w8),e.wr=t.Fr.fromObject(a.wr),e.X_2=t.G2.fromObject(a.X_2),e.C0=t.G1.fromObject(a.C0),e}(i,t),l=new Us(i,o);l.fromObjectProof(e);const c=Ar(a);if(c.length!==n.nPublic)return o.error("Number of public signals does not match with vk"),!1;const s=i.Fr;if(o&&(o.info("----------------------------"),o.info("  FFLONK VERIFY SETTINGS"),o.info(`  Curve:         ${i.name}`),o.info(`  Circuit power: ${n.power}`),o.info(`  Domain size:   ${2**n.power}`),o.info(`  Public vars:   ${n.nPublic}`),o.info("----------------------------")),o&&o.info("> Checking commitments belong to G1"),!function(t,a,e){const o=t.G1;return o.isValid(a.polynomials.C1)&&o.isValid(a.polynomials.C2)&&o.isValid(a.polynomials.W1)&&o.isValid(a.polynomials.W2)&&o.isValid(e.C0)}(i,l,n))return o&&o.error("Proof commitments are not valid"),!1;if(o&&o.info("> Checking evaluations belong to F"),!function(t,a){return xr(t,a.evaluations.ql)&&xr(t,a.evaluations.qr)&&xr(t,a.evaluations.qm)&&xr(t,a.evaluations.qo)&&xr(t,a.evaluations.qc)&&xr(t,a.evaluations.s1)&&xr(t,a.evaluations.s2)&&xr(t,a.evaluations.s3)&&xr(t,a.evaluations.a)&&xr(t,a.evaluations.b)&&xr(t,a.evaluations.c)&&xr(t,a.evaluations.z)&&xr(t,a.evaluations.zw)&&xr(t,a.evaluations.t1w)&&xr(t,a.evaluations.t2w)}(i,l))return o&&o.error("Proof evaluations are not valid."),!1;if(o&&o.info("> Checking public inputs belong to F"),!function(t,a){for(let e=0;e<a.length;e++)if(!Cr(t,a[e]))return!1;return!0}(i,c))return o&&o.error("Public inputs are not valid."),!1;o&&o.info("> Computing challenges");const{challenges:r,roots:d}=function(t,a,e,o,i){const n=t.Fr,l={},c={},s=new Lr(t);s.addPolCommitment(e.C0);for(let t=0;t<o.length;t++)s.addScalar(n.e(o[t]));s.addPolCommitment(a.polynomials.C1),l.beta=s.getChallenge(),s.reset(),s.addScalar(l.beta),l.gamma=s.getChallenge(),s.reset(),s.addScalar(l.gamma),s.addPolCommitment(a.polynomials.C2);const r=s.getChallenge(),d=n.square(r);let u=[];u[1]=e.w8,u[2]=n.square(e.w8),u[3]=n.mul(u[2],e.w8),u[4]=n.mul(u[3],e.w8),u[5]=n.mul(u[4],e.w8),u[6]=n.mul(u[5],e.w8),u[7]=n.mul(u[6],e.w8);let _=[];_[1]=e.w4,_[2]=n.square(e.w4),_[3]=n.mul(_[2],e.w4);let g=[];g[1]=e.w3,g[2]=n.square(e.w3),c.S0={},c.S0.h0w8=[],c.S0.h0w8[0]=n.mul(d,r);for(let t=1;t<8;t++)c.S0.h0w8[t]=n.mul(c.S0.h0w8[0],u[t]);c.S1={},c.S1.h1w4=[],c.S1.h1w4[0]=n.square(c.S0.h0w8[0]);for(let t=1;t<4;t++)c.S1.h1w4[t]=n.mul(c.S1.h1w4[0],_[t]);c.S2={},c.S2.h2w3=[],c.S2.h2w3[0]=n.mul(c.S1.h1w4[0],d),c.S2.h2w3[1]=n.mul(c.S2.h2w3[0],g[1]),c.S2.h2w3[2]=n.mul(c.S2.h2w3[0],g[2]),c.S2.h3w3=[],c.S2.h3w3[0]=n.mul(c.S2.h2w3[0],e.wr),c.S2.h3w3[1]=n.mul(c.S2.h3w3[0],g[1]),c.S2.h3w3[2]=n.mul(c.S2.h3w3[0],g[2]),l.xi=n.mul(n.square(c.S2.h2w3[0]),c.S2.h2w3[0]),l.xiw=n.mul(l.xi,n.w[e.power]),l.xiN=l.xi,e.domainSize=1;for(let t=0;t<e.power;t++)l.xiN=n.square(l.xiN),e.domainSize*=2;s.reset(),s.addScalar(r),s.addScalar(a.evaluations.ql),s.addScalar(a.evaluations.qr),s.addScalar(a.evaluations.qm),s.addScalar(a.evaluations.qo),s.addScalar(a.evaluations.qc),s.addScalar(a.evaluations.s1),s.addScalar(a.evaluations.s2),s.addScalar(a.evaluations.s3),s.addScalar(a.evaluations.a),s.addScalar(a.evaluations.b),s.addScalar(a.evaluations.c),s.addScalar(a.evaluations.z),s.addScalar(a.evaluations.zw),s.addScalar(a.evaluations.t1w),s.addScalar(a.evaluations.t2w),l.alpha=s.getChallenge(),s.reset(),s.addScalar(l.alpha),s.addPolCommitment(a.polynomials.W1),l.y=s.getChallenge(),i&&(i.info("··· challenges.beta:  "+n.toString(l.beta)),i.info("··· challenges.gamma: "+n.toString(l.gamma)),i.info("··· challenges.xi:    "+n.toString(l.xi)),i.info("··· challenges.alpha: "+n.toString(l.alpha)),i.info("··· challenges.y:     "+n.toString(l.y)));return{challenges:l,roots:c}}(i,l,n,c,o);o&&o.info("> Computing Zero polynomial evaluation Z_H(xi)"),r.zh=s.sub(r.xiN,s.one),r.invzh=s.inv(r.zh),o&&o.info("> Computing Lagrange evaluations");const u=await async function(t,a,e){const o=t.Fr,i=Math.max(1,e.nPublic),n=new xn(i*o.n8);let l=new xn(i*o.n8),c=o.one;for(let t=0;t<i;t++){const i=t*o.n8;n.set(o.mul(c,a.zh),i),l.set(o.mul(o.e(e.domainSize),o.sub(a.xi,c)),i),c=o.mul(c,e.w)}l=await o.batchInverse(l);let s=[];for(let t=0;t<i;t++){const a=t*o.n8;s[t+1]=o.mul(n.slice(a,a+o.n8),l.slice(a,a+o.n8))}return s}(i,r,n);o&&o.info("> Computing polynomial identities PI(X)");const _=function(t,a,e){const o=t.Fr;let i=o.zero;for(let t=0;t<a.length;t++){const n=o.e(a[t]);i=o.sub(i,o.mul(n,e[t+1]))}return i}(i,c,u);o&&o.info("> Computing r0(y)");const g=function(t,a,e,o,i){const n=o.Fr,l=Fr(e.S0.h0w8,a.y,a.xi,o);i&&i.info("··· Computing r0(y)");let c=n.zero;for(let a=0;a<8;a++){let o=[];o[1]=e.S0.h0w8[a];for(let t=2;t<8;t++)o[t]=n.mul(o[t-1],e.S0.h0w8[a]);let i=n.add(t.evaluations.ql,n.mul(t.evaluations.qr,o[1]));i=n.add(i,n.mul(t.evaluations.qo,o[2])),i=n.add(i,n.mul(t.evaluations.qm,o[3])),i=n.add(i,n.mul(t.evaluations.qc,o[4])),i=n.add(i,n.mul(t.evaluations.s1,o[5])),i=n.add(i,n.mul(t.evaluations.s2,o[6])),i=n.add(i,n.mul(t.evaluations.s3,o[7])),c=n.add(c,n.mul(i,l[a]))}return c}(l,r,d,i,o);o&&o.info("> Computing r1(y)");const f=function(t,a,e,o,i,n){const l=i.Fr,c=Fr(e.S1.h1w4,a.y,a.xi,i);n&&n.info("··· Computing T0(xi)");let s=l.mul(t.evaluations.ql,t.evaluations.a);s=l.add(s,l.mul(t.evaluations.qr,t.evaluations.b)),s=l.add(s,l.mul(t.evaluations.qm,l.mul(t.evaluations.a,t.evaluations.b))),s=l.add(s,l.mul(t.evaluations.qo,t.evaluations.c)),s=l.add(s,t.evaluations.qc),s=l.add(s,o),s=l.mul(s,a.invzh),n&&n.info("··· Computing C1(h_1ω_4^i) values");let r=l.zero;for(let a=0;a<4;a++){let o=t.evaluations.a;o=l.add(o,l.mul(e.S1.h1w4[a],t.evaluations.b));const i=l.square(e.S1.h1w4[a]);o=l.add(o,l.mul(i,t.evaluations.c)),o=l.add(o,l.mul(l.mul(i,e.S1.h1w4[a]),s)),r=l.add(r,l.mul(o,c[a]))}return r}(l,r,d,_,i,o);o&&o.info("> Computing r2(y)");const p=function(t,a,e,o,i,n,l){const c=n.Fr,s=function(t,a,e,o,i){const n=i.Fr,l=[],c=t[0].length,s=c*t.length,r=n.exp(a,s),d=n.mul(n.add(e,o),n.exp(a,c)),u=n.mul(e,o),_=n.add(n.sub(r,d),u);let g=n.mul(n.mul(n.e(c),t[0][0]),n.sub(e,o));for(let e=0;e<c;e++){const o=t[0][(c-1)*e%c],i=n.sub(a,t[0][e]),s=n.mul(g,n.mul(o,i));l[e]=n.div(_,s)}g=n.mul(n.mul(n.e(c),t[1][0]),n.sub(o,e));for(let e=0;e<c;e++){const o=t[1][(c-1)*e%c],i=n.sub(a,t[1][e]),s=n.mul(g,n.mul(o,i));l[e+c]=n.div(_,s)}return l}([e.S2.h2w3,e.S2.h3w3],a.y,a.xi,a.xiw,n);l&&l.info("··· Computing T1(xi)");let r=c.sub(t.evaluations.z,c.one);r=c.mul(r,o),r=c.mul(r,a.invzh),l&&l.info("··· Computing T2(xi)");const d=c.mul(a.beta,a.xi),u=c.add(t.evaluations.a,c.add(d,a.gamma)),_=c.add(t.evaluations.b,c.add(c.mul(d,i.k1),a.gamma)),g=c.add(t.evaluations.c,c.add(c.mul(d,i.k2),a.gamma)),f=c.mul(u,c.mul(_,c.mul(g,t.evaluations.z))),p=c.add(t.evaluations.a,c.add(c.mul(a.beta,t.evaluations.s1),a.gamma)),h=c.add(t.evaluations.b,c.add(c.mul(a.beta,t.evaluations.s2),a.gamma)),m=c.add(t.evaluations.c,c.add(c.mul(a.beta,t.evaluations.s3),a.gamma)),L=c.mul(p,c.mul(h,c.mul(m,t.evaluations.zw)));let b=c.sub(f,L);b=c.mul(b,a.invzh),l&&l.info("··· Computing C2(h_2ω_3^i) values");let w=c.zero;for(let a=0;a<3;a++){let o=c.add(t.evaluations.z,c.mul(e.S2.h2w3[a],r));o=c.add(o,c.mul(c.square(e.S2.h2w3[a]),b)),w=c.add(w,c.mul(o,s[a]))}l&&l.info("··· Computing C2(h_3ω_3^i) values");for(let a=0;a<3;a++){let o=c.add(t.evaluations.zw,c.mul(e.S2.h3w3[a],t.evaluations.t1w));o=c.add(o,c.mul(c.square(e.S2.h3w3[a]),t.evaluations.t2w)),w=c.add(w,c.mul(o,s[a+3]))}return w}(l,r,d,u[1],n,i,o);o&&o.info("> Computing F");const h=function(t,a,e,o,i){const n=t.G1,l=t.Fr;let c=l.sub(o.y,i.S0.h0w8[0]);for(let t=1;t<8;t++)c=l.mul(c,l.sub(o.y,i.S0.h0w8[t]));o.temp=c;let s=l.sub(o.y,i.S1.h1w4[0]);for(let t=1;t<4;t++)s=l.mul(s,l.sub(o.y,i.S1.h1w4[t]));let r=l.sub(o.y,i.S2.h2w3[0]);for(let t=1;t<3;t++)r=l.mul(r,l.sub(o.y,i.S2.h2w3[t]));for(let t=0;t<3;t++)r=l.mul(r,l.sub(o.y,i.S2.h3w3[t]));o.quotient1=l.mul(o.alpha,l.div(c,s)),o.quotient2=l.mul(l.square(o.alpha),l.div(c,r));let d=n.timesFr(a.polynomials.C1,o.quotient1),u=n.timesFr(a.polynomials.C2,o.quotient2);return n.add(e.C0,n.add(d,u))}(i,l,n,r,d);o&&o.info("> Computing E");const m=function(t,a,e,o,i,n,l){const c=t.G1,s=t.Fr;let r=s.mul(n,e.quotient1),d=s.mul(l,e.quotient2);return c.timesFr(c.one,s.add(i,s.add(r,d)))}(i,0,r,0,g,f,p);o&&o.info("> Computing J");const L=function(t,a,e){const o=t.G1;return o.timesFr(a.polynomials.W1,e.temp)}(i,l,r);o&&o.info("> Validate all evaluations with a pairing");const b=await async function(t,a,e,o,i,n,l){const c=t.G1;let s=c.timesFr(a.polynomials.W2,e.y);s=c.add(c.sub(c.sub(i,n),l),s);const r=t.G2.one,d=a.polynomials.W2,u=o.X_2;return await t.pairingEq(c.neg(s),r,d,u)}(i,l,r,n,h,m,L);return o&&(b?o.info("PROOF VERIFIED SUCCESSFULLY"):o.warn("Invalid Proof")),o&&o.info("FFLONK VERIFIER FINISHED"),b},exportSolidityVerifier:qs,exportSolidityCallData:async function(t,a){const e=Ir(a),o=Ir(t),i=await Wn(e.curve);i.G1,i.Fr;let n="";for(let t=0;t<o.length;t++)""!==n&&(n+=","),n+=Br(o[t]);return`[${Br(e.polynomials.C1[0])}, ${Br(e.polynomials.C1[1])},${Br(e.polynomials.C2[0])},${Br(e.polynomials.C2[1])},${Br(e.polynomials.W1[0])},${Br(e.polynomials.W1[1])},${Br(e.polynomials.W2[0])},${Br(e.polynomials.W2[1])},${Br(e.evaluations.ql)},${Br(e.evaluations.qr)},${Br(e.evaluations.qm)},${Br(e.evaluations.qo)},${Br(e.evaluations.qc)},${Br(e.evaluations.s1)},${Br(e.evaluations.s2)},${Br(e.evaluations.s3)},${Br(e.evaluations.a)},${Br(e.evaluations.b)},${Br(e.evaluations.c)},${Br(e.evaluations.z)},${Br(e.evaluations.zw)},${Br(e.evaluations.t1w)},${Br(e.evaluations.t2w)},${Br(e.evaluations.inv)}],[${n}]`}});return t.fflonk=Er,t.groth16=kc,t.plonk=sr,t.powersOfTau=ns,t.r1cs=ms,t.wtns=ws,t.zKey=Ms,Object.defineProperty(t,"__esModule",{value:!0}),t}({});
